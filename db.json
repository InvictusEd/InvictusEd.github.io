{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME.txt","path":"CNAME.txt","modified":0,"renderable":0},{"_id":"source/Staticfile.txt","path":"Staticfile.txt","modified":0,"renderable":0},{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/原icp.png","path":"medias/原icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/7.jpg","path":"medias/banner/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/8.jpg","path":"medias/banner/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/Staticfile.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1726821202000},{"_id":"source/CNAME.txt","hash":"b35862ac7977172f08c5ba36bdabfc397cb7266b","modified":1726821202000},{"_id":"source/404/index.md","hash":"a85ff81be57eaf8b816dc81cd616802573a2065f","modified":1726821202000},{"_id":"source/_posts/CampusGuideSystem.md","hash":"125dda530e5a4982005a5ecdc56b2531cb9a9761","modified":1726821202000},{"_id":"source/_posts/DeployBlog.md","hash":"5a0c4d83fb1aa2d95acb20cf85eadaebd7c1b7aa","modified":1726821202000},{"_id":"source/_posts/MarkdownSyntax.md","hash":"9a50be5ba87178351aa5c8fe51e4a860915c7e94","modified":1726821202000},{"_id":"source/_posts/ElectricCharge-zhengfumei.md","hash":"0e166866045ee274b11b887d8664631fc45b69c8","modified":1726821202000},{"_id":"source/_posts/OnlineEducation.md","hash":"1fd2d0b94bbf0a9270abf9e2b023d2eab6c00c36","modified":1726821202000},{"_id":"source/_posts/Unity-AnimationSystem-skeletal animation.md","hash":"5db8bd2299ae700a946011bf4937ffc5200f7fdf","modified":1726821202000},{"_id":"source/_data/friends.json","hash":"c0324056a4050b46e5be444ae079e8fb4b3dab4e","modified":1726821202000},{"_id":"source/about/index.md","hash":"ff6124a312ff6177e335fd152bb41c3bcc3657ce","modified":1726821202000},{"_id":"source/categories/index.md","hash":"b82adb645e327b2d88d8072cce3c30314a4acb82","modified":1726821202000},{"_id":"source/contact/index.md","hash":"3f15a58e21ebec8a507546ce3777ae14ef264420","modified":1726821202000},{"_id":"source/friends/index.md","hash":"ee7f7a3696b18c220f571a59ccf081b7f6028945","modified":1726821202000},{"_id":"source/tags/index.md","hash":"deb04b519200c499906de44b1625eb857142a22c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1726821202000},{"_id":"themes/hexo-theme-matery/README.md","hash":"ddaf6310154e314385d63041da61c418055314f6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"a2267aed16d52f4adeb13f555d36d076855387af","modified":1726821202000},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"1c633471ec774083193b3e21fe2d299424e55fb8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"2ed57824573d7bed71e56023ed92500734a8886d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a2695fdb7579a77daec7773a9bb8e71b9edbf16b","modified":1726821202000},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"5b75b057c8d445fc9457cc7255b6e288cf8bd4da","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"36f8d3e530e8144bf80d0772284edd9b0da362fe","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"0b4c2d3de7090770e92753368a57f74c0fe02152","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"534511d9f38f281b531e24c19d9c1526cc7e5e27","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"c1a4f1ae1cd515e305031091be53b0f6087852f3","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"922b32d758d5cdf8fbed9e67a197be0075706d3c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"1656c2db90e24a360282d15c71144b4f14edb43d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"13ea3aabb9181f5b765a535e24e7540f1f8f66fd","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"3d4f40121dbb75bcb71837c35ec5ee17cdffae31","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"acd18121108659b3dd7a94c10943e5f6a4938239","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"c35e4254ff0738878f65251a657b4fdcafc4b270","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"4fcfa5a9ac32382453be9c97e448c60463ec66d3","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"bf8caf85f3f03167f2cf431f4b04195f83de8d05","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"6d61bcd127370185c93ff7a268ef483e0d2e9934","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"60a65b6b181bc77febf71e572e884a61aed91fc8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"bf96ff47df2d81bf2edb2a8c6737e36b8b08aca3","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"738b83cd90fe1b26971d803fc89c56193323da1e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"cda18036a6c782dee122a33f3bba759f3377a68c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"a10df7abc9bcac399bcabf727c8491294430dfb0","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"045f3aaade1dc6749a1f824b0405b5fdb9e041e4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"2658cb73ef984a30b248351d7858ee15596a6e7a","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"ff8b299df312416ae03d6969b44bdc1394a68717","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"bb25a6fa51eb5ebfba687b2cbadff6c7a4b4bfef","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1726821202000},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"79dfdf68d675c17782271647283c568d086e4b98","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"8b4b91ac4c17dedb73072d2e0d0665111e1b3d89","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"18dcfa4a8da8847b64be75f287f45c0e830bbcab","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/原icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"89fb099880771c23dce3005a87db36053c8c491c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"10a034ac0b4ebe97ec5916b092b36fa2d6e9edd0","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"9e196ab241799126e6a2dd23ee1708b1505ccbf0","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"f1a273e896538fa4e11cb70acc5ec7e88d8b6c4c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"a7307bfaeb338499c464e77a233d67953f851e49","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"a57ee68d11601b0fd8e5037fc241ff65a754473c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"670fb01e4930ae46fe8d6d2b75ead288f54e8e61","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"c34acd6818df6db6be41a2e331886765d601f2eb","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"3ad4f4e4b1fb3edee3d4ba25e6cdfed2f0b88a54","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"13517529affa39e2585c591acae6dc336b6aa917","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"509c56c80732a1cd80df8f2b4b0ac1128c31999f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"48dc33b657b1836c8e323d3255c0b994155172d8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"fbceceda681be554f7664fba6700c956d90aed16","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"8a4a55db46c5dbfef9c6703fa2d04e89cbfcf633","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"1e1f02bfa89e179fe2dd1383273b8812aa873418","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"0613c7ebba55ee47ef302c0f7766324692f899a7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"a22acd7697f36e7d4cc31a853c70e776eac54bb1","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"0ccb2c814a7e4ca12c4778821633809cb0361eaa","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"d1ffd6340cdbf72890ccb67f32015eafc5df51a7","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"8ab907083fecaaa2a9ec93b27f884ad74573705c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"326e1d8f0b23f6df95cd6784fdf330bc6414ecd0","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"ea845c59bee4a5c6db774b8d8060f5641b789ae9","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"eb8914f6b1797b45ee0883e6089d92695d9f9441","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/8.jpg","hash":"a3679ca600f853635b0f4831ac584c678b2ccb5f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"0f7f08985ee63874bdc7d4791bacb94aec0835be","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"4d3b764f549eb118a360fc1b224d677c6931ef1d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"907bfbbe295332750575900984a00136de0f0e90","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"8028c6357d2bebb58de470d78ac7dcc1ed11bc77","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"d92687d30fa0d43f9ae71009398507bf813a6875","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"be7f26d6f063cfec5440517848ae5943adae1f54","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"6ff1122e81c37f2f488955f9b68be657baf5fa42","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"d04319d6032ede761c363f3e225c6f915533efe1","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/7.jpg","hash":"8435a4b3e421dcb7d46192445d1f7292a51ebcf2","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"485b41f6624e52d987bfba7d1f84cf8d37c178e2","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"5f4fa6cef61ca24b036c8c5dc3059d8d366e35b5","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"db4574d5232e6d63889da0a4fd09dc60709e7114","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1726821202000},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"899e653846d7ff972f8e99cab330ab48a053d23f","modified":1726821202000},{"_id":"public/atom.xml","hash":"93439506b8e752409fbe18250363b64a96e7a712","modified":1726901782037},{"_id":"public/search.xml","hash":"2cd6ad476104e7239c033c2eece75ebc61ea4e48","modified":1726901782037},{"_id":"public/Staticfile.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1726901782037},{"_id":"public/about/index.html","hash":"3810949a31e23d6cd6d3a2c485356d7a295e7cd7","modified":1726901782037},{"_id":"public/404/index.html","hash":"8953800e6c7731a52735de3fcbef85b7559bb93f","modified":1726901782037},{"_id":"public/categories/index.html","hash":"e4c12cf5f6f788a6d2344b92d781d748550d8c63","modified":1726901782037},{"_id":"public/contact/index.html","hash":"ec7df5dd316d81d2e5e645db9bc86d112cd99055","modified":1726901782037},{"_id":"public/friends/index.html","hash":"76a378f1d2686f96c2db1ac1868060a95cda0258","modified":1726901782037},{"_id":"public/tags/index.html","hash":"518e0cf567efcea1aedb15163579289a3b2572c6","modified":1726901782037},{"_id":"public/2024/05/27/OnlineEducation/index.html","hash":"5fd0aac31ed142ead9f9364de25c94671b270f08","modified":1726901782037},{"_id":"public/2023/04/15/DeployBlog/index.html","hash":"5c0629ad21f93765e823e928296729c2e314ef66","modified":1726901782037},{"_id":"public/2023/03/18/ElectricCharge-zhengfumei/index.html","hash":"653888d42e6a6945f459a07a041aef46e631bede","modified":1726901782037},{"_id":"public/2023/01/16/CampusGuideSystem/index.html","hash":"0972fd68f4702df1a3b603ce4e4b0895629c16d0","modified":1726901782037},{"_id":"public/2022/07/28/Unity-AnimationSystem-skeletal animation/index.html","hash":"e29adb983ec9b97ae9831d27ccfa841653744275","modified":1726901782037},{"_id":"public/2022/02/05/MarkdownSyntax/index.html","hash":"a57e7a7fb2f74ca34925cd281e2bdd5009bcfca1","modified":1726901782037},{"_id":"public/archives/index.html","hash":"f2be59a0240276e5bd5dda6f800906c675f679c2","modified":1726901782037},{"_id":"public/archives/2022/index.html","hash":"92f6aa9e53be579758f26934b5237d2b8da57fe0","modified":1726901782037},{"_id":"public/archives/2022/02/index.html","hash":"1e82e52e09dce7e52bdcd097b7c8a6487ef88a93","modified":1726901782037},{"_id":"public/archives/2022/07/index.html","hash":"6857302bdc719303f9c1ac239a9f1a079e70e3bc","modified":1726901782037},{"_id":"public/archives/2023/index.html","hash":"f469a29acfaaa25def004de34a8d834b34ffd06a","modified":1726901782037},{"_id":"public/archives/2023/01/index.html","hash":"a50d156c5538eaebd9b537799a2d8aa362d4d2f0","modified":1726901782037},{"_id":"public/archives/2023/03/index.html","hash":"1de3e1535d5382b4783d8106b179eda83fc779b3","modified":1726901782037},{"_id":"public/archives/2023/04/index.html","hash":"1ae758c169742dd41876abd0491a8a9ed6396b1a","modified":1726901782037},{"_id":"public/archives/2024/index.html","hash":"680e0c1dbff9f4e9591aff1416d1d59894480dab","modified":1726901782037},{"_id":"public/archives/2024/05/index.html","hash":"8d7592847e69da313c2332e569f2d571d804517c","modified":1726901782037},{"_id":"public/categories/C/index.html","hash":"6a08ef4e56188abaeb1d3d7b87219d3ac9d904ee","modified":1726901782037},{"_id":"public/categories/Hexo/index.html","hash":"d29ea28cf3e6a92c3de8a71150a12aa78cf093cb","modified":1726901782037},{"_id":"public/categories/Makrdown/index.html","hash":"682452762ed8d4fe3e3d22ea4963695df7684c3a","modified":1726901782037},{"_id":"public/index.html","hash":"be16630ba3ba5a03b9046c05458b4842428ba6fa","modified":1726901782037},{"_id":"public/categories/Project/index.html","hash":"190a6a0a15204e027b938b0448739a35d6809bab","modified":1726901782037},{"_id":"public/categories/Unity/index.html","hash":"f936c549fd40effb5c34fc63593501201f84eb50","modified":1726901782037},{"_id":"public/tags/C/index.html","hash":"31917ce393f0a54159692df5f7da209767173e84","modified":1726901782037},{"_id":"public/tags/Hexo/index.html","hash":"c33911faf383fc6512ef3c672891568e217f45b6","modified":1726901782037},{"_id":"public/tags/Git/index.html","hash":"69620ce08d953745b0bb75b3c8fa6ec771631342","modified":1726901782037},{"_id":"public/tags/Nginx/index.html","hash":"1c7830215bcdc6ef735642bcc049e0ad6a2def4b","modified":1726901782037},{"_id":"public/tags/云服务器/index.html","hash":"6532d4d474f2258365e101b55d86d138789df163","modified":1726901782037},{"_id":"public/tags/Markdown/index.html","hash":"116e4d06dc7b4c334d321a43f99705e1f2c251e9","modified":1726901782037},{"_id":"public/tags/Java/index.html","hash":"b86cd896e058ce85729af79fb9d7a327eff2099f","modified":1726901782037},{"_id":"public/tags/Spring-Boot/index.html","hash":"35f90ca043208c96731a3a772a37374c01f3eff5","modified":1726901782037},{"_id":"public/tags/Spring-Cloud/index.html","hash":"eaaea69d40643d69530f0b3239d6cce4e1d99562","modified":1726901782037},{"_id":"public/tags/Vue/index.html","hash":"f44e59d9095ea4079297505b80444b26a142acc0","modified":1726901782037},{"_id":"public/tags/Unity/index.html","hash":"a5727065487cab302e06fb914b81f08201ee2c9e","modified":1726901782037},{"_id":"public/CNAME.txt","hash":"b35862ac7977172f08c5ba36bdabfc397cb7266b","modified":1726901782037},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1726901782037},{"_id":"public/medias/icp.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1726901782037},{"_id":"public/medias/原icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1726901782037},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1726901782037},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1726901782037},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1726901782037},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1726901782037},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1726901782037},{"_id":"public/favicon.png","hash":"48dc33b657b1836c8e323d3255c0b994155172d8","modified":1726901782037},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1726901782037},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1726901782037},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1726901782037},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1726901782037},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1726901782037},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1726901782037},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1726901782037},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1726901782037},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1726901782037},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1726901782037},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1726901782037},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1726901782037},{"_id":"public/medias/reward/wechat.png","hash":"a7307bfaeb338499c464e77a233d67953f851e49","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"670fb01e4930ae46fe8d6d2b75ead288f54e8e61","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"c34acd6818df6db6be41a2e331886765d601f2eb","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"3ad4f4e4b1fb3edee3d4ba25e6cdfed2f0b88a54","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"13517529affa39e2585c591acae6dc336b6aa917","modified":1726901782037},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"509c56c80732a1cd80df8f2b4b0ac1128c31999f","modified":1726901782037},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1726901782037},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1726901782037},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1726901782037},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1726901782037},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1726901782037},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1726901782037},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1726901782037},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1726901782037},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1726901782037},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1726901782037},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1726901782037},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1726901782037},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1726901782037},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1726901782037},{"_id":"public/css/gallery.css","hash":"79dfdf68d675c17782271647283c568d086e4b98","modified":1726901782037},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1726901782037},{"_id":"public/css/matery.css","hash":"8b4b91ac4c17dedb73072d2e0d0665111e1b3d89","modified":1726901782037},{"_id":"public/js/gallery-encrypt.js","hash":"18dcfa4a8da8847b64be75f287f45c0e830bbcab","modified":1726901782037},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1726901782037},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1726901782037},{"_id":"public/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1726901782037},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1726901782037},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1726901782037},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1726901782037},{"_id":"public/js/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1726901782037},{"_id":"public/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1726901782037},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1726901782037},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1726901782037},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1726901782037},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1726901782037},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1726901782037},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1726901782037},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1726901782037},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1726901782037},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1726901782037},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1726901782037},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1726901782037},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1726901782037},{"_id":"public/libs/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1726901782037},{"_id":"public/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1726901782037},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1726901782037},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1726901782037},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1726901782037},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1726901782037},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1726901782037},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1726901782037},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1726901782037},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.css","hash":"89fb099880771c23dce3005a87db36053c8c491c","modified":1726901782037},{"_id":"public/libs/justifiedGallery/justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1726901782037},{"_id":"public/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1726901782037},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1726901782037},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1726901782037},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1726901782037},{"_id":"public/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1726901782037},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1726901782037},{"_id":"public/libs/others/TencentCaptcha.js","hash":"10a034ac0b4ebe97ec5916b092b36fa2d6e9edd0","modified":1726901782037},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1726901782037},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1726901782037},{"_id":"public/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1726901782037},{"_id":"public/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1726901782037},{"_id":"public/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1726901782037},{"_id":"public/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1726901782037},{"_id":"public/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1726901782037},{"_id":"public/libs/prism/prism.css","hash":"f1a273e896538fa4e11cb70acc5ec7e88d8b6c4c","modified":1726901782037},{"_id":"public/libs/others/sakura.js","hash":"9e196ab241799126e6a2dd23ee1708b1505ccbf0","modified":1726901782037},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1726901782037},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1726901782037},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1726901782037},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1726901782037},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1726901782037},{"_id":"public/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1726901782037},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1726901782037},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1726901782037},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1726901782037},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1726901782037},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1726901782037},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1726901782037},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1726901782037},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1726901782037},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1726901782037},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1726901782037},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1726901782037},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1726901782037},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1726901782037},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1726901782037},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1726901782037},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1726901782037},{"_id":"public/medias/reward/alipay.jpg","hash":"fbceceda681be554f7664fba6700c956d90aed16","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"1e1f02bfa89e179fe2dd1383273b8812aa873418","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"0613c7ebba55ee47ef302c0f7766324692f899a7","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"a22acd7697f36e7d4cc31a853c70e776eac54bb1","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"0ccb2c814a7e4ca12c4778821633809cb0361eaa","modified":1726901782037},{"_id":"public/libs/awesome/css/all.css","hash":"8a4a55db46c5dbfef9c6703fa2d04e89cbfcf633","modified":1726901782037},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1726901782037},{"_id":"public/libs/awesome/css/all.min.css","hash":"a57ee68d11601b0fd8e5037fc241ff65a754473c","modified":1726901782037},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1726901782037},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1726901782037},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1726901782037},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"d1ffd6340cdbf72890ccb67f32015eafc5df51a7","modified":1726901782037},{"_id":"public/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"8ab907083fecaaa2a9ec93b27f884ad74573705c","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"326e1d8f0b23f6df95cd6784fdf330bc6414ecd0","modified":1726901782037},{"_id":"public/libs/mermaid/mermaid.min.js","hash":"be7f26d6f063cfec5440517848ae5943adae1f54","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"ea845c59bee4a5c6db774b8d8060f5641b789ae9","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"eb8914f6b1797b45ee0883e6089d92695d9f9441","modified":1726901782037},{"_id":"public/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1726901782037},{"_id":"public/medias/banner/8.jpg","hash":"a3679ca600f853635b0f4831ac584c678b2ccb5f","modified":1726901782037},{"_id":"public/medias/banner/4.jpg","hash":"0f7f08985ee63874bdc7d4791bacb94aec0835be","modified":1726901782037},{"_id":"public/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1726901782037},{"_id":"public/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1726901782037},{"_id":"public/medias/banner/2.jpg","hash":"4d3b764f549eb118a360fc1b224d677c6931ef1d","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"907bfbbe295332750575900984a00136de0f0e90","modified":1726901782037},{"_id":"public/medias/banner/1.jpg","hash":"8028c6357d2bebb58de470d78ac7dcc1ed11bc77","modified":1726901782037},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"d92687d30fa0d43f9ae71009398507bf813a6875","modified":1726901782037},{"_id":"public/medias/banner/3.jpg","hash":"6ff1122e81c37f2f488955f9b68be657baf5fa42","modified":1726901782037},{"_id":"public/medias/banner/0.jpg","hash":"d04319d6032ede761c363f3e225c6f915533efe1","modified":1726901782037},{"_id":"public/medias/banner/7.jpg","hash":"8435a4b3e421dcb7d46192445d1f7292a51ebcf2","modified":1726901782037},{"_id":"public/medias/logo.png","hash":"485b41f6624e52d987bfba7d1f84cf8d37c178e2","modified":1726901782037},{"_id":"public/medias/avatar.jpg","hash":"5f4fa6cef61ca24b036c8c5dc3059d8d366e35b5","modified":1726901782037},{"_id":"public/medias/banner/6.jpg","hash":"db4574d5232e6d63889da0a4fd09dc60709e7114","modified":1726901782037},{"_id":"public/medias/banner/5.jpg","hash":"899e653846d7ff972f8e99cab330ab48a053d23f","modified":1726901782037}],"Category":[{"name":"C","_id":"cm1bsqfjo0004esty6ani9j0b"},{"name":"Hexo","_id":"cm1bsqfjt000cesty00pr6ejw"},{"name":"Makrdown","_id":"cm1bsqfjv000iestyadee6s2o"},{"name":"Project","_id":"cm1bsqfjv000lesty0ibt6clr"},{"name":"Unity","_id":"cm1bsqfjw000oesty1qsi7p1n"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}],"Page":[{"title":"404","date":"2022-02-03T03:28:16.000Z","type":"404","layout":"404","description":"Oops�����ұ����ˣ��Ҳ�������Ҫ��ҳ�� :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2022-02-03 11:28:16\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops�����ұ����ˣ��Ҳ�������Ҫ��ҳ�� :(\"\n---\n","updated":"2024-09-20T08:33:22.000Z","path":"404/index.html","comments":1,"_id":"cm1bsqfjh0000estydnd35bax","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2022-02-03T03:01:47.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-02-03 11:01:47\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2024-09-20T08:33:22.000Z","path":"categories/index.html","comments":1,"_id":"cm1bsqfjn0002estycg7v9ula","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2023-03-29T06:23:51.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-03-29 14:23:51\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2024-09-20T08:33:22.000Z","path":"about/index.html","comments":1,"_id":"cm1bsqfjq0006estyc1dp5cw7","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2022-02-03T03:08:52.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2022-02-03 11:08:52\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2024-09-20T08:33:22.000Z","path":"contact/index.html","comments":1,"_id":"cm1bsqfjr0008esty47vqak9p","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2022-02-03T04:07:53.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2022-02-03 12:07:53\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2024-09-20T08:33:22.000Z","path":"friends/index.html","comments":1,"_id":"cm1bsqfjs000aestyebllbxuu","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2022-02-03T03:04:08.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-02-03 11:04:08\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2024-09-20T08:33:22.000Z","path":"tags/index.html","comments":1,"_id":"cm1bsqfju000festyancg7kuh","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"C语言课程设计-校园导游系统","date":"2023-01-16T07:45:38.000Z","img":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Guide1.png","top":true,"cover":false,"coverImg":null,"summary":"C语言数据结构课程设计校园导游系统","_content":"## 序言\n&emsp;&emsp;本篇文章的目的是记录下我设计并实现《 C 校园导游系统》的过程，其实我本来想要把这个系统做的很好，但是奈何本学期出现了一些突发事件，导致时间精力都很有限，所以只能暂时搁置了。  \n&emsp;&emsp;选择这个项目的初心是为了锻炼自己，但最终我在它身上只花费了3天时间，作为达到数据结构课程设计的要求它是完全满足的，但是对我而言离我想象中的要求还差得远，就像它只是一个游戏demo，并不是成品。  \n&emsp;&emsp;那为什么我还要拿出来做文章呢？我能力有限无法真正完成它，大概率以后也没时间去做它了，但是记录下万一哪天用上了呢，当然也可以给后辈一个参考价值吧。  \n&emsp;&emsp;不多说了，现在进入正题吧。\n\n## 需求分析\n* 提供直观的学校地图界面供用户进行查看，以点作为景点，以边作为道路；  \n\n* 提供景点相关信息查询功能，能够查询景点位置和输出景点的相关信息；  \n* 提供问路查询功能，用户只需输入起点和终点，系统就会为用户提供最短路径；  \n* 提供景点类型查询功能，用户可查询相关类型建筑及其信息； \n* **总结：《校园导游咨询系统》需要为用户提供一个可视化的校园平面图，并且提供景点查询功能和最短路径查询功能，满足用户的对校园导游系统的基本需求。**\n\n## 设计过程\n### 地图设计\n要制作导游系统，首先就是明确我们的导游范围，为了明确如何画出地图，我查看了我们学校的地图。\n![玉溪师范学院地图](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yxnumap.png \"玉溪师范学院地图\")\n然后根据地图筛选出了15个景点建筑加入到了这次的系统地图中。  \n将15个地点抽象出来构成图结构\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/map1.png)\n>1.东北门 2.大学生活动中心 3.实训大楼A 4.滋味苑 5.龙马公寓 6.后山 7.学生宿舍F,G幢 8.学生宿舍K,L,M,N幢 9.主教学区 10.品味苑 11.艺术综合楼 12.图书馆 13.运动场 14.东南门 15.传习馆\n\nOK,就这样一份地图模板就制作好了，也可以说图结构的顶点确定好了，那么接下来就是确定边权值。  \n测量边权值的方法，我这里我采用高德地图的测距小工具，几分钟就全部测量好了，将测量好的数据保存起来，之后用得到。  \n\n接下来就将地图写入到系统中，就纯靠 printf 画图了  \n现在我们的地图模块就设计好了。但是现在只是一个没有任何信息的图，之后还将导入景点编号、景点信息、边权值。\n\n### 创建数据结构并初始化  \n将我们测量好的数据保存于相应的.txt文件中，这里我将景点编号保存在**Number.txt**文件，景点名称保存在**Name.txt**文件，景点信息保存在**info.txt**文件，各两点间的距离（边权值）保存在**Distance.txt**文件。  \n\n然后创建我们所需的数据结构\n```C\n#define N 15\t\t\t\t//顶点数目值\n#define M 22\t\t\t\t//边数目值\n#define VexType string\t\t//顶点数据类型\n#define EdgeType int\t\t//边数据类型\n#define INF 0x3f3f3f3f\t\t//作为最大值\n\n//景点数据结构\ntypedef struct Spot\n{\n\tint number;\n\tchar name[20];\n\tchar SpotInfo[50];\n}Spot;\n\n//图的数据结构\ntypedef struct Graph\n{\n\tVexType V[N];\t\t//顶点表\n\tEdgeType E[N][N];\t//边表\n\tint vnum, ednum;\t//顶点数、边数\n}Graph;\n```\n初始化\n```C\n//初始化图的顶点表，邻接矩阵等\nvoid InitGraph(Graph& G)\n{\n\t//初始化边表\n\tfor (int i = 0; i < N; i++) {\n\t\tfor (int j = 0; j < N; j++) {\n\t\t\tG.E[i][j] = INF;\n\t\t}\n\t}\n\tG.ednum = G.vnum = 0;\t//初始化顶点数、边数\n}\n```\n\n插入顶点和边\n```C\n//插入点函数，改变顶点表\nvoid InsertNode(Graph& G, VexType v)\n{\n\tif (G.vnum < N)\n\t{\n\t\tG.V[G.vnum++] = v;\n\t}\n}\n\n//插入边函数，改变邻接矩阵\nvoid InsertEdge(Graph& G, VexType v, VexType w, int weight)\n{\n\tint p1, p2;\n\tp1 = p2 = -1;\n\tfor (int i = 0; i < G.vnum; i++)\n\t{\n\t\tif (G.V[i] == v)p1 = i;\n\t\tif (G.V[i] == w)p2 = i;\n\t}\n\tif (p1 != -1 && p2 != -1)\n\t{\n\t\tG.E[p1][p2] = G.E[p2][p1] = weight;\t//无向图邻接矩阵对称\n\t\tG.ednum++;\n\t}\n}\n```\n\n创建图，读取文件导入数据\n```C\n//创建图功能实现函数\nvoid CreatGraph(Graph& G)\n{\n\tint vn, an;\t//顶点数，边数\n\tvn = N;\n\tan = M;\n\tint count = 0;\n\tchar str1[20], str2[20];\n\tstring s1, s2;\n\tint temp = 0;\n\tFILE* fp1 = fopen(\"Number.txt\", \"r\");\n\tFILE* fp2 = fopen(\"Distance.txt\", \"r\");\n\tif (fp1 == NULL && fp2 == NULL)\n\t{\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\t//从文件中读取景点编号\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcount = fscanf(fp1, \"%s\", str1);\n\t\tif (count == -1)exit(0);\n\t\ts1 = str1;\n\t\tInsertNode(G, s1);\n\t}\n\t//从文件中读取所有边的权值\n\tfor (int i = 0; i < M; i++)\n\t{\n\t\tcount = fscanf(fp2, \"%s %s %d\", str1, str2, &temp);\n\t\tif (count == -1)exit(0);\n\t\ts1 = str1;\n\t\ts2 = str2;\n\t\tInsertEdge(G, s1, s2, temp);\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n}\n```\n**到这里我们的图就创建完成了**\n\n### Dijkstra算法\n无论是在教材还是各类算法书籍中都少不了的最短路径算法Dijkstra算法，是由荷兰计算机科学家 Edsger Wybe Dijkstra 在1956年发现的算法，戴克斯特拉算法使用类似广度优先搜索的方法解决赋权图的单源最短路径问题。Dijkstra 算法原始版本仅适用于找到两个顶点之间的最短路径，后来更常见的变体固定了一个顶点作为源结点然后找到该顶点到图中所有其它结点的最短路径，产生一个最短路径树。本算法每次取出未访问结点中距离最小的，用该结点更新其他结点的距离。  \n\n>核心思想：按路径长度递增次序产生算法，将图数据结构分为顶点集V和边集E，接下来初始化图的顶点表和邻接矩阵，将所有边的权值设置为无穷大，然后插入点改变顶点表，插入边改变邻接矩阵。之后从第一个顶点开始计算最短路径，假如该顶点与其他顶点有边连接，则将其边权值加入到最短路径集，然后依次比较，最后选出最小的边权值，并记录前驱，然后从前驱开始又执行边权值的比较，直到最后到达终点结束，最短路径值即之前记录过的前驱的边权值相加的最终结果。\n\n这样讲还是难懂，那我们从头开始了解Dijkstra算法吧\n\n下面以该图为例讲解Dijkstra算法寻找最短路径的过程\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra2.png)\n以A为起始点，求A到BCDEF的最短路径  \n\n要求A到其他5个点的最短距离，我们构造一个数组记录A到BCDEF5个点的路径距离。  \n\n需要注意的是\n* 如果A能够直接到达节点，则使用路径长度，即边权值作为其距离。\n* 如果A节点不能够直接到达节点则用无穷大表示A到该点的距离。\n* 任何点到自身的距离都为0  \n\n\n在最开始A到其余点的数组如下  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|10|∞|4|∞|∞|  \n\nDijkstra算法的思想是：从以上最短距离数组中每次选择一个最近的点，将其作为下一个点，然后重新计算从起始点经过该点到其他所有点的距离，并更新最短距离的值，已经选取过的点就是确定了最短路径的点，不再参与下一次计算。  \n\n我们来看看实际的选取过程\n\n#### 第一次选取\n\n构建好的数组是这样的  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|10|∞|4|∞|∞|\n|第一步选取该最短路径数组中值最小的一个点。因为A点到本身不需要参与运算，所以从剩下的点中选择最短的一个是D。| | | | | |\n|第二步以**A-D**的距离为最近距离更新A点到所有点的距离。即相当于A点经过D点，计算A到其他点的距离。| | | | | |  \n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra3.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-C:19  \nA-D: A-D:4  \nA-E: A-D-E:10  \nA-F: A-D-F:∞  \n\n将现在A到各个点的距离和之前相比较，取最小值，更新BCE的距离，得到新的最短距离数组  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|19|4|10|∞|  \n\n#### 第二次选取\nAD两点已经选取，不再参与下面的计算。  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|19|4|10|∞| \n\n以B为最新点，更新最短距离数组\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra4.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-B-C:14  \nA-D: A-D:4  \nA-E: A-D-B-E:12  \nA-F: A-D-B-F:∞\n\n对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。  \nC点由19更新成14，E点走A-D-E为10，**距离更短所以不更新**，得到如下数组：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|14|4|10|∞| \n\n#### 第三次选取\n第一步：选取除了A B D节点之外的剩余节点中最短节点，为点E  \n第二步：以E点为最新节点，更新最短路径数组  \n因为在上一步中计算达到E点的距离时没有更新距离，A-D-E 为10 最短，所以更新E点到B C F点的距离时走的路径是A-D-E。注意这里的最短距离有对应的路径，选择最小值就是选择最短距离。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra5.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-E-C:11  \nA-D: A-D:4  \nA-E: A-D-E:10  \nA-F: A-D-E-F:22  \n对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。  \n更新C点走A-D-E-C为11，比之前的A-D-B-C 14距离更近，更新到F点距离，得到如下数组：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|22| \n\n#### 第四次选取\n第一步：选取除了A B D E节点之外的剩余节点中最短节点，为点C  \n第二步：以C点为最新节点，更新最短路径数组\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra6.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-E-C:11  \nA-D: 4  \nA-E: A-D-E:10  \nA-F: A-D-E-C-F:16  \n对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。\n更新到F点距离，可以得到如下数组：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|16| \n\n#### 第五次选取\n第一步：选取除了A B C D E节点之外的剩余节点中最短节点，也就是最后一个节点：F  \n第二步：以F点为最新节点，更新最短路径数组。由于F点是最后一个点，所以也不用更新数组，目前的数组就是所求数组将F点加入最短路径范围中，此时所有的点都加入了最短路径范围，也就是说A点到所有点的距离都找到了。最终得出的距离值为：\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra7.png)\n最终得到的结果为：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|16| \n\n#### 最终结果\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|16|\n\nA-A: 0  \n\nA-B: A-D-B:6\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra8.png)\n\nA-C: A-D-E-C:11\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra9.png)\n\nA-D:4\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra10.png)\n\nA-E: A-D-E:10\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra11.png)\n\nA-F: A-D-E-C-F:16\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra12.png)\n\n### 代码实现Dijkstra算法\n```C\n#define INF 0x3f3f3f3f\t//作为最大值\n\n//Dijkstra算法全局变量\nbool S[N];\t//顶点集\nint D[N];\t//到各个顶点的最短路径\nint Pr[N];\t//记录前驱\n\nvoid Dijkstra(Graph G, int v)\n{\n\t//初始化\n\tint n = G.vnum;\t//n为图的顶点个数\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tS[i] = false;\n\t\tD[i] = G.E[v][i];\n\t\tif (D[i] < INF)\n\t\t{\n\t\t\tPr[i] = v;\t//v与i连接，v为前驱\n\t\t}\n\t\telse\n\t\t{\n\t\t\tPr[i] = -1;\n\t\t}\n\t}\n\tS[v] = true;\n\tD[v] = 0;\n\t//初始化结束，求最短路径，并加入S集\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint min = INF;\n\t\tint temp;\n\t\tfor (int w = 0; w < n; w++)\n\t\t{\n\t\t\tif (!S[w] && D[w] < min)\t\t//某点temp未加入S集，且为当前最短路径\n\t\t\t{\n\t\t\t\ttemp = w;\n\t\t\t\tmin = D[w];\n\t\t\t}\n\t\t}\n\t\tS[temp] = true;\n\t\t//更新从源点出发至其余点的最短路径 通过temp\n\t\tfor (int w = 0; w < n; w++)\n\t\t{\n\t\t\tif (!S[w] && D[temp] + G.E[temp][w] < D[w])\n\t\t\t{\n\t\t\t\tD[w] = D[temp] + G.E[temp][w];\n\t\t\t\tPr[w] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//输出最短路径\nvoid Path(Graph G, int v)\n{\n\tif (Pr[v] == -1)\n\t{\n\t\treturn;\n\t}\n\tPath(G, Pr[v]);\n\tcout << G.V[Pr[v]] << \"->\";\n}\n```\n\n### 导游系统问路查询功能\n在了解以及实现了Dijkstra算法之后，我们还要在程序中调用它。  \n* 用户只需输入起点和终点，系统就会为用户提供最短路径。  \n\n```C\n//调用最短路径-Dijkstra算法\nvoid Shortest_Dijkstra(Graph& G)\n{\n\tstring vname;\n\tstring vnamed;\n\tint v1, v2;\n\tchar ch = '1';\n\n\twhile (true)\n\t{\n\t\tv1 = -1;\n\t\tv2 = -1;\n\t\tcout << \"请输入起点编号：\";\n\t\tcin >> vname;\n\t\tfor (int i = 0; i < G.vnum; i++) {\n\t\t\tif (G.V[i] == vname)\n\t\t\t{\n\t\t\t\tv1 = i;\n\t\t\t}\n\t\t}\n\t\tif (v1 == -1)\n\t\t{\n\t\t\tcout << \"没有找到输入点！\" << endl;\n\t\t\tsystem(\"pause\");\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tcout << \"请输入终点编号：\";\n\t\tcin >> vnamed;\n\t\tfor (int i = 0; i < G.vnum; i++) {\n\t\t\tif (G.V[i] == vnamed)\n\t\t\t{\n\t\t\t\tv2 = i;\n\t\t\t}\n\t\t}\n\t\tif (v2 == -1)\n\t\t{\n\t\t\tcout << \"没有找到终点！\" << endl;\n\t\t\tsystem(\"pause\");\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tDijkstra(G, v1);\n\t\tcout << \"\\n目标点\" << \"\\t\" << \"最短路径值\" << \"\\t\" << \"最短路径\" << \"\\t\" << endl;\n\t\tfor (int i = 0; i < G.vnum; i++)\n\t\t{\n\t\t\tif (i != v1 && i == v2)\n\t\t\t{\n\t\t\t\tcout << \" \" << G.V[i] << \"\\t\" << D[i] << \"米\" << \"\\t\" << \"\\t\";\n\t\t\t\tPath(G, i);\n\t\t\t\tcout << G.V[i] << endl;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n效果展示:\n```\n请输入起点编号：1\n请输入终点编号：5\n\n目标点  最短路径值      最短路径\n 5      400米           1->2->4->5\n```\n\n### 导游系统信息查询功能\n信息查询功能很简单，把预先准备的景点信息文件读取到程序的景点数据结构中，然后输出它就行了。  \n\n部分代码展示\n```C\nvoid NameFile(Spot spt[])\n{\n\tint count = 0;\n\tint i;\n\tFILE* fp = fopen(\"Name.txt\", \"r\");\n\n\tif (fp == NULL) {\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\tfor (i = 0; i < N; i++) {\n\t\tspt[i].number = i + 1;\n\t\tcount = fscanf(fp, \"%s\", spt[i].name);\n\t\tif (count == -1) exit(0);\n\t\t//printf(\"%s\\n\", spt[i].name);\t\t测试代码\n\t}\n\tfclose(fp);\n}\n\nvoid InfoFile(Spot spt[])\n{\n\tint count = 0;\n\tint i;\n\tFILE* fp = fopen(\"Info.txt\", \"r\");\n\n\tif (fp == NULL) {\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\tfor (i = 0; i < N; i++) {\n\t\tcount = fscanf(fp, \"%s\", spt[i].SpotInfo);\n\t\tif (count == -1)exit(0);\n\t\t//printf(\"%s\\n\", spt[i].SpotInfo);\t\t测试代码\n\t}\n\tfclose(fp);\n}\n\nvoid printInfo(Spot spt[], int i)\n{\n\tprintf(\"\\n%d.%s\\n简介：%s\\n\", spt[i].number, spt[i].name, spt[i].SpotInfo);\n}\n```\n\n### 导游系统景点类型查询功能\n功能分析：\n* 1个景点类型包含若干个景点\n* 用户可以查询该景点类型包含哪几个景点\n* 用户可以详细了解某一个景点的信息\n\n首先我们初始化景点类型数据结构，然后将各个景点进行类型分类，然后加入景点类型查询模块，后面嵌套一下景点信息查询模块。\n\n部分代码展示：\n```C\n#define TN 5\t\t\t\t//类型数目值\n\n//景点类型数据结构\ntypedef struct SpotType\n{\n\tstring typeName;\n\tSpot S[TN];\n\tint number;\n}SpotType;\n\n//初始化景点类型数据结构\nvoid BuildingType(Spot spt[], SpotType stype[])\n{\n\tstype[0].typeName = \"教学楼\";\n\tstype[1].typeName = \"学生宿舍\";\n\tstype[2].typeName = \"食堂\";\n\tstype[3].typeName = \"课外活动点\";\n\tstype[0].S[0] = spt[2];\n\tstype[0].S[1] = spt[8];\n\tstype[0].S[2] = spt[10];\n\tstype[0].number = 3;\n\tstype[1].S[0] = spt[4];\n\tstype[1].S[1] = spt[6];\n\tstype[1].S[2] = spt[7];\n\tstype[1].number = 3;\n\tstype[2].S[0] = spt[3];\n\tstype[2].S[1] = spt[9];\n\tstype[2].number = 2;\n\tstype[3].S[0] = spt[1];\n\tstype[3].S[1] = spt[5];\n\tstype[3].S[2] = spt[12];\n\tstype[3].S[3] = spt[14];\n\tstype[3].number = 4;\n}\n\n//查询景点类型\nvoid ShowType(Spot spt[], SpotType stype[])\n{\n\tint select = 0;\n\n\twhile (true)\n\t{\n\t\tcout << \"                                                    |==============================|\" << endl;\n\t\tcout << \"                                                    |          1.\" << stype[0].typeName << \"            |\" << endl;\n\t\tcout << \"                                                    |          2.\" << stype[1].typeName << \"          |\" << endl;\n\t\tcout << \"                                                    |          3.\" << stype[2].typeName << \"              |\" << endl;\n\t\tcout << \"                                                    |          4.\" << stype[3].typeName << \"        |\" << endl;\n\t\tcout << \"                                                    |==============================|\" << endl;\n\t\tcout << \"请选择你需要您要了解的类型：\";\n\t\tcin >> select;\n\t\tgetchar();\n\t\tswitch (select)\n\t\t{\n\t\tcase 1:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcout << \"请输入有效选项！\\n回车键继续...\" << endl;\n\t\t\tgetchar();\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tcout << \"\\n您需要了解以上建筑信息吗？（输入1了解，输入0取消）：\";\n\t\tint select2;\n\t\tint select3;\n\t\twhile (true)\n\t\t{\n\t\t\tcin >> select2;\n\t\t\tif (select2 == 1)\n\t\t\t{\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tcout << \"\\n请输入你想要了解建筑的编号（输入0取消）：\";\n\t\t\t\t\tcin >> select3;\n\t\t\t\t\tif (select == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 3 || select3 == 9 || select3 == 11)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (select == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 5 || select3 == 7 || select3 == 8)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (select == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 4 || select3 == 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (select == 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 2 || select3 == 6 || select3 == 13 || select3 == 15)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (select2 == 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout << \"请输入正确选项！\" << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (select3 == 0) break;\n\t\t}\n\t}\n} \n```\n## 总结\n本次的校园导游系统是我的数据结构课程设计，希望这篇文章能够帮我记下Dijkstra算法的实际运用，今后遇到相应的算法也能够有解决思路。  \n\n本次的导游系统介绍就到这了，有需要看源代码的朋友可以到我的 GitHub 仓库中查看。  \n## 链接：\n[校园导游系统](https://github.com/InvictusEd/Campus-tour-guide-system.git)\n\n> 本章一句：  \n> 当你因为错过太阳而哭泣的时候，你也要错过群星了。——泰戈尔《飞鸟集》","source":"_posts/CampusGuideSystem.md","raw":"---\ntitle: C语言课程设计-校园导游系统\ndate: 2023-1-16 15:45:38\n\nimg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/Guide1.png\ntop: true\ncover: false\ncoverImg: \nsummary: C语言数据结构课程设计校园导游系统\ncategories: C\ntags:\n    - C\n---\n## 序言\n&emsp;&emsp;本篇文章的目的是记录下我设计并实现《 C 校园导游系统》的过程，其实我本来想要把这个系统做的很好，但是奈何本学期出现了一些突发事件，导致时间精力都很有限，所以只能暂时搁置了。  \n&emsp;&emsp;选择这个项目的初心是为了锻炼自己，但最终我在它身上只花费了3天时间，作为达到数据结构课程设计的要求它是完全满足的，但是对我而言离我想象中的要求还差得远，就像它只是一个游戏demo，并不是成品。  \n&emsp;&emsp;那为什么我还要拿出来做文章呢？我能力有限无法真正完成它，大概率以后也没时间去做它了，但是记录下万一哪天用上了呢，当然也可以给后辈一个参考价值吧。  \n&emsp;&emsp;不多说了，现在进入正题吧。\n\n## 需求分析\n* 提供直观的学校地图界面供用户进行查看，以点作为景点，以边作为道路；  \n\n* 提供景点相关信息查询功能，能够查询景点位置和输出景点的相关信息；  \n* 提供问路查询功能，用户只需输入起点和终点，系统就会为用户提供最短路径；  \n* 提供景点类型查询功能，用户可查询相关类型建筑及其信息； \n* **总结：《校园导游咨询系统》需要为用户提供一个可视化的校园平面图，并且提供景点查询功能和最短路径查询功能，满足用户的对校园导游系统的基本需求。**\n\n## 设计过程\n### 地图设计\n要制作导游系统，首先就是明确我们的导游范围，为了明确如何画出地图，我查看了我们学校的地图。\n![玉溪师范学院地图](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yxnumap.png \"玉溪师范学院地图\")\n然后根据地图筛选出了15个景点建筑加入到了这次的系统地图中。  \n将15个地点抽象出来构成图结构\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/map1.png)\n>1.东北门 2.大学生活动中心 3.实训大楼A 4.滋味苑 5.龙马公寓 6.后山 7.学生宿舍F,G幢 8.学生宿舍K,L,M,N幢 9.主教学区 10.品味苑 11.艺术综合楼 12.图书馆 13.运动场 14.东南门 15.传习馆\n\nOK,就这样一份地图模板就制作好了，也可以说图结构的顶点确定好了，那么接下来就是确定边权值。  \n测量边权值的方法，我这里我采用高德地图的测距小工具，几分钟就全部测量好了，将测量好的数据保存起来，之后用得到。  \n\n接下来就将地图写入到系统中，就纯靠 printf 画图了  \n现在我们的地图模块就设计好了。但是现在只是一个没有任何信息的图，之后还将导入景点编号、景点信息、边权值。\n\n### 创建数据结构并初始化  \n将我们测量好的数据保存于相应的.txt文件中，这里我将景点编号保存在**Number.txt**文件，景点名称保存在**Name.txt**文件，景点信息保存在**info.txt**文件，各两点间的距离（边权值）保存在**Distance.txt**文件。  \n\n然后创建我们所需的数据结构\n```C\n#define N 15\t\t\t\t//顶点数目值\n#define M 22\t\t\t\t//边数目值\n#define VexType string\t\t//顶点数据类型\n#define EdgeType int\t\t//边数据类型\n#define INF 0x3f3f3f3f\t\t//作为最大值\n\n//景点数据结构\ntypedef struct Spot\n{\n\tint number;\n\tchar name[20];\n\tchar SpotInfo[50];\n}Spot;\n\n//图的数据结构\ntypedef struct Graph\n{\n\tVexType V[N];\t\t//顶点表\n\tEdgeType E[N][N];\t//边表\n\tint vnum, ednum;\t//顶点数、边数\n}Graph;\n```\n初始化\n```C\n//初始化图的顶点表，邻接矩阵等\nvoid InitGraph(Graph& G)\n{\n\t//初始化边表\n\tfor (int i = 0; i < N; i++) {\n\t\tfor (int j = 0; j < N; j++) {\n\t\t\tG.E[i][j] = INF;\n\t\t}\n\t}\n\tG.ednum = G.vnum = 0;\t//初始化顶点数、边数\n}\n```\n\n插入顶点和边\n```C\n//插入点函数，改变顶点表\nvoid InsertNode(Graph& G, VexType v)\n{\n\tif (G.vnum < N)\n\t{\n\t\tG.V[G.vnum++] = v;\n\t}\n}\n\n//插入边函数，改变邻接矩阵\nvoid InsertEdge(Graph& G, VexType v, VexType w, int weight)\n{\n\tint p1, p2;\n\tp1 = p2 = -1;\n\tfor (int i = 0; i < G.vnum; i++)\n\t{\n\t\tif (G.V[i] == v)p1 = i;\n\t\tif (G.V[i] == w)p2 = i;\n\t}\n\tif (p1 != -1 && p2 != -1)\n\t{\n\t\tG.E[p1][p2] = G.E[p2][p1] = weight;\t//无向图邻接矩阵对称\n\t\tG.ednum++;\n\t}\n}\n```\n\n创建图，读取文件导入数据\n```C\n//创建图功能实现函数\nvoid CreatGraph(Graph& G)\n{\n\tint vn, an;\t//顶点数，边数\n\tvn = N;\n\tan = M;\n\tint count = 0;\n\tchar str1[20], str2[20];\n\tstring s1, s2;\n\tint temp = 0;\n\tFILE* fp1 = fopen(\"Number.txt\", \"r\");\n\tFILE* fp2 = fopen(\"Distance.txt\", \"r\");\n\tif (fp1 == NULL && fp2 == NULL)\n\t{\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\t//从文件中读取景点编号\n\tfor (int i = 0; i < N; i++)\n\t{\n\t\tcount = fscanf(fp1, \"%s\", str1);\n\t\tif (count == -1)exit(0);\n\t\ts1 = str1;\n\t\tInsertNode(G, s1);\n\t}\n\t//从文件中读取所有边的权值\n\tfor (int i = 0; i < M; i++)\n\t{\n\t\tcount = fscanf(fp2, \"%s %s %d\", str1, str2, &temp);\n\t\tif (count == -1)exit(0);\n\t\ts1 = str1;\n\t\ts2 = str2;\n\t\tInsertEdge(G, s1, s2, temp);\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n}\n```\n**到这里我们的图就创建完成了**\n\n### Dijkstra算法\n无论是在教材还是各类算法书籍中都少不了的最短路径算法Dijkstra算法，是由荷兰计算机科学家 Edsger Wybe Dijkstra 在1956年发现的算法，戴克斯特拉算法使用类似广度优先搜索的方法解决赋权图的单源最短路径问题。Dijkstra 算法原始版本仅适用于找到两个顶点之间的最短路径，后来更常见的变体固定了一个顶点作为源结点然后找到该顶点到图中所有其它结点的最短路径，产生一个最短路径树。本算法每次取出未访问结点中距离最小的，用该结点更新其他结点的距离。  \n\n>核心思想：按路径长度递增次序产生算法，将图数据结构分为顶点集V和边集E，接下来初始化图的顶点表和邻接矩阵，将所有边的权值设置为无穷大，然后插入点改变顶点表，插入边改变邻接矩阵。之后从第一个顶点开始计算最短路径，假如该顶点与其他顶点有边连接，则将其边权值加入到最短路径集，然后依次比较，最后选出最小的边权值，并记录前驱，然后从前驱开始又执行边权值的比较，直到最后到达终点结束，最短路径值即之前记录过的前驱的边权值相加的最终结果。\n\n这样讲还是难懂，那我们从头开始了解Dijkstra算法吧\n\n下面以该图为例讲解Dijkstra算法寻找最短路径的过程\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra2.png)\n以A为起始点，求A到BCDEF的最短路径  \n\n要求A到其他5个点的最短距离，我们构造一个数组记录A到BCDEF5个点的路径距离。  \n\n需要注意的是\n* 如果A能够直接到达节点，则使用路径长度，即边权值作为其距离。\n* 如果A节点不能够直接到达节点则用无穷大表示A到该点的距离。\n* 任何点到自身的距离都为0  \n\n\n在最开始A到其余点的数组如下  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|10|∞|4|∞|∞|  \n\nDijkstra算法的思想是：从以上最短距离数组中每次选择一个最近的点，将其作为下一个点，然后重新计算从起始点经过该点到其他所有点的距离，并更新最短距离的值，已经选取过的点就是确定了最短路径的点，不再参与下一次计算。  \n\n我们来看看实际的选取过程\n\n#### 第一次选取\n\n构建好的数组是这样的  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|10|∞|4|∞|∞|\n|第一步选取该最短路径数组中值最小的一个点。因为A点到本身不需要参与运算，所以从剩下的点中选择最短的一个是D。| | | | | |\n|第二步以**A-D**的距离为最近距离更新A点到所有点的距离。即相当于A点经过D点，计算A到其他点的距离。| | | | | |  \n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra3.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-C:19  \nA-D: A-D:4  \nA-E: A-D-E:10  \nA-F: A-D-F:∞  \n\n将现在A到各个点的距离和之前相比较，取最小值，更新BCE的距离，得到新的最短距离数组  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|19|4|10|∞|  \n\n#### 第二次选取\nAD两点已经选取，不再参与下面的计算。  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|19|4|10|∞| \n\n以B为最新点，更新最短距离数组\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra4.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-B-C:14  \nA-D: A-D:4  \nA-E: A-D-B-E:12  \nA-F: A-D-B-F:∞\n\n对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。  \nC点由19更新成14，E点走A-D-E为10，**距离更短所以不更新**，得到如下数组：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|14|4|10|∞| \n\n#### 第三次选取\n第一步：选取除了A B D节点之外的剩余节点中最短节点，为点E  \n第二步：以E点为最新节点，更新最短路径数组  \n因为在上一步中计算达到E点的距离时没有更新距离，A-D-E 为10 最短，所以更新E点到B C F点的距离时走的路径是A-D-E。注意这里的最短距离有对应的路径，选择最小值就是选择最短距离。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra5.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-E-C:11  \nA-D: A-D:4  \nA-E: A-D-E:10  \nA-F: A-D-E-F:22  \n对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。  \n更新C点走A-D-E-C为11，比之前的A-D-B-C 14距离更近，更新到F点距离，得到如下数组：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|22| \n\n#### 第四次选取\n第一步：选取除了A B D E节点之外的剩余节点中最短节点，为点C  \n第二步：以C点为最新节点，更新最短路径数组\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra6.png)\nA-A: 0  \nA-B: A-D-B:6  \nA-C: A-D-E-C:11  \nA-D: 4  \nA-E: A-D-E:10  \nA-F: A-D-E-C-F:16  \n对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。\n更新到F点距离，可以得到如下数组：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|16| \n\n#### 第五次选取\n第一步：选取除了A B C D E节点之外的剩余节点中最短节点，也就是最后一个节点：F  \n第二步：以F点为最新节点，更新最短路径数组。由于F点是最后一个点，所以也不用更新数组，目前的数组就是所求数组将F点加入最短路径范围中，此时所有的点都加入了最短路径范围，也就是说A点到所有点的距离都找到了。最终得出的距离值为：\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra7.png)\n最终得到的结果为：  \n\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|16| \n\n#### 最终结果\n|A|B|C|D|E|F|\n|-|-|-|-|-|-|\n|0|6|11|4|10|16|\n\nA-A: 0  \n\nA-B: A-D-B:6\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra8.png)\n\nA-C: A-D-E-C:11\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra9.png)\n\nA-D:4\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra10.png)\n\nA-E: A-D-E:10\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra11.png)\n\nA-F: A-D-E-C-F:16\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra12.png)\n\n### 代码实现Dijkstra算法\n```C\n#define INF 0x3f3f3f3f\t//作为最大值\n\n//Dijkstra算法全局变量\nbool S[N];\t//顶点集\nint D[N];\t//到各个顶点的最短路径\nint Pr[N];\t//记录前驱\n\nvoid Dijkstra(Graph G, int v)\n{\n\t//初始化\n\tint n = G.vnum;\t//n为图的顶点个数\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tS[i] = false;\n\t\tD[i] = G.E[v][i];\n\t\tif (D[i] < INF)\n\t\t{\n\t\t\tPr[i] = v;\t//v与i连接，v为前驱\n\t\t}\n\t\telse\n\t\t{\n\t\t\tPr[i] = -1;\n\t\t}\n\t}\n\tS[v] = true;\n\tD[v] = 0;\n\t//初始化结束，求最短路径，并加入S集\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint min = INF;\n\t\tint temp;\n\t\tfor (int w = 0; w < n; w++)\n\t\t{\n\t\t\tif (!S[w] && D[w] < min)\t\t//某点temp未加入S集，且为当前最短路径\n\t\t\t{\n\t\t\t\ttemp = w;\n\t\t\t\tmin = D[w];\n\t\t\t}\n\t\t}\n\t\tS[temp] = true;\n\t\t//更新从源点出发至其余点的最短路径 通过temp\n\t\tfor (int w = 0; w < n; w++)\n\t\t{\n\t\t\tif (!S[w] && D[temp] + G.E[temp][w] < D[w])\n\t\t\t{\n\t\t\t\tD[w] = D[temp] + G.E[temp][w];\n\t\t\t\tPr[w] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//输出最短路径\nvoid Path(Graph G, int v)\n{\n\tif (Pr[v] == -1)\n\t{\n\t\treturn;\n\t}\n\tPath(G, Pr[v]);\n\tcout << G.V[Pr[v]] << \"->\";\n}\n```\n\n### 导游系统问路查询功能\n在了解以及实现了Dijkstra算法之后，我们还要在程序中调用它。  \n* 用户只需输入起点和终点，系统就会为用户提供最短路径。  \n\n```C\n//调用最短路径-Dijkstra算法\nvoid Shortest_Dijkstra(Graph& G)\n{\n\tstring vname;\n\tstring vnamed;\n\tint v1, v2;\n\tchar ch = '1';\n\n\twhile (true)\n\t{\n\t\tv1 = -1;\n\t\tv2 = -1;\n\t\tcout << \"请输入起点编号：\";\n\t\tcin >> vname;\n\t\tfor (int i = 0; i < G.vnum; i++) {\n\t\t\tif (G.V[i] == vname)\n\t\t\t{\n\t\t\t\tv1 = i;\n\t\t\t}\n\t\t}\n\t\tif (v1 == -1)\n\t\t{\n\t\t\tcout << \"没有找到输入点！\" << endl;\n\t\t\tsystem(\"pause\");\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tcout << \"请输入终点编号：\";\n\t\tcin >> vnamed;\n\t\tfor (int i = 0; i < G.vnum; i++) {\n\t\t\tif (G.V[i] == vnamed)\n\t\t\t{\n\t\t\t\tv2 = i;\n\t\t\t}\n\t\t}\n\t\tif (v2 == -1)\n\t\t{\n\t\t\tcout << \"没有找到终点！\" << endl;\n\t\t\tsystem(\"pause\");\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tDijkstra(G, v1);\n\t\tcout << \"\\n目标点\" << \"\\t\" << \"最短路径值\" << \"\\t\" << \"最短路径\" << \"\\t\" << endl;\n\t\tfor (int i = 0; i < G.vnum; i++)\n\t\t{\n\t\t\tif (i != v1 && i == v2)\n\t\t\t{\n\t\t\t\tcout << \" \" << G.V[i] << \"\\t\" << D[i] << \"米\" << \"\\t\" << \"\\t\";\n\t\t\t\tPath(G, i);\n\t\t\t\tcout << G.V[i] << endl;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n效果展示:\n```\n请输入起点编号：1\n请输入终点编号：5\n\n目标点  最短路径值      最短路径\n 5      400米           1->2->4->5\n```\n\n### 导游系统信息查询功能\n信息查询功能很简单，把预先准备的景点信息文件读取到程序的景点数据结构中，然后输出它就行了。  \n\n部分代码展示\n```C\nvoid NameFile(Spot spt[])\n{\n\tint count = 0;\n\tint i;\n\tFILE* fp = fopen(\"Name.txt\", \"r\");\n\n\tif (fp == NULL) {\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\tfor (i = 0; i < N; i++) {\n\t\tspt[i].number = i + 1;\n\t\tcount = fscanf(fp, \"%s\", spt[i].name);\n\t\tif (count == -1) exit(0);\n\t\t//printf(\"%s\\n\", spt[i].name);\t\t测试代码\n\t}\n\tfclose(fp);\n}\n\nvoid InfoFile(Spot spt[])\n{\n\tint count = 0;\n\tint i;\n\tFILE* fp = fopen(\"Info.txt\", \"r\");\n\n\tif (fp == NULL) {\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\tfor (i = 0; i < N; i++) {\n\t\tcount = fscanf(fp, \"%s\", spt[i].SpotInfo);\n\t\tif (count == -1)exit(0);\n\t\t//printf(\"%s\\n\", spt[i].SpotInfo);\t\t测试代码\n\t}\n\tfclose(fp);\n}\n\nvoid printInfo(Spot spt[], int i)\n{\n\tprintf(\"\\n%d.%s\\n简介：%s\\n\", spt[i].number, spt[i].name, spt[i].SpotInfo);\n}\n```\n\n### 导游系统景点类型查询功能\n功能分析：\n* 1个景点类型包含若干个景点\n* 用户可以查询该景点类型包含哪几个景点\n* 用户可以详细了解某一个景点的信息\n\n首先我们初始化景点类型数据结构，然后将各个景点进行类型分类，然后加入景点类型查询模块，后面嵌套一下景点信息查询模块。\n\n部分代码展示：\n```C\n#define TN 5\t\t\t\t//类型数目值\n\n//景点类型数据结构\ntypedef struct SpotType\n{\n\tstring typeName;\n\tSpot S[TN];\n\tint number;\n}SpotType;\n\n//初始化景点类型数据结构\nvoid BuildingType(Spot spt[], SpotType stype[])\n{\n\tstype[0].typeName = \"教学楼\";\n\tstype[1].typeName = \"学生宿舍\";\n\tstype[2].typeName = \"食堂\";\n\tstype[3].typeName = \"课外活动点\";\n\tstype[0].S[0] = spt[2];\n\tstype[0].S[1] = spt[8];\n\tstype[0].S[2] = spt[10];\n\tstype[0].number = 3;\n\tstype[1].S[0] = spt[4];\n\tstype[1].S[1] = spt[6];\n\tstype[1].S[2] = spt[7];\n\tstype[1].number = 3;\n\tstype[2].S[0] = spt[3];\n\tstype[2].S[1] = spt[9];\n\tstype[2].number = 2;\n\tstype[3].S[0] = spt[1];\n\tstype[3].S[1] = spt[5];\n\tstype[3].S[2] = spt[12];\n\tstype[3].S[3] = spt[14];\n\tstype[3].number = 4;\n}\n\n//查询景点类型\nvoid ShowType(Spot spt[], SpotType stype[])\n{\n\tint select = 0;\n\n\twhile (true)\n\t{\n\t\tcout << \"                                                    |==============================|\" << endl;\n\t\tcout << \"                                                    |          1.\" << stype[0].typeName << \"            |\" << endl;\n\t\tcout << \"                                                    |          2.\" << stype[1].typeName << \"          |\" << endl;\n\t\tcout << \"                                                    |          3.\" << stype[2].typeName << \"              |\" << endl;\n\t\tcout << \"                                                    |          4.\" << stype[3].typeName << \"        |\" << endl;\n\t\tcout << \"                                                    |==============================|\" << endl;\n\t\tcout << \"请选择你需要您要了解的类型：\";\n\t\tcin >> select;\n\t\tgetchar();\n\t\tswitch (select)\n\t\t{\n\t\tcase 1:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcout << \"请输入有效选项！\\n回车键继续...\" << endl;\n\t\t\tgetchar();\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tcout << \"\\n您需要了解以上建筑信息吗？（输入1了解，输入0取消）：\";\n\t\tint select2;\n\t\tint select3;\n\t\twhile (true)\n\t\t{\n\t\t\tcin >> select2;\n\t\t\tif (select2 == 1)\n\t\t\t{\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tcout << \"\\n请输入你想要了解建筑的编号（输入0取消）：\";\n\t\t\t\t\tcin >> select3;\n\t\t\t\t\tif (select == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 3 || select3 == 9 || select3 == 11)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (select == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 5 || select3 == 7 || select3 == 8)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (select == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 4 || select3 == 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (select == 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 2 || select3 == 6 || select3 == 13 || select3 == 15)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout << \"请输入正确的此类型建筑编号！\" << endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (select2 == 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout << \"请输入正确选项！\" << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (select3 == 0) break;\n\t\t}\n\t}\n} \n```\n## 总结\n本次的校园导游系统是我的数据结构课程设计，希望这篇文章能够帮我记下Dijkstra算法的实际运用，今后遇到相应的算法也能够有解决思路。  \n\n本次的导游系统介绍就到这了，有需要看源代码的朋友可以到我的 GitHub 仓库中查看。  \n## 链接：\n[校园导游系统](https://github.com/InvictusEd/Campus-tour-guide-system.git)\n\n> 本章一句：  \n> 当你因为错过太阳而哭泣的时候，你也要错过群星了。——泰戈尔《飞鸟集》","slug":"CampusGuideSystem","published":1,"updated":"2024-09-20T08:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1bsqfjk0001esty8bhg80aw","content":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>  本篇文章的目的是记录下我设计并实现《 C 校园导游系统》的过程，其实我本来想要把这个系统做的很好，但是奈何本学期出现了一些突发事件，导致时间精力都很有限，所以只能暂时搁置了。<br>  选择这个项目的初心是为了锻炼自己，但最终我在它身上只花费了3天时间，作为达到数据结构课程设计的要求它是完全满足的，但是对我而言离我想象中的要求还差得远，就像它只是一个游戏demo，并不是成品。<br>  那为什么我还要拿出来做文章呢？我能力有限无法真正完成它，大概率以后也没时间去做它了，但是记录下万一哪天用上了呢，当然也可以给后辈一个参考价值吧。<br>  不多说了，现在进入正题吧。</p>\n<h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><ul>\n<li><p>提供直观的学校地图界面供用户进行查看，以点作为景点，以边作为道路；  </p>\n</li>\n<li><p>提供景点相关信息查询功能，能够查询景点位置和输出景点的相关信息；  </p>\n</li>\n<li><p>提供问路查询功能，用户只需输入起点和终点，系统就会为用户提供最短路径；  </p>\n</li>\n<li><p>提供景点类型查询功能，用户可查询相关类型建筑及其信息； </p>\n</li>\n<li><p><strong>总结：《校园导游咨询系统》需要为用户提供一个可视化的校园平面图，并且提供景点查询功能和最短路径查询功能，满足用户的对校园导游系统的基本需求。</strong></p>\n</li>\n</ul>\n<h2 id=\"设计过程\"><a href=\"#设计过程\" class=\"headerlink\" title=\"设计过程\"></a>设计过程</h2><h3 id=\"地图设计\"><a href=\"#地图设计\" class=\"headerlink\" title=\"地图设计\"></a>地图设计</h3><p>要制作导游系统，首先就是明确我们的导游范围，为了明确如何画出地图，我查看了我们学校的地图。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/yxnumap.png\" alt=\"玉溪师范学院地图\" title=\"玉溪师范学院地图\"><br>然后根据地图筛选出了15个景点建筑加入到了这次的系统地图中。<br>将15个地点抽象出来构成图结构<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/map1.png\"></p>\n<blockquote>\n<p>1.东北门 2.大学生活动中心 3.实训大楼A 4.滋味苑 5.龙马公寓 6.后山 7.学生宿舍F,G幢 8.学生宿舍K,L,M,N幢 9.主教学区 10.品味苑 11.艺术综合楼 12.图书馆 13.运动场 14.东南门 15.传习馆</p>\n</blockquote>\n<p>OK,就这样一份地图模板就制作好了，也可以说图结构的顶点确定好了，那么接下来就是确定边权值。<br>测量边权值的方法，我这里我采用高德地图的测距小工具，几分钟就全部测量好了，将测量好的数据保存起来，之后用得到。  </p>\n<p>接下来就将地图写入到系统中，就纯靠 printf 画图了<br>现在我们的地图模块就设计好了。但是现在只是一个没有任何信息的图，之后还将导入景点编号、景点信息、边权值。</p>\n<h3 id=\"创建数据结构并初始化\"><a href=\"#创建数据结构并初始化\" class=\"headerlink\" title=\"创建数据结构并初始化\"></a>创建数据结构并初始化</h3><p>将我们测量好的数据保存于相应的.txt文件中，这里我将景点编号保存在<strong>Number.txt</strong>文件，景点名称保存在<strong>Name.txt</strong>文件，景点信息保存在<strong>info.txt</strong>文件，各两点间的距离（边权值）保存在<strong>Distance.txt</strong>文件。  </p>\n<p>然后创建我们所需的数据结构</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#define N 15\t\t\t\t//顶点数目值\n#define M 22\t\t\t\t//边数目值\n#define VexType string\t\t//顶点数据类型\n#define EdgeType int\t\t//边数据类型\n#define INF 0x3f3f3f3f\t\t//作为最大值\n\n//景点数据结构\ntypedef struct Spot\n{\n\tint number;\n\tchar name[20];\n\tchar SpotInfo[50];\n}Spot;\n\n//图的数据结构\ntypedef struct Graph\n{\n\tVexType V[N];\t\t//顶点表\n\tEdgeType E[N][N];\t//边表\n\tint vnum, ednum;\t//顶点数、边数\n}Graph;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>初始化</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">//初始化图的顶点表，邻接矩阵等\nvoid InitGraph(Graph&amp; G)\n{\n\t//初始化边表\n\tfor (int i = 0; i &lt; N; i++) {\n\t\tfor (int j = 0; j &lt; N; j++) {\n\t\t\tG.E[i][j] = INF;\n\t\t}\n\t}\n\tG.ednum = G.vnum = 0;\t//初始化顶点数、边数\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>插入顶点和边</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">//插入点函数，改变顶点表\nvoid InsertNode(Graph&amp; G, VexType v)\n{\n\tif (G.vnum &lt; N)\n\t{\n\t\tG.V[G.vnum++] = v;\n\t}\n}\n\n//插入边函数，改变邻接矩阵\nvoid InsertEdge(Graph&amp; G, VexType v, VexType w, int weight)\n{\n\tint p1, p2;\n\tp1 = p2 = -1;\n\tfor (int i = 0; i &lt; G.vnum; i++)\n\t{\n\t\tif (G.V[i] == v)p1 = i;\n\t\tif (G.V[i] == w)p2 = i;\n\t}\n\tif (p1 != -1 &amp;&amp; p2 != -1)\n\t{\n\t\tG.E[p1][p2] = G.E[p2][p1] = weight;\t//无向图邻接矩阵对称\n\t\tG.ednum++;\n\t}\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>创建图，读取文件导入数据</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">//创建图功能实现函数\nvoid CreatGraph(Graph&amp; G)\n{\n\tint vn, an;\t//顶点数，边数\n\tvn = N;\n\tan = M;\n\tint count = 0;\n\tchar str1[20], str2[20];\n\tstring s1, s2;\n\tint temp = 0;\n\tFILE* fp1 = fopen(\"Number.txt\", \"r\");\n\tFILE* fp2 = fopen(\"Distance.txt\", \"r\");\n\tif (fp1 == NULL &amp;&amp; fp2 == NULL)\n\t{\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\t//从文件中读取景点编号\n\tfor (int i = 0; i &lt; N; i++)\n\t{\n\t\tcount = fscanf(fp1, \"%s\", str1);\n\t\tif (count == -1)exit(0);\n\t\ts1 = str1;\n\t\tInsertNode(G, s1);\n\t}\n\t//从文件中读取所有边的权值\n\tfor (int i = 0; i &lt; M; i++)\n\t{\n\t\tcount = fscanf(fp2, \"%s %s %d\", str1, str2, &amp;temp);\n\t\tif (count == -1)exit(0);\n\t\ts1 = str1;\n\t\ts2 = str2;\n\t\tInsertEdge(G, s1, s2, temp);\n\t}\n\tfclose(fp1);\n\tfclose(fp2);\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>到这里我们的图就创建完成了</strong></p>\n<h3 id=\"Dijkstra算法\"><a href=\"#Dijkstra算法\" class=\"headerlink\" title=\"Dijkstra算法\"></a>Dijkstra算法</h3><p>无论是在教材还是各类算法书籍中都少不了的最短路径算法Dijkstra算法，是由荷兰计算机科学家 Edsger Wybe Dijkstra 在1956年发现的算法，戴克斯特拉算法使用类似广度优先搜索的方法解决赋权图的单源最短路径问题。Dijkstra 算法原始版本仅适用于找到两个顶点之间的最短路径，后来更常见的变体固定了一个顶点作为源结点然后找到该顶点到图中所有其它结点的最短路径，产生一个最短路径树。本算法每次取出未访问结点中距离最小的，用该结点更新其他结点的距离。  </p>\n<blockquote>\n<p>核心思想：按路径长度递增次序产生算法，将图数据结构分为顶点集V和边集E，接下来初始化图的顶点表和邻接矩阵，将所有边的权值设置为无穷大，然后插入点改变顶点表，插入边改变邻接矩阵。之后从第一个顶点开始计算最短路径，假如该顶点与其他顶点有边连接，则将其边权值加入到最短路径集，然后依次比较，最后选出最小的边权值，并记录前驱，然后从前驱开始又执行边权值的比较，直到最后到达终点结束，最短路径值即之前记录过的前驱的边权值相加的最终结果。</p>\n</blockquote>\n<p>这样讲还是难懂，那我们从头开始了解Dijkstra算法吧</p>\n<p>下面以该图为例讲解Dijkstra算法寻找最短路径的过程<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra2.png\"><br>以A为起始点，求A到BCDEF的最短路径  </p>\n<p>要求A到其他5个点的最短距离，我们构造一个数组记录A到BCDEF5个点的路径距离。  </p>\n<p>需要注意的是</p>\n<ul>\n<li>如果A能够直接到达节点，则使用路径长度，即边权值作为其距离。</li>\n<li>如果A节点不能够直接到达节点则用无穷大表示A到该点的距离。</li>\n<li>任何点到自身的距离都为0  </li>\n</ul>\n<p>在最开始A到其余点的数组如下  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>10</td>\n<td>∞</td>\n<td>4</td>\n<td>∞</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<p>Dijkstra算法的思想是：从以上最短距离数组中每次选择一个最近的点，将其作为下一个点，然后重新计算从起始点经过该点到其他所有点的距离，并更新最短距离的值，已经选取过的点就是确定了最短路径的点，不再参与下一次计算。  </p>\n<p>我们来看看实际的选取过程</p>\n<h4 id=\"第一次选取\"><a href=\"#第一次选取\" class=\"headerlink\" title=\"第一次选取\"></a>第一次选取</h4><p>构建好的数组是这样的  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>10</td>\n<td>∞</td>\n<td>4</td>\n<td>∞</td>\n<td>∞</td>\n</tr>\n<tr>\n<td>第一步选取该最短路径数组中值最小的一个点。因为A点到本身不需要参与运算，所以从剩下的点中选择最短的一个是D。</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>第二步以<strong>A-D</strong>的距离为最近距离更新A点到所有点的距离。即相当于A点经过D点，计算A到其他点的距离。</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra3.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-C:19<br>A-D: A-D:4<br>A-E: A-D-E:10<br>A-F: A-D-F:∞  </p>\n<p>将现在A到各个点的距离和之前相比较，取最小值，更新BCE的距离，得到新的最短距离数组  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>19</td>\n<td>4</td>\n<td>10</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<h4 id=\"第二次选取\"><a href=\"#第二次选取\" class=\"headerlink\" title=\"第二次选取\"></a>第二次选取</h4><p>AD两点已经选取，不再参与下面的计算。  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>19</td>\n<td>4</td>\n<td>10</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<p>以B为最新点，更新最短距离数组<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra4.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-B-C:14<br>A-D: A-D:4<br>A-E: A-D-B-E:12<br>A-F: A-D-B-F:∞</p>\n<p>对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。<br>C点由19更新成14，E点走A-D-E为10，<strong>距离更短所以不更新</strong>，得到如下数组：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>14</td>\n<td>4</td>\n<td>10</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<h4 id=\"第三次选取\"><a href=\"#第三次选取\" class=\"headerlink\" title=\"第三次选取\"></a>第三次选取</h4><p>第一步：选取除了A B D节点之外的剩余节点中最短节点，为点E<br>第二步：以E点为最新节点，更新最短路径数组<br>因为在上一步中计算达到E点的距离时没有更新距离，A-D-E 为10 最短，所以更新E点到B C F点的距离时走的路径是A-D-E。注意这里的最短距离有对应的路径，选择最小值就是选择最短距离。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra5.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-E-C:11<br>A-D: A-D:4<br>A-E: A-D-E:10<br>A-F: A-D-E-F:22<br>对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。<br>更新C点走A-D-E-C为11，比之前的A-D-B-C 14距离更近，更新到F点距离，得到如下数组：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>22</td>\n</tr>\n</tbody></table>\n<h4 id=\"第四次选取\"><a href=\"#第四次选取\" class=\"headerlink\" title=\"第四次选取\"></a>第四次选取</h4><p>第一步：选取除了A B D E节点之外的剩余节点中最短节点，为点C<br>第二步：以C点为最新节点，更新最短路径数组<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra6.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-E-C:11<br>A-D: 4<br>A-E: A-D-E:10<br>A-F: A-D-E-C-F:16<br>对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。<br>更新到F点距离，可以得到如下数组：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>16</td>\n</tr>\n</tbody></table>\n<h4 id=\"第五次选取\"><a href=\"#第五次选取\" class=\"headerlink\" title=\"第五次选取\"></a>第五次选取</h4><p>第一步：选取除了A B C D E节点之外的剩余节点中最短节点，也就是最后一个节点：F<br>第二步：以F点为最新节点，更新最短路径数组。由于F点是最后一个点，所以也不用更新数组，目前的数组就是所求数组将F点加入最短路径范围中，此时所有的点都加入了最短路径范围，也就是说A点到所有点的距离都找到了。最终得出的距离值为：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra7.png\"><br>最终得到的结果为：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>16</td>\n</tr>\n</tbody></table>\n<h4 id=\"最终结果\"><a href=\"#最终结果\" class=\"headerlink\" title=\"最终结果\"></a>最终结果</h4><table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>16</td>\n</tr>\n</tbody></table>\n<p>A-A: 0  </p>\n<p>A-B: A-D-B:6<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra8.png\"></p>\n<p>A-C: A-D-E-C:11<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra9.png\"></p>\n<p>A-D:4<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra10.png\"></p>\n<p>A-E: A-D-E:10<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra11.png\"></p>\n<p>A-F: A-D-E-C-F:16<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra12.png\"></p>\n<h3 id=\"代码实现Dijkstra算法\"><a href=\"#代码实现Dijkstra算法\" class=\"headerlink\" title=\"代码实现Dijkstra算法\"></a>代码实现Dijkstra算法</h3><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#define INF 0x3f3f3f3f\t//作为最大值\n\n//Dijkstra算法全局变量\nbool S[N];\t//顶点集\nint D[N];\t//到各个顶点的最短路径\nint Pr[N];\t//记录前驱\n\nvoid Dijkstra(Graph G, int v)\n{\n\t//初始化\n\tint n = G.vnum;\t//n为图的顶点个数\n\tfor (int i = 0; i &lt; n; i++)\n\t{\n\t\tS[i] = false;\n\t\tD[i] = G.E[v][i];\n\t\tif (D[i] &lt; INF)\n\t\t{\n\t\t\tPr[i] = v;\t//v与i连接，v为前驱\n\t\t}\n\t\telse\n\t\t{\n\t\t\tPr[i] = -1;\n\t\t}\n\t}\n\tS[v] = true;\n\tD[v] = 0;\n\t//初始化结束，求最短路径，并加入S集\n\tfor (int i = 1; i &lt; n; i++)\n\t{\n\t\tint min = INF;\n\t\tint temp;\n\t\tfor (int w = 0; w &lt; n; w++)\n\t\t{\n\t\t\tif (!S[w] &amp;&amp; D[w] &lt; min)\t\t//某点temp未加入S集，且为当前最短路径\n\t\t\t{\n\t\t\t\ttemp = w;\n\t\t\t\tmin = D[w];\n\t\t\t}\n\t\t}\n\t\tS[temp] = true;\n\t\t//更新从源点出发至其余点的最短路径 通过temp\n\t\tfor (int w = 0; w &lt; n; w++)\n\t\t{\n\t\t\tif (!S[w] &amp;&amp; D[temp] + G.E[temp][w] &lt; D[w])\n\t\t\t{\n\t\t\t\tD[w] = D[temp] + G.E[temp][w];\n\t\t\t\tPr[w] = temp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n//输出最短路径\nvoid Path(Graph G, int v)\n{\n\tif (Pr[v] == -1)\n\t{\n\t\treturn;\n\t}\n\tPath(G, Pr[v]);\n\tcout &lt;&lt; G.V[Pr[v]] &lt;&lt; \"-&gt;\";\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导游系统问路查询功能\"><a href=\"#导游系统问路查询功能\" class=\"headerlink\" title=\"导游系统问路查询功能\"></a>导游系统问路查询功能</h3><p>在了解以及实现了Dijkstra算法之后，我们还要在程序中调用它。  </p>\n<ul>\n<li>用户只需输入起点和终点，系统就会为用户提供最短路径。  </li>\n</ul>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">//调用最短路径-Dijkstra算法\nvoid Shortest_Dijkstra(Graph&amp; G)\n{\n\tstring vname;\n\tstring vnamed;\n\tint v1, v2;\n\tchar ch = '1';\n\n\twhile (true)\n\t{\n\t\tv1 = -1;\n\t\tv2 = -1;\n\t\tcout &lt;&lt; \"请输入起点编号：\";\n\t\tcin &gt;&gt; vname;\n\t\tfor (int i = 0; i &lt; G.vnum; i++) {\n\t\t\tif (G.V[i] == vname)\n\t\t\t{\n\t\t\t\tv1 = i;\n\t\t\t}\n\t\t}\n\t\tif (v1 == -1)\n\t\t{\n\t\t\tcout &lt;&lt; \"没有找到输入点！\" &lt;&lt; endl;\n\t\t\tsystem(\"pause\");\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tcout &lt;&lt; \"请输入终点编号：\";\n\t\tcin &gt;&gt; vnamed;\n\t\tfor (int i = 0; i &lt; G.vnum; i++) {\n\t\t\tif (G.V[i] == vnamed)\n\t\t\t{\n\t\t\t\tv2 = i;\n\t\t\t}\n\t\t}\n\t\tif (v2 == -1)\n\t\t{\n\t\t\tcout &lt;&lt; \"没有找到终点！\" &lt;&lt; endl;\n\t\t\tsystem(\"pause\");\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tDijkstra(G, v1);\n\t\tcout &lt;&lt; \"\\n目标点\" &lt;&lt; \"\\t\" &lt;&lt; \"最短路径值\" &lt;&lt; \"\\t\" &lt;&lt; \"最短路径\" &lt;&lt; \"\\t\" &lt;&lt; endl;\n\t\tfor (int i = 0; i &lt; G.vnum; i++)\n\t\t{\n\t\t\tif (i != v1 &amp;&amp; i == v2)\n\t\t\t{\n\t\t\t\tcout &lt;&lt; \" \" &lt;&lt; G.V[i] &lt;&lt; \"\\t\" &lt;&lt; D[i] &lt;&lt; \"米\" &lt;&lt; \"\\t\" &lt;&lt; \"\\t\";\n\t\t\t\tPath(G, i);\n\t\t\t\tcout &lt;&lt; G.V[i] &lt;&lt; endl;\n\t\t\t}\n\t\t}\n\t}\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果展示:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">请输入起点编号：1\n请输入终点编号：5\n\n目标点  最短路径值      最短路径\n 5      400米           1-&gt;2-&gt;4-&gt;5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导游系统信息查询功能\"><a href=\"#导游系统信息查询功能\" class=\"headerlink\" title=\"导游系统信息查询功能\"></a>导游系统信息查询功能</h3><p>信息查询功能很简单，把预先准备的景点信息文件读取到程序的景点数据结构中，然后输出它就行了。  </p>\n<p>部分代码展示</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">void NameFile(Spot spt[])\n{\n\tint count = 0;\n\tint i;\n\tFILE* fp = fopen(\"Name.txt\", \"r\");\n\n\tif (fp == NULL) {\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\tfor (i = 0; i &lt; N; i++) {\n\t\tspt[i].number = i + 1;\n\t\tcount = fscanf(fp, \"%s\", spt[i].name);\n\t\tif (count == -1) exit(0);\n\t\t//printf(\"%s\\n\", spt[i].name);\t\t测试代码\n\t}\n\tfclose(fp);\n}\n\nvoid InfoFile(Spot spt[])\n{\n\tint count = 0;\n\tint i;\n\tFILE* fp = fopen(\"Info.txt\", \"r\");\n\n\tif (fp == NULL) {\n\t\tprintf(\"打开文件失败！\\n\");\n\t\texit(0);\n\t}\n\tfor (i = 0; i &lt; N; i++) {\n\t\tcount = fscanf(fp, \"%s\", spt[i].SpotInfo);\n\t\tif (count == -1)exit(0);\n\t\t//printf(\"%s\\n\", spt[i].SpotInfo);\t\t测试代码\n\t}\n\tfclose(fp);\n}\n\nvoid printInfo(Spot spt[], int i)\n{\n\tprintf(\"\\n%d.%s\\n简介：%s\\n\", spt[i].number, spt[i].name, spt[i].SpotInfo);\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导游系统景点类型查询功能\"><a href=\"#导游系统景点类型查询功能\" class=\"headerlink\" title=\"导游系统景点类型查询功能\"></a>导游系统景点类型查询功能</h3><p>功能分析：</p>\n<ul>\n<li>1个景点类型包含若干个景点</li>\n<li>用户可以查询该景点类型包含哪几个景点</li>\n<li>用户可以详细了解某一个景点的信息</li>\n</ul>\n<p>首先我们初始化景点类型数据结构，然后将各个景点进行类型分类，然后加入景点类型查询模块，后面嵌套一下景点信息查询模块。</p>\n<p>部分代码展示：</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#define TN 5\t\t\t\t//类型数目值\n\n//景点类型数据结构\ntypedef struct SpotType\n{\n\tstring typeName;\n\tSpot S[TN];\n\tint number;\n}SpotType;\n\n//初始化景点类型数据结构\nvoid BuildingType(Spot spt[], SpotType stype[])\n{\n\tstype[0].typeName = \"教学楼\";\n\tstype[1].typeName = \"学生宿舍\";\n\tstype[2].typeName = \"食堂\";\n\tstype[3].typeName = \"课外活动点\";\n\tstype[0].S[0] = spt[2];\n\tstype[0].S[1] = spt[8];\n\tstype[0].S[2] = spt[10];\n\tstype[0].number = 3;\n\tstype[1].S[0] = spt[4];\n\tstype[1].S[1] = spt[6];\n\tstype[1].S[2] = spt[7];\n\tstype[1].number = 3;\n\tstype[2].S[0] = spt[3];\n\tstype[2].S[1] = spt[9];\n\tstype[2].number = 2;\n\tstype[3].S[0] = spt[1];\n\tstype[3].S[1] = spt[5];\n\tstype[3].S[2] = spt[12];\n\tstype[3].S[3] = spt[14];\n\tstype[3].number = 4;\n}\n\n//查询景点类型\nvoid ShowType(Spot spt[], SpotType stype[])\n{\n\tint select = 0;\n\n\twhile (true)\n\t{\n\t\tcout &lt;&lt; \"                                                    |==============================|\" &lt;&lt; endl;\n\t\tcout &lt;&lt; \"                                                    |          1.\" &lt;&lt; stype[0].typeName &lt;&lt; \"            |\" &lt;&lt; endl;\n\t\tcout &lt;&lt; \"                                                    |          2.\" &lt;&lt; stype[1].typeName &lt;&lt; \"          |\" &lt;&lt; endl;\n\t\tcout &lt;&lt; \"                                                    |          3.\" &lt;&lt; stype[2].typeName &lt;&lt; \"              |\" &lt;&lt; endl;\n\t\tcout &lt;&lt; \"                                                    |          4.\" &lt;&lt; stype[3].typeName &lt;&lt; \"        |\" &lt;&lt; endl;\n\t\tcout &lt;&lt; \"                                                    |==============================|\" &lt;&lt; endl;\n\t\tcout &lt;&lt; \"请选择你需要您要了解的类型：\";\n\t\tcin &gt;&gt; select;\n\t\tgetchar();\n\t\tswitch (select)\n\t\t{\n\t\tcase 1:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcout &lt;&lt; \"请输入有效选项！\\n回车键继续...\" &lt;&lt; endl;\n\t\t\tgetchar();\n\t\t\tsystem(\"cls\");\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t}\n\t\tcout &lt;&lt; \"\\n您需要了解以上建筑信息吗？（输入1了解，输入0取消）：\";\n\t\tint select2;\n\t\tint select3;\n\t\twhile (true)\n\t\t{\n\t\t\tcin &gt;&gt; select2;\n\t\t\tif (select2 == 1)\n\t\t\t{\n\t\t\t\twhile (true)\n\t\t\t\t{\n\t\t\t\t\tcout &lt;&lt; \"\\n请输入你想要了解建筑的编号（输入0取消）：\";\n\t\t\t\t\tcin &gt;&gt; select3;\n\t\t\t\t\tif (select == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 3 || select3 == 9 || select3 == 11)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout &lt;&lt; \"请输入正确的此类型建筑编号！\" &lt;&lt; endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (select == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 5 || select3 == 7 || select3 == 8)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout &lt;&lt; \"请输入正确的此类型建筑编号！\" &lt;&lt; endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (select == 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 4 || select3 == 10)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout &lt;&lt; \"请输入正确的此类型建筑编号！\" &lt;&lt; endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (select == 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (select3 == 2 || select3 == 6 || select3 == 13 || select3 == 15)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (select3 == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcout &lt;&lt; \"请输入正确的此类型建筑编号！\" &lt;&lt; endl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (select2 == 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout &lt;&lt; \"请输入正确选项！\" &lt;&lt; endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (select3 == 0) break;\n\t\t}\n\t}\n} <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本次的校园导游系统是我的数据结构课程设计，希望这篇文章能够帮我记下Dijkstra算法的实际运用，今后遇到相应的算法也能够有解决思路。  </p>\n<p>本次的导游系统介绍就到这了，有需要看源代码的朋友可以到我的 GitHub 仓库中查看。  </p>\n<h2 id=\"链接：\"><a href=\"#链接：\" class=\"headerlink\" title=\"链接：\"></a>链接：</h2><p><a href=\"https://github.com/InvictusEd/Campus-tour-guide-system.git\">校园导游系统</a></p>\n<blockquote>\n<p>本章一句：<br>当你因为错过太阳而哭泣的时候，你也要错过群星了。——泰戈尔《飞鸟集》</p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>&emsp;&emsp;本篇文章的目的是记录下我设计并实现《 C 校园导游系统》的过程，其实我本来想要把这个系统做的很好，但是奈何本学期出现了一些突发事件，导致时间精力都很有限，所以只能暂时搁置了。<br>&emsp;&emsp;选择这个项目的初心是为了锻炼自己，但最终我在它身上只花费了3天时间，作为达到数据结构课程设计的要求它是完全满足的，但是对我而言离我想象中的要求还差得远，就像它只是一个游戏demo，并不是成品。<br>&emsp;&emsp;那为什么我还要拿出来做文章呢？我能力有限无法真正完成它，大概率以后也没时间去做它了，但是记录下万一哪天用上了呢，当然也可以给后辈一个参考价值吧。<br>&emsp;&emsp;不多说了，现在进入正题吧。</p>\n<h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><ul>\n<li><p>提供直观的学校地图界面供用户进行查看，以点作为景点，以边作为道路；  </p>\n</li>\n<li><p>提供景点相关信息查询功能，能够查询景点位置和输出景点的相关信息；  </p>\n</li>\n<li><p>提供问路查询功能，用户只需输入起点和终点，系统就会为用户提供最短路径；  </p>\n</li>\n<li><p>提供景点类型查询功能，用户可查询相关类型建筑及其信息； </p>\n</li>\n<li><p><strong>总结：《校园导游咨询系统》需要为用户提供一个可视化的校园平面图，并且提供景点查询功能和最短路径查询功能，满足用户的对校园导游系统的基本需求。</strong></p>\n</li>\n</ul>\n<h2 id=\"设计过程\"><a href=\"#设计过程\" class=\"headerlink\" title=\"设计过程\"></a>设计过程</h2><h3 id=\"地图设计\"><a href=\"#地图设计\" class=\"headerlink\" title=\"地图设计\"></a>地图设计</h3><p>要制作导游系统，首先就是明确我们的导游范围，为了明确如何画出地图，我查看了我们学校的地图。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/yxnumap.png\" alt=\"玉溪师范学院地图\" title=\"玉溪师范学院地图\"><br>然后根据地图筛选出了15个景点建筑加入到了这次的系统地图中。<br>将15个地点抽象出来构成图结构<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/map1.png\"></p>\n<blockquote>\n<p>1.东北门 2.大学生活动中心 3.实训大楼A 4.滋味苑 5.龙马公寓 6.后山 7.学生宿舍F,G幢 8.学生宿舍K,L,M,N幢 9.主教学区 10.品味苑 11.艺术综合楼 12.图书馆 13.运动场 14.东南门 15.传习馆</p>\n</blockquote>\n<p>OK,就这样一份地图模板就制作好了，也可以说图结构的顶点确定好了，那么接下来就是确定边权值。<br>测量边权值的方法，我这里我采用高德地图的测距小工具，几分钟就全部测量好了，将测量好的数据保存起来，之后用得到。  </p>\n<p>接下来就将地图写入到系统中，就纯靠 printf 画图了<br>现在我们的地图模块就设计好了。但是现在只是一个没有任何信息的图，之后还将导入景点编号、景点信息、边权值。</p>\n<h3 id=\"创建数据结构并初始化\"><a href=\"#创建数据结构并初始化\" class=\"headerlink\" title=\"创建数据结构并初始化\"></a>创建数据结构并初始化</h3><p>将我们测量好的数据保存于相应的.txt文件中，这里我将景点编号保存在<strong>Number.txt</strong>文件，景点名称保存在<strong>Name.txt</strong>文件，景点信息保存在<strong>info.txt</strong>文件，各两点间的距离（边权值）保存在<strong>Distance.txt</strong>文件。  </p>\n<p>然后创建我们所需的数据结构</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#define N 15\t\t\t\t&#x2F;&#x2F;顶点数目值\n#define M 22\t\t\t\t&#x2F;&#x2F;边数目值\n#define VexType string\t\t&#x2F;&#x2F;顶点数据类型\n#define EdgeType int\t\t&#x2F;&#x2F;边数据类型\n#define INF 0x3f3f3f3f\t\t&#x2F;&#x2F;作为最大值\n\n&#x2F;&#x2F;景点数据结构\ntypedef struct Spot\n&#123;\n\tint number;\n\tchar name[20];\n\tchar SpotInfo[50];\n&#125;Spot;\n\n&#x2F;&#x2F;图的数据结构\ntypedef struct Graph\n&#123;\n\tVexType V[N];\t\t&#x2F;&#x2F;顶点表\n\tEdgeType E[N][N];\t&#x2F;&#x2F;边表\n\tint vnum, ednum;\t&#x2F;&#x2F;顶点数、边数\n&#125;Graph;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>初始化</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F;初始化图的顶点表，邻接矩阵等\nvoid InitGraph(Graph&amp; G)\n&#123;\n\t&#x2F;&#x2F;初始化边表\n\tfor (int i &#x3D; 0; i &lt; N; i++) &#123;\n\t\tfor (int j &#x3D; 0; j &lt; N; j++) &#123;\n\t\t\tG.E[i][j] &#x3D; INF;\n\t\t&#125;\n\t&#125;\n\tG.ednum &#x3D; G.vnum &#x3D; 0;\t&#x2F;&#x2F;初始化顶点数、边数\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>插入顶点和边</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F;插入点函数，改变顶点表\nvoid InsertNode(Graph&amp; G, VexType v)\n&#123;\n\tif (G.vnum &lt; N)\n\t&#123;\n\t\tG.V[G.vnum++] &#x3D; v;\n\t&#125;\n&#125;\n\n&#x2F;&#x2F;插入边函数，改变邻接矩阵\nvoid InsertEdge(Graph&amp; G, VexType v, VexType w, int weight)\n&#123;\n\tint p1, p2;\n\tp1 &#x3D; p2 &#x3D; -1;\n\tfor (int i &#x3D; 0; i &lt; G.vnum; i++)\n\t&#123;\n\t\tif (G.V[i] &#x3D;&#x3D; v)p1 &#x3D; i;\n\t\tif (G.V[i] &#x3D;&#x3D; w)p2 &#x3D; i;\n\t&#125;\n\tif (p1 !&#x3D; -1 &amp;&amp; p2 !&#x3D; -1)\n\t&#123;\n\t\tG.E[p1][p2] &#x3D; G.E[p2][p1] &#x3D; weight;\t&#x2F;&#x2F;无向图邻接矩阵对称\n\t\tG.ednum++;\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>创建图，读取文件导入数据</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F;创建图功能实现函数\nvoid CreatGraph(Graph&amp; G)\n&#123;\n\tint vn, an;\t&#x2F;&#x2F;顶点数，边数\n\tvn &#x3D; N;\n\tan &#x3D; M;\n\tint count &#x3D; 0;\n\tchar str1[20], str2[20];\n\tstring s1, s2;\n\tint temp &#x3D; 0;\n\tFILE* fp1 &#x3D; fopen(&quot;Number.txt&quot;, &quot;r&quot;);\n\tFILE* fp2 &#x3D; fopen(&quot;Distance.txt&quot;, &quot;r&quot;);\n\tif (fp1 &#x3D;&#x3D; NULL &amp;&amp; fp2 &#x3D;&#x3D; NULL)\n\t&#123;\n\t\tprintf(&quot;打开文件失败！\\n&quot;);\n\t\texit(0);\n\t&#125;\n\t&#x2F;&#x2F;从文件中读取景点编号\n\tfor (int i &#x3D; 0; i &lt; N; i++)\n\t&#123;\n\t\tcount &#x3D; fscanf(fp1, &quot;%s&quot;, str1);\n\t\tif (count &#x3D;&#x3D; -1)exit(0);\n\t\ts1 &#x3D; str1;\n\t\tInsertNode(G, s1);\n\t&#125;\n\t&#x2F;&#x2F;从文件中读取所有边的权值\n\tfor (int i &#x3D; 0; i &lt; M; i++)\n\t&#123;\n\t\tcount &#x3D; fscanf(fp2, &quot;%s %s %d&quot;, str1, str2, &amp;temp);\n\t\tif (count &#x3D;&#x3D; -1)exit(0);\n\t\ts1 &#x3D; str1;\n\t\ts2 &#x3D; str2;\n\t\tInsertEdge(G, s1, s2, temp);\n\t&#125;\n\tfclose(fp1);\n\tfclose(fp2);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>到这里我们的图就创建完成了</strong></p>\n<h3 id=\"Dijkstra算法\"><a href=\"#Dijkstra算法\" class=\"headerlink\" title=\"Dijkstra算法\"></a>Dijkstra算法</h3><p>无论是在教材还是各类算法书籍中都少不了的最短路径算法Dijkstra算法，是由荷兰计算机科学家 Edsger Wybe Dijkstra 在1956年发现的算法，戴克斯特拉算法使用类似广度优先搜索的方法解决赋权图的单源最短路径问题。Dijkstra 算法原始版本仅适用于找到两个顶点之间的最短路径，后来更常见的变体固定了一个顶点作为源结点然后找到该顶点到图中所有其它结点的最短路径，产生一个最短路径树。本算法每次取出未访问结点中距离最小的，用该结点更新其他结点的距离。  </p>\n<blockquote>\n<p>核心思想：按路径长度递增次序产生算法，将图数据结构分为顶点集V和边集E，接下来初始化图的顶点表和邻接矩阵，将所有边的权值设置为无穷大，然后插入点改变顶点表，插入边改变邻接矩阵。之后从第一个顶点开始计算最短路径，假如该顶点与其他顶点有边连接，则将其边权值加入到最短路径集，然后依次比较，最后选出最小的边权值，并记录前驱，然后从前驱开始又执行边权值的比较，直到最后到达终点结束，最短路径值即之前记录过的前驱的边权值相加的最终结果。</p>\n</blockquote>\n<p>这样讲还是难懂，那我们从头开始了解Dijkstra算法吧</p>\n<p>下面以该图为例讲解Dijkstra算法寻找最短路径的过程<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra2.png\"><br>以A为起始点，求A到BCDEF的最短路径  </p>\n<p>要求A到其他5个点的最短距离，我们构造一个数组记录A到BCDEF5个点的路径距离。  </p>\n<p>需要注意的是</p>\n<ul>\n<li>如果A能够直接到达节点，则使用路径长度，即边权值作为其距离。</li>\n<li>如果A节点不能够直接到达节点则用无穷大表示A到该点的距离。</li>\n<li>任何点到自身的距离都为0  </li>\n</ul>\n<p>在最开始A到其余点的数组如下  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>10</td>\n<td>∞</td>\n<td>4</td>\n<td>∞</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<p>Dijkstra算法的思想是：从以上最短距离数组中每次选择一个最近的点，将其作为下一个点，然后重新计算从起始点经过该点到其他所有点的距离，并更新最短距离的值，已经选取过的点就是确定了最短路径的点，不再参与下一次计算。  </p>\n<p>我们来看看实际的选取过程</p>\n<h4 id=\"第一次选取\"><a href=\"#第一次选取\" class=\"headerlink\" title=\"第一次选取\"></a>第一次选取</h4><p>构建好的数组是这样的  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>10</td>\n<td>∞</td>\n<td>4</td>\n<td>∞</td>\n<td>∞</td>\n</tr>\n<tr>\n<td>第一步选取该最短路径数组中值最小的一个点。因为A点到本身不需要参与运算，所以从剩下的点中选择最短的一个是D。</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>第二步以<strong>A-D</strong>的距离为最近距离更新A点到所有点的距离。即相当于A点经过D点，计算A到其他点的距离。</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra3.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-C:19<br>A-D: A-D:4<br>A-E: A-D-E:10<br>A-F: A-D-F:∞  </p>\n<p>将现在A到各个点的距离和之前相比较，取最小值，更新BCE的距离，得到新的最短距离数组  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>19</td>\n<td>4</td>\n<td>10</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<h4 id=\"第二次选取\"><a href=\"#第二次选取\" class=\"headerlink\" title=\"第二次选取\"></a>第二次选取</h4><p>AD两点已经选取，不再参与下面的计算。  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>19</td>\n<td>4</td>\n<td>10</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<p>以B为最新点，更新最短距离数组<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra4.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-B-C:14<br>A-D: A-D:4<br>A-E: A-D-B-E:12<br>A-F: A-D-B-F:∞</p>\n<p>对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。<br>C点由19更新成14，E点走A-D-E为10，<strong>距离更短所以不更新</strong>，得到如下数组：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>14</td>\n<td>4</td>\n<td>10</td>\n<td>∞</td>\n</tr>\n</tbody></table>\n<h4 id=\"第三次选取\"><a href=\"#第三次选取\" class=\"headerlink\" title=\"第三次选取\"></a>第三次选取</h4><p>第一步：选取除了A B D节点之外的剩余节点中最短节点，为点E<br>第二步：以E点为最新节点，更新最短路径数组<br>因为在上一步中计算达到E点的距离时没有更新距离，A-D-E 为10 最短，所以更新E点到B C F点的距离时走的路径是A-D-E。注意这里的最短距离有对应的路径，选择最小值就是选择最短距离。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra5.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-E-C:11<br>A-D: A-D:4<br>A-E: A-D-E:10<br>A-F: A-D-E-F:22<br>对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。<br>更新C点走A-D-E-C为11，比之前的A-D-B-C 14距离更近，更新到F点距离，得到如下数组：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>22</td>\n</tr>\n</tbody></table>\n<h4 id=\"第四次选取\"><a href=\"#第四次选取\" class=\"headerlink\" title=\"第四次选取\"></a>第四次选取</h4><p>第一步：选取除了A B D E节点之外的剩余节点中最短节点，为点C<br>第二步：以C点为最新节点，更新最短路径数组<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra6.png\"><br>A-A: 0<br>A-B: A-D-B:6<br>A-C: A-D-E-C:11<br>A-D: 4<br>A-E: A-D-E:10<br>A-F: A-D-E-C-F:16<br>对比现在的最短距离和上一个数组的距离，到相同节点选最小的，更新最短距离数组。<br>更新到F点距离，可以得到如下数组：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>16</td>\n</tr>\n</tbody></table>\n<h4 id=\"第五次选取\"><a href=\"#第五次选取\" class=\"headerlink\" title=\"第五次选取\"></a>第五次选取</h4><p>第一步：选取除了A B C D E节点之外的剩余节点中最短节点，也就是最后一个节点：F<br>第二步：以F点为最新节点，更新最短路径数组。由于F点是最后一个点，所以也不用更新数组，目前的数组就是所求数组将F点加入最短路径范围中，此时所有的点都加入了最短路径范围，也就是说A点到所有点的距离都找到了。最终得出的距离值为：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra7.png\"><br>最终得到的结果为：  </p>\n<table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>16</td>\n</tr>\n</tbody></table>\n<h4 id=\"最终结果\"><a href=\"#最终结果\" class=\"headerlink\" title=\"最终结果\"></a>最终结果</h4><table>\n<thead>\n<tr>\n<th>A</th>\n<th>B</th>\n<th>C</th>\n<th>D</th>\n<th>E</th>\n<th>F</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>6</td>\n<td>11</td>\n<td>4</td>\n<td>10</td>\n<td>16</td>\n</tr>\n</tbody></table>\n<p>A-A: 0  </p>\n<p>A-B: A-D-B:6<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra8.png\"></p>\n<p>A-C: A-D-E-C:11<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra9.png\"></p>\n<p>A-D:4<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra10.png\"></p>\n<p>A-E: A-D-E:10<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra11.png\"></p>\n<p>A-F: A-D-E-C-F:16<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/Dijkstra12.png\"></p>\n<h3 id=\"代码实现Dijkstra算法\"><a href=\"#代码实现Dijkstra算法\" class=\"headerlink\" title=\"代码实现Dijkstra算法\"></a>代码实现Dijkstra算法</h3><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#define INF 0x3f3f3f3f\t&#x2F;&#x2F;作为最大值\n\n&#x2F;&#x2F;Dijkstra算法全局变量\nbool S[N];\t&#x2F;&#x2F;顶点集\nint D[N];\t&#x2F;&#x2F;到各个顶点的最短路径\nint Pr[N];\t&#x2F;&#x2F;记录前驱\n\nvoid Dijkstra(Graph G, int v)\n&#123;\n\t&#x2F;&#x2F;初始化\n\tint n &#x3D; G.vnum;\t&#x2F;&#x2F;n为图的顶点个数\n\tfor (int i &#x3D; 0; i &lt; n; i++)\n\t&#123;\n\t\tS[i] &#x3D; false;\n\t\tD[i] &#x3D; G.E[v][i];\n\t\tif (D[i] &lt; INF)\n\t\t&#123;\n\t\t\tPr[i] &#x3D; v;\t&#x2F;&#x2F;v与i连接，v为前驱\n\t\t&#125;\n\t\telse\n\t\t&#123;\n\t\t\tPr[i] &#x3D; -1;\n\t\t&#125;\n\t&#125;\n\tS[v] &#x3D; true;\n\tD[v] &#x3D; 0;\n\t&#x2F;&#x2F;初始化结束，求最短路径，并加入S集\n\tfor (int i &#x3D; 1; i &lt; n; i++)\n\t&#123;\n\t\tint min &#x3D; INF;\n\t\tint temp;\n\t\tfor (int w &#x3D; 0; w &lt; n; w++)\n\t\t&#123;\n\t\t\tif (!S[w] &amp;&amp; D[w] &lt; min)\t\t&#x2F;&#x2F;某点temp未加入S集，且为当前最短路径\n\t\t\t&#123;\n\t\t\t\ttemp &#x3D; w;\n\t\t\t\tmin &#x3D; D[w];\n\t\t\t&#125;\n\t\t&#125;\n\t\tS[temp] &#x3D; true;\n\t\t&#x2F;&#x2F;更新从源点出发至其余点的最短路径 通过temp\n\t\tfor (int w &#x3D; 0; w &lt; n; w++)\n\t\t&#123;\n\t\t\tif (!S[w] &amp;&amp; D[temp] + G.E[temp][w] &lt; D[w])\n\t\t\t&#123;\n\t\t\t\tD[w] &#x3D; D[temp] + G.E[temp][w];\n\t\t\t\tPr[w] &#x3D; temp;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n&#125;\n\n&#x2F;&#x2F;输出最短路径\nvoid Path(Graph G, int v)\n&#123;\n\tif (Pr[v] &#x3D;&#x3D; -1)\n\t&#123;\n\t\treturn;\n\t&#125;\n\tPath(G, Pr[v]);\n\tcout &lt;&lt; G.V[Pr[v]] &lt;&lt; &quot;-&gt;&quot;;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导游系统问路查询功能\"><a href=\"#导游系统问路查询功能\" class=\"headerlink\" title=\"导游系统问路查询功能\"></a>导游系统问路查询功能</h3><p>在了解以及实现了Dijkstra算法之后，我们还要在程序中调用它。  </p>\n<ul>\n<li>用户只需输入起点和终点，系统就会为用户提供最短路径。  </li>\n</ul>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F;调用最短路径-Dijkstra算法\nvoid Shortest_Dijkstra(Graph&amp; G)\n&#123;\n\tstring vname;\n\tstring vnamed;\n\tint v1, v2;\n\tchar ch &#x3D; &#39;1&#39;;\n\n\twhile (true)\n\t&#123;\n\t\tv1 &#x3D; -1;\n\t\tv2 &#x3D; -1;\n\t\tcout &lt;&lt; &quot;请输入起点编号：&quot;;\n\t\tcin &gt;&gt; vname;\n\t\tfor (int i &#x3D; 0; i &lt; G.vnum; i++) &#123;\n\t\t\tif (G.V[i] &#x3D;&#x3D; vname)\n\t\t\t&#123;\n\t\t\t\tv1 &#x3D; i;\n\t\t\t&#125;\n\t\t&#125;\n\t\tif (v1 &#x3D;&#x3D; -1)\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot;没有找到输入点！&quot; &lt;&lt; endl;\n\t\t\tsystem(&quot;pause&quot;);\n\t\t\tsystem(&quot;cls&quot;);\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t&#125;\n\t\tcout &lt;&lt; &quot;请输入终点编号：&quot;;\n\t\tcin &gt;&gt; vnamed;\n\t\tfor (int i &#x3D; 0; i &lt; G.vnum; i++) &#123;\n\t\t\tif (G.V[i] &#x3D;&#x3D; vnamed)\n\t\t\t&#123;\n\t\t\t\tv2 &#x3D; i;\n\t\t\t&#125;\n\t\t&#125;\n\t\tif (v2 &#x3D;&#x3D; -1)\n\t\t&#123;\n\t\t\tcout &lt;&lt; &quot;没有找到终点！&quot; &lt;&lt; endl;\n\t\t\tsystem(&quot;pause&quot;);\n\t\t\tsystem(&quot;cls&quot;);\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t&#125;\n\t\tDijkstra(G, v1);\n\t\tcout &lt;&lt; &quot;\\n目标点&quot; &lt;&lt; &quot;\\t&quot; &lt;&lt; &quot;最短路径值&quot; &lt;&lt; &quot;\\t&quot; &lt;&lt; &quot;最短路径&quot; &lt;&lt; &quot;\\t&quot; &lt;&lt; endl;\n\t\tfor (int i &#x3D; 0; i &lt; G.vnum; i++)\n\t\t&#123;\n\t\t\tif (i !&#x3D; v1 &amp;&amp; i &#x3D;&#x3D; v2)\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot; &quot; &lt;&lt; G.V[i] &lt;&lt; &quot;\\t&quot; &lt;&lt; D[i] &lt;&lt; &quot;米&quot; &lt;&lt; &quot;\\t&quot; &lt;&lt; &quot;\\t&quot;;\n\t\t\t\tPath(G, i);\n\t\t\t\tcout &lt;&lt; G.V[i] &lt;&lt; endl;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果展示:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">请输入起点编号：1\n请输入终点编号：5\n\n目标点  最短路径值      最短路径\n 5      400米           1-&gt;2-&gt;4-&gt;5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导游系统信息查询功能\"><a href=\"#导游系统信息查询功能\" class=\"headerlink\" title=\"导游系统信息查询功能\"></a>导游系统信息查询功能</h3><p>信息查询功能很简单，把预先准备的景点信息文件读取到程序的景点数据结构中，然后输出它就行了。  </p>\n<p>部分代码展示</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">void NameFile(Spot spt[])\n&#123;\n\tint count &#x3D; 0;\n\tint i;\n\tFILE* fp &#x3D; fopen(&quot;Name.txt&quot;, &quot;r&quot;);\n\n\tif (fp &#x3D;&#x3D; NULL) &#123;\n\t\tprintf(&quot;打开文件失败！\\n&quot;);\n\t\texit(0);\n\t&#125;\n\tfor (i &#x3D; 0; i &lt; N; i++) &#123;\n\t\tspt[i].number &#x3D; i + 1;\n\t\tcount &#x3D; fscanf(fp, &quot;%s&quot;, spt[i].name);\n\t\tif (count &#x3D;&#x3D; -1) exit(0);\n\t\t&#x2F;&#x2F;printf(&quot;%s\\n&quot;, spt[i].name);\t\t测试代码\n\t&#125;\n\tfclose(fp);\n&#125;\n\nvoid InfoFile(Spot spt[])\n&#123;\n\tint count &#x3D; 0;\n\tint i;\n\tFILE* fp &#x3D; fopen(&quot;Info.txt&quot;, &quot;r&quot;);\n\n\tif (fp &#x3D;&#x3D; NULL) &#123;\n\t\tprintf(&quot;打开文件失败！\\n&quot;);\n\t\texit(0);\n\t&#125;\n\tfor (i &#x3D; 0; i &lt; N; i++) &#123;\n\t\tcount &#x3D; fscanf(fp, &quot;%s&quot;, spt[i].SpotInfo);\n\t\tif (count &#x3D;&#x3D; -1)exit(0);\n\t\t&#x2F;&#x2F;printf(&quot;%s\\n&quot;, spt[i].SpotInfo);\t\t测试代码\n\t&#125;\n\tfclose(fp);\n&#125;\n\nvoid printInfo(Spot spt[], int i)\n&#123;\n\tprintf(&quot;\\n%d.%s\\n简介：%s\\n&quot;, spt[i].number, spt[i].name, spt[i].SpotInfo);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"导游系统景点类型查询功能\"><a href=\"#导游系统景点类型查询功能\" class=\"headerlink\" title=\"导游系统景点类型查询功能\"></a>导游系统景点类型查询功能</h3><p>功能分析：</p>\n<ul>\n<li>1个景点类型包含若干个景点</li>\n<li>用户可以查询该景点类型包含哪几个景点</li>\n<li>用户可以详细了解某一个景点的信息</li>\n</ul>\n<p>首先我们初始化景点类型数据结构，然后将各个景点进行类型分类，然后加入景点类型查询模块，后面嵌套一下景点信息查询模块。</p>\n<p>部分代码展示：</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#define TN 5\t\t\t\t&#x2F;&#x2F;类型数目值\n\n&#x2F;&#x2F;景点类型数据结构\ntypedef struct SpotType\n&#123;\n\tstring typeName;\n\tSpot S[TN];\n\tint number;\n&#125;SpotType;\n\n&#x2F;&#x2F;初始化景点类型数据结构\nvoid BuildingType(Spot spt[], SpotType stype[])\n&#123;\n\tstype[0].typeName &#x3D; &quot;教学楼&quot;;\n\tstype[1].typeName &#x3D; &quot;学生宿舍&quot;;\n\tstype[2].typeName &#x3D; &quot;食堂&quot;;\n\tstype[3].typeName &#x3D; &quot;课外活动点&quot;;\n\tstype[0].S[0] &#x3D; spt[2];\n\tstype[0].S[1] &#x3D; spt[8];\n\tstype[0].S[2] &#x3D; spt[10];\n\tstype[0].number &#x3D; 3;\n\tstype[1].S[0] &#x3D; spt[4];\n\tstype[1].S[1] &#x3D; spt[6];\n\tstype[1].S[2] &#x3D; spt[7];\n\tstype[1].number &#x3D; 3;\n\tstype[2].S[0] &#x3D; spt[3];\n\tstype[2].S[1] &#x3D; spt[9];\n\tstype[2].number &#x3D; 2;\n\tstype[3].S[0] &#x3D; spt[1];\n\tstype[3].S[1] &#x3D; spt[5];\n\tstype[3].S[2] &#x3D; spt[12];\n\tstype[3].S[3] &#x3D; spt[14];\n\tstype[3].number &#x3D; 4;\n&#125;\n\n&#x2F;&#x2F;查询景点类型\nvoid ShowType(Spot spt[], SpotType stype[])\n&#123;\n\tint select &#x3D; 0;\n\n\twhile (true)\n\t&#123;\n\t\tcout &lt;&lt; &quot;                                                    |&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&quot; &lt;&lt; endl;\n\t\tcout &lt;&lt; &quot;                                                    |          1.&quot; &lt;&lt; stype[0].typeName &lt;&lt; &quot;            |&quot; &lt;&lt; endl;\n\t\tcout &lt;&lt; &quot;                                                    |          2.&quot; &lt;&lt; stype[1].typeName &lt;&lt; &quot;          |&quot; &lt;&lt; endl;\n\t\tcout &lt;&lt; &quot;                                                    |          3.&quot; &lt;&lt; stype[2].typeName &lt;&lt; &quot;              |&quot; &lt;&lt; endl;\n\t\tcout &lt;&lt; &quot;                                                    |          4.&quot; &lt;&lt; stype[3].typeName &lt;&lt; &quot;        |&quot; &lt;&lt; endl;\n\t\tcout &lt;&lt; &quot;                                                    |&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&quot; &lt;&lt; endl;\n\t\tcout &lt;&lt; &quot;请选择你需要您要了解的类型：&quot;;\n\t\tcin &gt;&gt; select;\n\t\tgetchar();\n\t\tswitch (select)\n\t\t&#123;\n\t\tcase 1:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tPrint_Type(stype[select - 1]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcout &lt;&lt; &quot;请输入有效选项！\\n回车键继续...&quot; &lt;&lt; endl;\n\t\t\tgetchar();\n\t\t\tsystem(&quot;cls&quot;);\n\t\t\tdrawMap();\n\t\t\tcontinue;\n\t\t&#125;\n\t\tcout &lt;&lt; &quot;\\n您需要了解以上建筑信息吗？（输入1了解，输入0取消）：&quot;;\n\t\tint select2;\n\t\tint select3;\n\t\twhile (true)\n\t\t&#123;\n\t\t\tcin &gt;&gt; select2;\n\t\t\tif (select2 &#x3D;&#x3D; 1)\n\t\t\t&#123;\n\t\t\t\twhile (true)\n\t\t\t\t&#123;\n\t\t\t\t\tcout &lt;&lt; &quot;\\n请输入你想要了解建筑的编号（输入0取消）：&quot;;\n\t\t\t\t\tcin &gt;&gt; select3;\n\t\t\t\t\tif (select &#x3D;&#x3D; 1)\n\t\t\t\t\t&#123;\n\t\t\t\t\t\tif (select3 &#x3D;&#x3D; 3 || select3 &#x3D;&#x3D; 9 || select3 &#x3D;&#x3D; 11)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse if (select3 &#x3D;&#x3D; 0)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tcout &lt;&lt; &quot;请输入正确的此类型建筑编号！&quot; &lt;&lt; endl;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t&#125;\n\t\t\t\t\telse if (select &#x3D;&#x3D; 2)\n\t\t\t\t\t&#123;\n\t\t\t\t\t\tif (select3 &#x3D;&#x3D; 5 || select3 &#x3D;&#x3D; 7 || select3 &#x3D;&#x3D; 8)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse if (select3 &#x3D;&#x3D; 0)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tcout &lt;&lt; &quot;请输入正确的此类型建筑编号！&quot; &lt;&lt; endl;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t&#125;\n\t\t\t\t\tif (select &#x3D;&#x3D; 3)\n\t\t\t\t\t&#123;\n\t\t\t\t\t\tif (select3 &#x3D;&#x3D; 4 || select3 &#x3D;&#x3D; 10)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse if (select3 &#x3D;&#x3D; 0)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tcout &lt;&lt; &quot;请输入正确的此类型建筑编号！&quot; &lt;&lt; endl;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t&#125;\n\t\t\t\t\tif (select &#x3D;&#x3D; 4)\n\t\t\t\t\t&#123;\n\t\t\t\t\t\tif (select3 &#x3D;&#x3D; 2 || select3 &#x3D;&#x3D; 6 || select3 &#x3D;&#x3D; 13 || select3 &#x3D;&#x3D; 15)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tprintInfo(spt, select3 - 1);\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse if (select3 &#x3D;&#x3D; 0)\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t&#123;\n\t\t\t\t\t\t\tcout &lt;&lt; &quot;请输入正确的此类型建筑编号！&quot; &lt;&lt; endl;\n\t\t\t\t\t\t&#125;\n\t\t\t\t\t&#125;\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t\telse if (select2 &#x3D;&#x3D; 0)\n\t\t\t&#123;\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t\telse\n\t\t\t&#123;\n\t\t\t\tcout &lt;&lt; &quot;请输入正确选项！&quot; &lt;&lt; endl;\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t\tif (select3 &#x3D;&#x3D; 0) break;\n\t\t&#125;\n\t&#125;\n&#125; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本次的校园导游系统是我的数据结构课程设计，希望这篇文章能够帮我记下Dijkstra算法的实际运用，今后遇到相应的算法也能够有解决思路。  </p>\n<p>本次的导游系统介绍就到这了，有需要看源代码的朋友可以到我的 GitHub 仓库中查看。  </p>\n<h2 id=\"链接：\"><a href=\"#链接：\" class=\"headerlink\" title=\"链接：\"></a>链接：</h2><p><a href=\"https://github.com/InvictusEd/Campus-tour-guide-system.git\">校园导游系统</a></p>\n<blockquote>\n<p>本章一句：<br>当你因为错过太阳而哭泣的时候，你也要错过群星了。——泰戈尔《飞鸟集》</p>\n</blockquote>\n"},{"title":"中国大学生计算机设计大赛作品——电荷：正正子与负负美","date":"2023-03-18T14:52:54.000Z","img":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFuCover.png","top":true,"cover":false,"coverImg":null,"summary":"2021年第14届中国大学生计算机设计大赛获奖作品《电荷：正正子与负负美》设计思路","_content":"## 序言\n&emsp;&emsp;本篇文章着重于记录我参加中国大学生计算机设计大赛的经历和作品创作过程。   \n&emsp;&emsp;《电荷：正正子与负负美》是我在大一时设计的微课作品，在我心中它值得写上一笔，文章内容包括创作它时的设计思路和实现方法，以及我的参赛历程。  \n&emsp;&emsp;《电荷：正正子与负负美》不算是一款成功的参赛作品，制作人也就是我也没有专业的微课制作水准，想要从此处取经的朋友还请海涵。  \n&emsp;&emsp;于我而言，本篇文章更重要的作用是用于勉励自己，“历历浮生，无非败而后成。”\n\n>有关于中国大学生计算机设计大赛的介绍就不在此处赘述了，想要参赛的朋友还请自行去官网了解参赛时间和参赛项目及要求，本篇文章的作品类别属于微课类。  \n[中国大学生计算机设计大赛官网](http://jsjds.blcu.edu.cn/)\n\n## 作品设计思路\n\n### 确定微课主题\n\n微课是什么？简而言之就是在短时间内能够将知识点讲授清楚的视频。\n\n当初想要参赛的我，首先思考的就是课题。**什么样的课题是我已经学过且掌握的，该知识点是否适合制作成微课，这个课题是否新颖，是否有利于故事创作。**\n\n以微课的定义出发，我认为一部好的微课，它要做到**能够将晦涩难懂的知识清清楚楚而且生动形象地讲授出来。**  \n\n因为我高中比较擅长物理，当我快速地回顾了高中物理3-1课本的内容时，我脑海中闪现出了正负电荷的具体形象，而且正负电荷之间的关系很奇妙，我应该可以试试......  \n\n![正负电荷](https://invictusqiu.oss-cn-beijing.aliyuncs.com/charges.png \"正负电荷\")  \n\n也因此我确定下了微课的主题：**正负电荷**\n\n\n### 编写一则故事\n\n其实微课作品不一定需要生动的故事内容来支撑，但假如你能做到为该知识点编写故事，就能够使枯燥的知识变得有趣起来，因为我不擅长制作动画，所以有一则新颖的故事是非常有必要的。  \n\n* 人物：灵感来源于动画《pop子和pipi美的日常》，感觉挺顺口的，所以我将它们命名为“正正子”和“负负美”\n* 关系：挚友\n* 时间：过去\n* 地点：地球\n* 内容：以上帝视角的方式讲述正正子和负负美的历史和关系\n\n故事可以追溯到电荷的历史起源，将正负电荷拟人化，并赋予感情，与我们人类的情感产生共鸣，将库仑力比喻为人类之间的思念之情。  \n\n具体的故事内容就不在此展开描述了，后面我会给出设计与开发文档的链接。\n\n## 作品实现方法\n\n### 角色设计\n参考了《pop子和pipi美的日常生活》，哈哈，画风简单粗暴，对于人物的创作我是零基础的，在此也没什么可讲的。\n![正正子和负负美](https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFu.png \"正正子和负负美\")\n\n### 素材收集\n现在网上如此之多的素材资源，只要肯找都是有的。因为我的作品是属于简约风格，所以没有下很多功夫去网上收集素材，收集的仅仅是一些名人的图片和实物图。  \n\n另外的一些图片我是从 [iSlide](https://www.islide.cc/) 上拿来的，当时我是开通了一个会员，节省了我很多收集素材的时间。  \n\n### 撰写说课稿\n要演出故事，首先得有剧本，说课稿就是剧本，写好了剧本，才能有条不紊的进行整个故事的创作。将想好的故事写进说课稿，然后照着读上几遍，控制好节奏和时间，因为这基本奠定了之后微课的时长。  \n\n**我推荐比赛的微课时长在6-8分钟之间，比赛有答辩环节，10分钟以内你得把作品进行展示和解说，所以控制好作品的时长很重要，必须腾出足够的时间解说。**\n\n### 动画制作\n这是最为核心的环节，微课动画制作方法多种多样，我知道的有 Flash，After Effects，还有一些本身就是为微课而生的软件比如Focusky。  \n\n然而在制作过程中以上软件我都没用，我用的只是 PowerPonit，也就是 PPT,在固有观念里 PPT 就是做课件用的，但其实它是实实在在的动画制作软件，而缺点是制作起来较为繁杂。  \n\n学习其他软件，我要考虑时间成本，PPT 动画我需要学的仅仅是在原来的基础上进行进阶，因此我在B站上看了许多 PPT 动画视频，从中进行学习。  \n\n**PPT制作动画需要的不是高技术含量，是耐心，一张 PPT 多则可高达上百张动画，需要一步一步来组合。将文字在脑海中转换成图像，再用双手创作出来，动画制作就这么个过程。**\n\n### 视频制作\n那我们仅仅做好动画是不行的，我们还需要拍摄成视频，进行配乐和配音，以及添加字幕，等一系列后期处理。  \n\nPPT 做的动画做成视频很简单，你可以直接以视频的方式导出。\n![PPT导出视频](https://invictusqiu.oss-cn-beijing.aliyuncs.com/pptMovie1.png \"PPT导出视频\")  \n\n或者用录频软件录制一遍 PPT 的动画播放。  \n录频软件：N卡自带的录屏功能，OBS Studio，Bandicam(付费)等。  \n\n录好视频后，进行配乐和配音，我当时用的是 Premiere，pr的话可能需要花些时间去学习如何使用，现在的话我知道的剪映也是不错的，易上手。  \n\n配音的话简单粗暴，手机的录音功能加耳机就行，我当时是一句一句配的，这样不满意的话方便重新配。  \n\n配完的音频文件导入pr中，和视频进行结合就大功告成了，《电荷：正正子与负负美》的配音全程都是由我一人配的，当然如果要进一步提升竞争力我还是建议找专业的配音来吧。  \n\n挑选配乐的话，怎样合适怎样来，这范围就太大了。我当时挑选的是iPhone 5 广告Photos Every Day中的BGM—Rob Simonsen Blue\n\n## 总结\n制作微课不需要高技术含量，制作一部微课，并且要用来参加竞赛的话，重要的是一定要记得**创新**，如果在此基础上你能设计出漂亮的动画和其他视觉、听觉上的体验那肯定是大大的加分项。  \n\n**虽然没在文章中说有关参赛文档的事，但如果是想要参赛的朋友一定要认认真真填写所有参赛文档，后期答辩时评委会仔细看和提问的，尤其是国赛的评委。**\n\n**如果是打算提取干货的朋友看到这里就可以离开了，后面的内容对你的帮助不大。**\n\n## 作品链接\n>链接：https://pan.baidu.com/s/1QGm5GTxQxeMLMfO5QWZ8ng?pwd=star \n>提取码：star \n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yimeifasha.jpg)\n我们下期文章再见。\n\n## 参赛历程\n**打算提取干货的朋友看到这里就可以离开了，后面的内容对你帮助不大**。  \n\n既然是我的个人blog，我当然有必要记录下自己当时参赛的历程。  \n\n### 报名\n&emsp;&emsp;当时刚进入大学，对一切都是那么好奇，感觉自己想做的事有很多，感觉自己目标很清晰，很有干劲呢。头一次听到计算机设计大赛是在一次学科讲座上听老师和学姐分享的，当时很有精神啊，还和学姐积极互动，那时候就想我应该也可以做一个参赛作品出来吧，听说可以出省去其他学校比赛呢，这对于一个入学就被封锁的学生来说太有吸引力了。  \n&emsp;&emsp;到下学期时，报名开始，那肯定得报嘛，约上我两个舍友然后就报上了。难的是后面怎么做呢？我看了一些优秀的获奖作品，想从中取经，当时看了的感觉就是：哇这做的太好了，没点专业知识恐怕做不出来。那时候我们所有人都打退堂鼓，后来我提出做高中物理的电荷，这个题材比较好做，后面我们讨论了下，确定下来。  \n&emsp;&emsp;后面就由我创作了整个故事情节，但是难点又来了，怎么做动画，我们都尝试做了，但是效果不尽人意。我就硬照着B站上那些好看的PPT动画去做，花了很大功夫，后来成功了，当我做出开头时，我感觉我还是可以的。\n\n### 制作\n&emsp;&emsp;我做了两天，然后就放五一假期，当时我和舍友都回家了，那作品可能真就放弃了。回家后的两天抽空做了做，把开头做好，完成了30％，后面两天，花了大部分精力去做，尤其是第四天直接做到了凌晨5点。我当时就感觉灵感很充足，脑子中一幅幅画面涌现出来，效率特别高，毫无困意，那一天晚上直接就把动画全部做完了。  \n&emsp;&emsp;最后一天我在家弄好视频，回到学校弄好配音，然后就贴着时间点上交了。没想过拿奖，当时就没想要拿奖，可能一切都是徒劳，但是自己想做，想把这个故事写出来，画面呈现出来。  \n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFuCover.png)\n\n### 校级赛\n&emsp;&emsp;当时校级赛也需要答辩，第一次答辩我还是蛮紧张的，答辩当天，发现周围的参赛选手都做了答辩PPT，而我没做，当时心情就是崩了，答辩时我就放了一下作品，然后用作品本来的PPT做了介绍，当时觉得应该是没戏了，后面也没多想了，至少能锻炼一下自己的答辩能力......\n\n### 获奖\n&emsp;&emsp;校级赛公布结果的那一天，我在上PS课，当时点开一看是一等奖！差点在课上笑出声，瞬间感觉自己所有的付出都值了，后来作品被交付给省上初评顺利通过了，拿到了省赛现场资格，只要拿到了省赛现场资格就意味着进入了国赛。\n\n### 省赛\n&emsp;&emsp;省赛定在云南工商学院，没错，是线下赛，为期三天。  \n![云南工商学院](https://invictusqiu.oss-cn-beijing.aliyuncs.com/gongshangxueyuan.jpg \"云南工商学院\")\n&emsp;&emsp;第一天从学校出发，乘坐高铁到达了昆明市杨林大学城，入住了官方指定的酒店，然后去领取选手证和官方T恤，顺便抽了签。答辩是分组的，和我同行的两组学长学姐我们分到了不同组，但我们手气出奇一致，在组内把第1都包了，所以当天会很快答完辩，然后就可以在杨林耍一天啦。\n![参赛物品](https://invictusqiu.oss-cn-beijing.aliyuncs.com/xianchang.jpg \"参赛物品\")\n&emsp;&emsp;第二天现场答辩，为什么我会强调一定要控制好微课时长，因为他只给10分钟的答辩时间，而正正子与负负美长达9分10秒，因此我必须在50秒内把作品介绍完，但可能吗？太难了，但这也没办法，那天答辩勉勉强强，紧张还是紧张，只能说自己的现场能力锻炼的还不够。评委老师问的问题主要是：应用了什么软件和技术，并且会挑出几张画面进行提问，然后给出一些建议。  \n&emsp;&emsp;第三天是领奖日，举行颁奖仪式，现场能看到云南省很厉害的计算机老师，当我看到C语言网课的普运伟老师时感觉挺奇妙的，有意义的是可以现场看到那些优秀作品展示，同行学长的数媒动画作品被评为了优秀作品，真的很厉害，我拿到了省级二等奖也算心满意足了。\n\n### 国赛\n&emsp;&emsp;因为疫情原因，很遗憾无法去线下参赛，本来想着能去阜阳师范大学见见世面，长长见识的，后来官方将国赛改为了线上比赛。其实我就只是想感受比赛现场的氛围，享受比赛，无法线下比赛是比较遗憾的，不过现场的话省赛也体验过了嘛，只不过我更期待国赛的现场。  \n&emsp;&emsp;国赛答辩是采用腾讯会议答辩，流程都是一样的，放作品介绍作品，回答评委老师的问题。评委老师是会认真去看你写的设计和教学文档的，让我比较在意的是我教学设计文档内容写崩了，只怪我当时没好好检查文档内容，没有做到完美，小小的遗憾吧。最终国赛获得三等奖，能走到国赛在我当时看来是不敢想的，感觉一切都值了。\n![电荷：正正子与负负美](https://invictusqiu.oss-cn-beijing.aliyuncs.com/rongyuqiang.jpg \"电荷：正正子与负负美\")\n\n## 结尾\n其实写到这不知该怎样结尾了，前段时间陪伴了我6年的游戏《崩坏3》第一部完结了，在游戏制作组的纪录片中，编剧烧鸡老师在最后说的话令我印象深刻：  \n>今天的自己有没有变得比昨天更好，明天的自己会不会变得比今天更好，就像我今天坐在这里，在镜头前讲下这个故事，它只是一个普普通通的，随处可见的故事，总有一天，每个人会和这个故事告别，走向不同的方向，独属于你自己的下一页，但是那样就好，累了的话就停下脚步，怀念的话就回来看看，这个故事也一直都在，且行且看，尽力而为，不要害怕，不要后悔，就像《崩坏3》的slogan“为世界上所有的美好而战”一样，我们每个人都是在哭声中来到这个世界，但是却要笑着走向未来。\n\n![《心灵捕手》台词](https://invictusqiu.oss-cn-beijing.aliyuncs.com/xinlingbushou.jpg \"《心灵捕手》台词\")","source":"_posts/ElectricCharge-zhengfumei.md","raw":"---\ntitle: 中国大学生计算机设计大赛作品——电荷：正正子与负负美\ndate: 2023-03-18 22:52:54\n\nimg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFuCover.png\ntop: true\ncover: false\ncoverImg: \nsummary: 2021年第14届中国大学生计算机设计大赛获奖作品《电荷：正正子与负负美》设计思路\ncategories: \ntags:\n\n---\n## 序言\n&emsp;&emsp;本篇文章着重于记录我参加中国大学生计算机设计大赛的经历和作品创作过程。   \n&emsp;&emsp;《电荷：正正子与负负美》是我在大一时设计的微课作品，在我心中它值得写上一笔，文章内容包括创作它时的设计思路和实现方法，以及我的参赛历程。  \n&emsp;&emsp;《电荷：正正子与负负美》不算是一款成功的参赛作品，制作人也就是我也没有专业的微课制作水准，想要从此处取经的朋友还请海涵。  \n&emsp;&emsp;于我而言，本篇文章更重要的作用是用于勉励自己，“历历浮生，无非败而后成。”\n\n>有关于中国大学生计算机设计大赛的介绍就不在此处赘述了，想要参赛的朋友还请自行去官网了解参赛时间和参赛项目及要求，本篇文章的作品类别属于微课类。  \n[中国大学生计算机设计大赛官网](http://jsjds.blcu.edu.cn/)\n\n## 作品设计思路\n\n### 确定微课主题\n\n微课是什么？简而言之就是在短时间内能够将知识点讲授清楚的视频。\n\n当初想要参赛的我，首先思考的就是课题。**什么样的课题是我已经学过且掌握的，该知识点是否适合制作成微课，这个课题是否新颖，是否有利于故事创作。**\n\n以微课的定义出发，我认为一部好的微课，它要做到**能够将晦涩难懂的知识清清楚楚而且生动形象地讲授出来。**  \n\n因为我高中比较擅长物理，当我快速地回顾了高中物理3-1课本的内容时，我脑海中闪现出了正负电荷的具体形象，而且正负电荷之间的关系很奇妙，我应该可以试试......  \n\n![正负电荷](https://invictusqiu.oss-cn-beijing.aliyuncs.com/charges.png \"正负电荷\")  \n\n也因此我确定下了微课的主题：**正负电荷**\n\n\n### 编写一则故事\n\n其实微课作品不一定需要生动的故事内容来支撑，但假如你能做到为该知识点编写故事，就能够使枯燥的知识变得有趣起来，因为我不擅长制作动画，所以有一则新颖的故事是非常有必要的。  \n\n* 人物：灵感来源于动画《pop子和pipi美的日常》，感觉挺顺口的，所以我将它们命名为“正正子”和“负负美”\n* 关系：挚友\n* 时间：过去\n* 地点：地球\n* 内容：以上帝视角的方式讲述正正子和负负美的历史和关系\n\n故事可以追溯到电荷的历史起源，将正负电荷拟人化，并赋予感情，与我们人类的情感产生共鸣，将库仑力比喻为人类之间的思念之情。  \n\n具体的故事内容就不在此展开描述了，后面我会给出设计与开发文档的链接。\n\n## 作品实现方法\n\n### 角色设计\n参考了《pop子和pipi美的日常生活》，哈哈，画风简单粗暴，对于人物的创作我是零基础的，在此也没什么可讲的。\n![正正子和负负美](https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFu.png \"正正子和负负美\")\n\n### 素材收集\n现在网上如此之多的素材资源，只要肯找都是有的。因为我的作品是属于简约风格，所以没有下很多功夫去网上收集素材，收集的仅仅是一些名人的图片和实物图。  \n\n另外的一些图片我是从 [iSlide](https://www.islide.cc/) 上拿来的，当时我是开通了一个会员，节省了我很多收集素材的时间。  \n\n### 撰写说课稿\n要演出故事，首先得有剧本，说课稿就是剧本，写好了剧本，才能有条不紊的进行整个故事的创作。将想好的故事写进说课稿，然后照着读上几遍，控制好节奏和时间，因为这基本奠定了之后微课的时长。  \n\n**我推荐比赛的微课时长在6-8分钟之间，比赛有答辩环节，10分钟以内你得把作品进行展示和解说，所以控制好作品的时长很重要，必须腾出足够的时间解说。**\n\n### 动画制作\n这是最为核心的环节，微课动画制作方法多种多样，我知道的有 Flash，After Effects，还有一些本身就是为微课而生的软件比如Focusky。  \n\n然而在制作过程中以上软件我都没用，我用的只是 PowerPonit，也就是 PPT,在固有观念里 PPT 就是做课件用的，但其实它是实实在在的动画制作软件，而缺点是制作起来较为繁杂。  \n\n学习其他软件，我要考虑时间成本，PPT 动画我需要学的仅仅是在原来的基础上进行进阶，因此我在B站上看了许多 PPT 动画视频，从中进行学习。  \n\n**PPT制作动画需要的不是高技术含量，是耐心，一张 PPT 多则可高达上百张动画，需要一步一步来组合。将文字在脑海中转换成图像，再用双手创作出来，动画制作就这么个过程。**\n\n### 视频制作\n那我们仅仅做好动画是不行的，我们还需要拍摄成视频，进行配乐和配音，以及添加字幕，等一系列后期处理。  \n\nPPT 做的动画做成视频很简单，你可以直接以视频的方式导出。\n![PPT导出视频](https://invictusqiu.oss-cn-beijing.aliyuncs.com/pptMovie1.png \"PPT导出视频\")  \n\n或者用录频软件录制一遍 PPT 的动画播放。  \n录频软件：N卡自带的录屏功能，OBS Studio，Bandicam(付费)等。  \n\n录好视频后，进行配乐和配音，我当时用的是 Premiere，pr的话可能需要花些时间去学习如何使用，现在的话我知道的剪映也是不错的，易上手。  \n\n配音的话简单粗暴，手机的录音功能加耳机就行，我当时是一句一句配的，这样不满意的话方便重新配。  \n\n配完的音频文件导入pr中，和视频进行结合就大功告成了，《电荷：正正子与负负美》的配音全程都是由我一人配的，当然如果要进一步提升竞争力我还是建议找专业的配音来吧。  \n\n挑选配乐的话，怎样合适怎样来，这范围就太大了。我当时挑选的是iPhone 5 广告Photos Every Day中的BGM—Rob Simonsen Blue\n\n## 总结\n制作微课不需要高技术含量，制作一部微课，并且要用来参加竞赛的话，重要的是一定要记得**创新**，如果在此基础上你能设计出漂亮的动画和其他视觉、听觉上的体验那肯定是大大的加分项。  \n\n**虽然没在文章中说有关参赛文档的事，但如果是想要参赛的朋友一定要认认真真填写所有参赛文档，后期答辩时评委会仔细看和提问的，尤其是国赛的评委。**\n\n**如果是打算提取干货的朋友看到这里就可以离开了，后面的内容对你的帮助不大。**\n\n## 作品链接\n>链接：https://pan.baidu.com/s/1QGm5GTxQxeMLMfO5QWZ8ng?pwd=star \n>提取码：star \n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yimeifasha.jpg)\n我们下期文章再见。\n\n## 参赛历程\n**打算提取干货的朋友看到这里就可以离开了，后面的内容对你帮助不大**。  \n\n既然是我的个人blog，我当然有必要记录下自己当时参赛的历程。  \n\n### 报名\n&emsp;&emsp;当时刚进入大学，对一切都是那么好奇，感觉自己想做的事有很多，感觉自己目标很清晰，很有干劲呢。头一次听到计算机设计大赛是在一次学科讲座上听老师和学姐分享的，当时很有精神啊，还和学姐积极互动，那时候就想我应该也可以做一个参赛作品出来吧，听说可以出省去其他学校比赛呢，这对于一个入学就被封锁的学生来说太有吸引力了。  \n&emsp;&emsp;到下学期时，报名开始，那肯定得报嘛，约上我两个舍友然后就报上了。难的是后面怎么做呢？我看了一些优秀的获奖作品，想从中取经，当时看了的感觉就是：哇这做的太好了，没点专业知识恐怕做不出来。那时候我们所有人都打退堂鼓，后来我提出做高中物理的电荷，这个题材比较好做，后面我们讨论了下，确定下来。  \n&emsp;&emsp;后面就由我创作了整个故事情节，但是难点又来了，怎么做动画，我们都尝试做了，但是效果不尽人意。我就硬照着B站上那些好看的PPT动画去做，花了很大功夫，后来成功了，当我做出开头时，我感觉我还是可以的。\n\n### 制作\n&emsp;&emsp;我做了两天，然后就放五一假期，当时我和舍友都回家了，那作品可能真就放弃了。回家后的两天抽空做了做，把开头做好，完成了30％，后面两天，花了大部分精力去做，尤其是第四天直接做到了凌晨5点。我当时就感觉灵感很充足，脑子中一幅幅画面涌现出来，效率特别高，毫无困意，那一天晚上直接就把动画全部做完了。  \n&emsp;&emsp;最后一天我在家弄好视频，回到学校弄好配音，然后就贴着时间点上交了。没想过拿奖，当时就没想要拿奖，可能一切都是徒劳，但是自己想做，想把这个故事写出来，画面呈现出来。  \n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFuCover.png)\n\n### 校级赛\n&emsp;&emsp;当时校级赛也需要答辩，第一次答辩我还是蛮紧张的，答辩当天，发现周围的参赛选手都做了答辩PPT，而我没做，当时心情就是崩了，答辩时我就放了一下作品，然后用作品本来的PPT做了介绍，当时觉得应该是没戏了，后面也没多想了，至少能锻炼一下自己的答辩能力......\n\n### 获奖\n&emsp;&emsp;校级赛公布结果的那一天，我在上PS课，当时点开一看是一等奖！差点在课上笑出声，瞬间感觉自己所有的付出都值了，后来作品被交付给省上初评顺利通过了，拿到了省赛现场资格，只要拿到了省赛现场资格就意味着进入了国赛。\n\n### 省赛\n&emsp;&emsp;省赛定在云南工商学院，没错，是线下赛，为期三天。  \n![云南工商学院](https://invictusqiu.oss-cn-beijing.aliyuncs.com/gongshangxueyuan.jpg \"云南工商学院\")\n&emsp;&emsp;第一天从学校出发，乘坐高铁到达了昆明市杨林大学城，入住了官方指定的酒店，然后去领取选手证和官方T恤，顺便抽了签。答辩是分组的，和我同行的两组学长学姐我们分到了不同组，但我们手气出奇一致，在组内把第1都包了，所以当天会很快答完辩，然后就可以在杨林耍一天啦。\n![参赛物品](https://invictusqiu.oss-cn-beijing.aliyuncs.com/xianchang.jpg \"参赛物品\")\n&emsp;&emsp;第二天现场答辩，为什么我会强调一定要控制好微课时长，因为他只给10分钟的答辩时间，而正正子与负负美长达9分10秒，因此我必须在50秒内把作品介绍完，但可能吗？太难了，但这也没办法，那天答辩勉勉强强，紧张还是紧张，只能说自己的现场能力锻炼的还不够。评委老师问的问题主要是：应用了什么软件和技术，并且会挑出几张画面进行提问，然后给出一些建议。  \n&emsp;&emsp;第三天是领奖日，举行颁奖仪式，现场能看到云南省很厉害的计算机老师，当我看到C语言网课的普运伟老师时感觉挺奇妙的，有意义的是可以现场看到那些优秀作品展示，同行学长的数媒动画作品被评为了优秀作品，真的很厉害，我拿到了省级二等奖也算心满意足了。\n\n### 国赛\n&emsp;&emsp;因为疫情原因，很遗憾无法去线下参赛，本来想着能去阜阳师范大学见见世面，长长见识的，后来官方将国赛改为了线上比赛。其实我就只是想感受比赛现场的氛围，享受比赛，无法线下比赛是比较遗憾的，不过现场的话省赛也体验过了嘛，只不过我更期待国赛的现场。  \n&emsp;&emsp;国赛答辩是采用腾讯会议答辩，流程都是一样的，放作品介绍作品，回答评委老师的问题。评委老师是会认真去看你写的设计和教学文档的，让我比较在意的是我教学设计文档内容写崩了，只怪我当时没好好检查文档内容，没有做到完美，小小的遗憾吧。最终国赛获得三等奖，能走到国赛在我当时看来是不敢想的，感觉一切都值了。\n![电荷：正正子与负负美](https://invictusqiu.oss-cn-beijing.aliyuncs.com/rongyuqiang.jpg \"电荷：正正子与负负美\")\n\n## 结尾\n其实写到这不知该怎样结尾了，前段时间陪伴了我6年的游戏《崩坏3》第一部完结了，在游戏制作组的纪录片中，编剧烧鸡老师在最后说的话令我印象深刻：  \n>今天的自己有没有变得比昨天更好，明天的自己会不会变得比今天更好，就像我今天坐在这里，在镜头前讲下这个故事，它只是一个普普通通的，随处可见的故事，总有一天，每个人会和这个故事告别，走向不同的方向，独属于你自己的下一页，但是那样就好，累了的话就停下脚步，怀念的话就回来看看，这个故事也一直都在，且行且看，尽力而为，不要害怕，不要后悔，就像《崩坏3》的slogan“为世界上所有的美好而战”一样，我们每个人都是在哭声中来到这个世界，但是却要笑着走向未来。\n\n![《心灵捕手》台词](https://invictusqiu.oss-cn-beijing.aliyuncs.com/xinlingbushou.jpg \"《心灵捕手》台词\")","slug":"ElectricCharge-zhengfumei","published":1,"updated":"2024-09-20T08:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1bsqfjn0003esty9uw26ueu","content":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>  本篇文章着重于记录我参加中国大学生计算机设计大赛的经历和作品创作过程。<br>  《电荷：正正子与负负美》是我在大一时设计的微课作品，在我心中它值得写上一笔，文章内容包括创作它时的设计思路和实现方法，以及我的参赛历程。<br>  《电荷：正正子与负负美》不算是一款成功的参赛作品，制作人也就是我也没有专业的微课制作水准，想要从此处取经的朋友还请海涵。<br>  于我而言，本篇文章更重要的作用是用于勉励自己，“历历浮生，无非败而后成。”</p>\n<blockquote>\n<p>有关于中国大学生计算机设计大赛的介绍就不在此处赘述了，想要参赛的朋友还请自行去官网了解参赛时间和参赛项目及要求，本篇文章的作品类别属于微课类。<br><a href=\"http://jsjds.blcu.edu.cn/\">中国大学生计算机设计大赛官网</a></p>\n</blockquote>\n<h2 id=\"作品设计思路\"><a href=\"#作品设计思路\" class=\"headerlink\" title=\"作品设计思路\"></a>作品设计思路</h2><h3 id=\"确定微课主题\"><a href=\"#确定微课主题\" class=\"headerlink\" title=\"确定微课主题\"></a>确定微课主题</h3><p>微课是什么？简而言之就是在短时间内能够将知识点讲授清楚的视频。</p>\n<p>当初想要参赛的我，首先思考的就是课题。<strong>什么样的课题是我已经学过且掌握的，该知识点是否适合制作成微课，这个课题是否新颖，是否有利于故事创作。</strong></p>\n<p>以微课的定义出发，我认为一部好的微课，它要做到<strong>能够将晦涩难懂的知识清清楚楚而且生动形象地讲授出来。</strong>  </p>\n<p>因为我高中比较擅长物理，当我快速地回顾了高中物理3-1课本的内容时，我脑海中闪现出了正负电荷的具体形象，而且正负电荷之间的关系很奇妙，我应该可以试试……  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/charges.png\" alt=\"正负电荷\" title=\"正负电荷\">  </p>\n<p>也因此我确定下了微课的主题：<strong>正负电荷</strong></p>\n<h3 id=\"编写一则故事\"><a href=\"#编写一则故事\" class=\"headerlink\" title=\"编写一则故事\"></a>编写一则故事</h3><p>其实微课作品不一定需要生动的故事内容来支撑，但假如你能做到为该知识点编写故事，就能够使枯燥的知识变得有趣起来，因为我不擅长制作动画，所以有一则新颖的故事是非常有必要的。  </p>\n<ul>\n<li>人物：灵感来源于动画《pop子和pipi美的日常》，感觉挺顺口的，所以我将它们命名为“正正子”和“负负美”</li>\n<li>关系：挚友</li>\n<li>时间：过去</li>\n<li>地点：地球</li>\n<li>内容：以上帝视角的方式讲述正正子和负负美的历史和关系</li>\n</ul>\n<p>故事可以追溯到电荷的历史起源，将正负电荷拟人化，并赋予感情，与我们人类的情感产生共鸣，将库仑力比喻为人类之间的思念之情。  </p>\n<p>具体的故事内容就不在此展开描述了，后面我会给出设计与开发文档的链接。</p>\n<h2 id=\"作品实现方法\"><a href=\"#作品实现方法\" class=\"headerlink\" title=\"作品实现方法\"></a>作品实现方法</h2><h3 id=\"角色设计\"><a href=\"#角色设计\" class=\"headerlink\" title=\"角色设计\"></a>角色设计</h3><p>参考了《pop子和pipi美的日常生活》，哈哈，画风简单粗暴，对于人物的创作我是零基础的，在此也没什么可讲的。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFu.png\" alt=\"正正子和负负美\" title=\"正正子和负负美\"></p>\n<h3 id=\"素材收集\"><a href=\"#素材收集\" class=\"headerlink\" title=\"素材收集\"></a>素材收集</h3><p>现在网上如此之多的素材资源，只要肯找都是有的。因为我的作品是属于简约风格，所以没有下很多功夫去网上收集素材，收集的仅仅是一些名人的图片和实物图。  </p>\n<p>另外的一些图片我是从 <a href=\"https://www.islide.cc/\">iSlide</a> 上拿来的，当时我是开通了一个会员，节省了我很多收集素材的时间。  </p>\n<h3 id=\"撰写说课稿\"><a href=\"#撰写说课稿\" class=\"headerlink\" title=\"撰写说课稿\"></a>撰写说课稿</h3><p>要演出故事，首先得有剧本，说课稿就是剧本，写好了剧本，才能有条不紊的进行整个故事的创作。将想好的故事写进说课稿，然后照着读上几遍，控制好节奏和时间，因为这基本奠定了之后微课的时长。  </p>\n<p><strong>我推荐比赛的微课时长在6-8分钟之间，比赛有答辩环节，10分钟以内你得把作品进行展示和解说，所以控制好作品的时长很重要，必须腾出足够的时间解说。</strong></p>\n<h3 id=\"动画制作\"><a href=\"#动画制作\" class=\"headerlink\" title=\"动画制作\"></a>动画制作</h3><p>这是最为核心的环节，微课动画制作方法多种多样，我知道的有 Flash，After Effects，还有一些本身就是为微课而生的软件比如Focusky。  </p>\n<p>然而在制作过程中以上软件我都没用，我用的只是 PowerPonit，也就是 PPT,在固有观念里 PPT 就是做课件用的，但其实它是实实在在的动画制作软件，而缺点是制作起来较为繁杂。  </p>\n<p>学习其他软件，我要考虑时间成本，PPT 动画我需要学的仅仅是在原来的基础上进行进阶，因此我在B站上看了许多 PPT 动画视频，从中进行学习。  </p>\n<p><strong>PPT制作动画需要的不是高技术含量，是耐心，一张 PPT 多则可高达上百张动画，需要一步一步来组合。将文字在脑海中转换成图像，再用双手创作出来，动画制作就这么个过程。</strong></p>\n<h3 id=\"视频制作\"><a href=\"#视频制作\" class=\"headerlink\" title=\"视频制作\"></a>视频制作</h3><p>那我们仅仅做好动画是不行的，我们还需要拍摄成视频，进行配乐和配音，以及添加字幕，等一系列后期处理。  </p>\n<p>PPT 做的动画做成视频很简单，你可以直接以视频的方式导出。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/pptMovie1.png\" alt=\"PPT导出视频\" title=\"PPT导出视频\">  </p>\n<p>或者用录频软件录制一遍 PPT 的动画播放。<br>录频软件：N卡自带的录屏功能，OBS Studio，Bandicam(付费)等。  </p>\n<p>录好视频后，进行配乐和配音，我当时用的是 Premiere，pr的话可能需要花些时间去学习如何使用，现在的话我知道的剪映也是不错的，易上手。  </p>\n<p>配音的话简单粗暴，手机的录音功能加耳机就行，我当时是一句一句配的，这样不满意的话方便重新配。  </p>\n<p>配完的音频文件导入pr中，和视频进行结合就大功告成了，《电荷：正正子与负负美》的配音全程都是由我一人配的，当然如果要进一步提升竞争力我还是建议找专业的配音来吧。  </p>\n<p>挑选配乐的话，怎样合适怎样来，这范围就太大了。我当时挑选的是iPhone 5 广告Photos Every Day中的BGM—Rob Simonsen Blue</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>制作微课不需要高技术含量，制作一部微课，并且要用来参加竞赛的话，重要的是一定要记得<strong>创新</strong>，如果在此基础上你能设计出漂亮的动画和其他视觉、听觉上的体验那肯定是大大的加分项。  </p>\n<p><strong>虽然没在文章中说有关参赛文档的事，但如果是想要参赛的朋友一定要认认真真填写所有参赛文档，后期答辩时评委会仔细看和提问的，尤其是国赛的评委。</strong></p>\n<p><strong>如果是打算提取干货的朋友看到这里就可以离开了，后面的内容对你的帮助不大。</strong></p>\n<h2 id=\"作品链接\"><a href=\"#作品链接\" class=\"headerlink\" title=\"作品链接\"></a>作品链接</h2><blockquote>\n<p>链接：<a href=\"https://pan.baidu.com/s/1QGm5GTxQxeMLMfO5QWZ8ng?pwd=star\">https://pan.baidu.com/s/1QGm5GTxQxeMLMfO5QWZ8ng?pwd=star</a><br>提取码：star </p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/yimeifasha.jpg\"><br>我们下期文章再见。</p>\n<h2 id=\"参赛历程\"><a href=\"#参赛历程\" class=\"headerlink\" title=\"参赛历程\"></a>参赛历程</h2><p><strong>打算提取干货的朋友看到这里就可以离开了，后面的内容对你帮助不大</strong>。  </p>\n<p>既然是我的个人blog，我当然有必要记录下自己当时参赛的历程。  </p>\n<h3 id=\"报名\"><a href=\"#报名\" class=\"headerlink\" title=\"报名\"></a>报名</h3><p>  当时刚进入大学，对一切都是那么好奇，感觉自己想做的事有很多，感觉自己目标很清晰，很有干劲呢。头一次听到计算机设计大赛是在一次学科讲座上听老师和学姐分享的，当时很有精神啊，还和学姐积极互动，那时候就想我应该也可以做一个参赛作品出来吧，听说可以出省去其他学校比赛呢，这对于一个入学就被封锁的学生来说太有吸引力了。<br>  到下学期时，报名开始，那肯定得报嘛，约上我两个舍友然后就报上了。难的是后面怎么做呢？我看了一些优秀的获奖作品，想从中取经，当时看了的感觉就是：哇这做的太好了，没点专业知识恐怕做不出来。那时候我们所有人都打退堂鼓，后来我提出做高中物理的电荷，这个题材比较好做，后面我们讨论了下，确定下来。<br>  后面就由我创作了整个故事情节，但是难点又来了，怎么做动画，我们都尝试做了，但是效果不尽人意。我就硬照着B站上那些好看的PPT动画去做，花了很大功夫，后来成功了，当我做出开头时，我感觉我还是可以的。</p>\n<h3 id=\"制作\"><a href=\"#制作\" class=\"headerlink\" title=\"制作\"></a>制作</h3><p>  我做了两天，然后就放五一假期，当时我和舍友都回家了，那作品可能真就放弃了。回家后的两天抽空做了做，把开头做好，完成了30％，后面两天，花了大部分精力去做，尤其是第四天直接做到了凌晨5点。我当时就感觉灵感很充足，脑子中一幅幅画面涌现出来，效率特别高，毫无困意，那一天晚上直接就把动画全部做完了。<br>  最后一天我在家弄好视频，回到学校弄好配音，然后就贴着时间点上交了。没想过拿奖，当时就没想要拿奖，可能一切都是徒劳，但是自己想做，想把这个故事写出来，画面呈现出来。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFuCover.png\"></p>\n<h3 id=\"校级赛\"><a href=\"#校级赛\" class=\"headerlink\" title=\"校级赛\"></a>校级赛</h3><p>  当时校级赛也需要答辩，第一次答辩我还是蛮紧张的，答辩当天，发现周围的参赛选手都做了答辩PPT，而我没做，当时心情就是崩了，答辩时我就放了一下作品，然后用作品本来的PPT做了介绍，当时觉得应该是没戏了，后面也没多想了，至少能锻炼一下自己的答辩能力……</p>\n<h3 id=\"获奖\"><a href=\"#获奖\" class=\"headerlink\" title=\"获奖\"></a>获奖</h3><p>  校级赛公布结果的那一天，我在上PS课，当时点开一看是一等奖！差点在课上笑出声，瞬间感觉自己所有的付出都值了，后来作品被交付给省上初评顺利通过了，拿到了省赛现场资格，只要拿到了省赛现场资格就意味着进入了国赛。</p>\n<h3 id=\"省赛\"><a href=\"#省赛\" class=\"headerlink\" title=\"省赛\"></a>省赛</h3><p>  省赛定在云南工商学院，没错，是线下赛，为期三天。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/gongshangxueyuan.jpg\" alt=\"云南工商学院\" title=\"云南工商学院\"><br>  第一天从学校出发，乘坐高铁到达了昆明市杨林大学城，入住了官方指定的酒店，然后去领取选手证和官方T恤，顺便抽了签。答辩是分组的，和我同行的两组学长学姐我们分到了不同组，但我们手气出奇一致，在组内把第1都包了，所以当天会很快答完辩，然后就可以在杨林耍一天啦。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/xianchang.jpg\" alt=\"参赛物品\" title=\"参赛物品\"><br>  第二天现场答辩，为什么我会强调一定要控制好微课时长，因为他只给10分钟的答辩时间，而正正子与负负美长达9分10秒，因此我必须在50秒内把作品介绍完，但可能吗？太难了，但这也没办法，那天答辩勉勉强强，紧张还是紧张，只能说自己的现场能力锻炼的还不够。评委老师问的问题主要是：应用了什么软件和技术，并且会挑出几张画面进行提问，然后给出一些建议。<br>  第三天是领奖日，举行颁奖仪式，现场能看到云南省很厉害的计算机老师，当我看到C语言网课的普运伟老师时感觉挺奇妙的，有意义的是可以现场看到那些优秀作品展示，同行学长的数媒动画作品被评为了优秀作品，真的很厉害，我拿到了省级二等奖也算心满意足了。</p>\n<h3 id=\"国赛\"><a href=\"#国赛\" class=\"headerlink\" title=\"国赛\"></a>国赛</h3><p>  因为疫情原因，很遗憾无法去线下参赛，本来想着能去阜阳师范大学见见世面，长长见识的，后来官方将国赛改为了线上比赛。其实我就只是想感受比赛现场的氛围，享受比赛，无法线下比赛是比较遗憾的，不过现场的话省赛也体验过了嘛，只不过我更期待国赛的现场。<br>  国赛答辩是采用腾讯会议答辩，流程都是一样的，放作品介绍作品，回答评委老师的问题。评委老师是会认真去看你写的设计和教学文档的，让我比较在意的是我教学设计文档内容写崩了，只怪我当时没好好检查文档内容，没有做到完美，小小的遗憾吧。最终国赛获得三等奖，能走到国赛在我当时看来是不敢想的，感觉一切都值了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/rongyuqiang.jpg\" alt=\"电荷：正正子与负负美\" title=\"电荷：正正子与负负美\"></p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>其实写到这不知该怎样结尾了，前段时间陪伴了我6年的游戏《崩坏3》第一部完结了，在游戏制作组的纪录片中，编剧烧鸡老师在最后说的话令我印象深刻：  </p>\n<blockquote>\n<p>今天的自己有没有变得比昨天更好，明天的自己会不会变得比今天更好，就像我今天坐在这里，在镜头前讲下这个故事，它只是一个普普通通的，随处可见的故事，总有一天，每个人会和这个故事告别，走向不同的方向，独属于你自己的下一页，但是那样就好，累了的话就停下脚步，怀念的话就回来看看，这个故事也一直都在，且行且看，尽力而为，不要害怕，不要后悔，就像《崩坏3》的slogan“为世界上所有的美好而战”一样，我们每个人都是在哭声中来到这个世界，但是却要笑着走向未来。</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/xinlingbushou.jpg\" alt=\"《心灵捕手》台词\" title=\"《心灵捕手》台词\"></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>&emsp;&emsp;本篇文章着重于记录我参加中国大学生计算机设计大赛的经历和作品创作过程。<br>&emsp;&emsp;《电荷：正正子与负负美》是我在大一时设计的微课作品，在我心中它值得写上一笔，文章内容包括创作它时的设计思路和实现方法，以及我的参赛历程。<br>&emsp;&emsp;《电荷：正正子与负负美》不算是一款成功的参赛作品，制作人也就是我也没有专业的微课制作水准，想要从此处取经的朋友还请海涵。<br>&emsp;&emsp;于我而言，本篇文章更重要的作用是用于勉励自己，“历历浮生，无非败而后成。”</p>\n<blockquote>\n<p>有关于中国大学生计算机设计大赛的介绍就不在此处赘述了，想要参赛的朋友还请自行去官网了解参赛时间和参赛项目及要求，本篇文章的作品类别属于微课类。<br><a href=\"http://jsjds.blcu.edu.cn/\">中国大学生计算机设计大赛官网</a></p>\n</blockquote>\n<h2 id=\"作品设计思路\"><a href=\"#作品设计思路\" class=\"headerlink\" title=\"作品设计思路\"></a>作品设计思路</h2><h3 id=\"确定微课主题\"><a href=\"#确定微课主题\" class=\"headerlink\" title=\"确定微课主题\"></a>确定微课主题</h3><p>微课是什么？简而言之就是在短时间内能够将知识点讲授清楚的视频。</p>\n<p>当初想要参赛的我，首先思考的就是课题。<strong>什么样的课题是我已经学过且掌握的，该知识点是否适合制作成微课，这个课题是否新颖，是否有利于故事创作。</strong></p>\n<p>以微课的定义出发，我认为一部好的微课，它要做到<strong>能够将晦涩难懂的知识清清楚楚而且生动形象地讲授出来。</strong>  </p>\n<p>因为我高中比较擅长物理，当我快速地回顾了高中物理3-1课本的内容时，我脑海中闪现出了正负电荷的具体形象，而且正负电荷之间的关系很奇妙，我应该可以试试……  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/charges.png\" alt=\"正负电荷\" title=\"正负电荷\">  </p>\n<p>也因此我确定下了微课的主题：<strong>正负电荷</strong></p>\n<h3 id=\"编写一则故事\"><a href=\"#编写一则故事\" class=\"headerlink\" title=\"编写一则故事\"></a>编写一则故事</h3><p>其实微课作品不一定需要生动的故事内容来支撑，但假如你能做到为该知识点编写故事，就能够使枯燥的知识变得有趣起来，因为我不擅长制作动画，所以有一则新颖的故事是非常有必要的。  </p>\n<ul>\n<li>人物：灵感来源于动画《pop子和pipi美的日常》，感觉挺顺口的，所以我将它们命名为“正正子”和“负负美”</li>\n<li>关系：挚友</li>\n<li>时间：过去</li>\n<li>地点：地球</li>\n<li>内容：以上帝视角的方式讲述正正子和负负美的历史和关系</li>\n</ul>\n<p>故事可以追溯到电荷的历史起源，将正负电荷拟人化，并赋予感情，与我们人类的情感产生共鸣，将库仑力比喻为人类之间的思念之情。  </p>\n<p>具体的故事内容就不在此展开描述了，后面我会给出设计与开发文档的链接。</p>\n<h2 id=\"作品实现方法\"><a href=\"#作品实现方法\" class=\"headerlink\" title=\"作品实现方法\"></a>作品实现方法</h2><h3 id=\"角色设计\"><a href=\"#角色设计\" class=\"headerlink\" title=\"角色设计\"></a>角色设计</h3><p>参考了《pop子和pipi美的日常生活》，哈哈，画风简单粗暴，对于人物的创作我是零基础的，在此也没什么可讲的。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFu.png\" alt=\"正正子和负负美\" title=\"正正子和负负美\"></p>\n<h3 id=\"素材收集\"><a href=\"#素材收集\" class=\"headerlink\" title=\"素材收集\"></a>素材收集</h3><p>现在网上如此之多的素材资源，只要肯找都是有的。因为我的作品是属于简约风格，所以没有下很多功夫去网上收集素材，收集的仅仅是一些名人的图片和实物图。  </p>\n<p>另外的一些图片我是从 <a href=\"https://www.islide.cc/\">iSlide</a> 上拿来的，当时我是开通了一个会员，节省了我很多收集素材的时间。  </p>\n<h3 id=\"撰写说课稿\"><a href=\"#撰写说课稿\" class=\"headerlink\" title=\"撰写说课稿\"></a>撰写说课稿</h3><p>要演出故事，首先得有剧本，说课稿就是剧本，写好了剧本，才能有条不紊的进行整个故事的创作。将想好的故事写进说课稿，然后照着读上几遍，控制好节奏和时间，因为这基本奠定了之后微课的时长。  </p>\n<p><strong>我推荐比赛的微课时长在6-8分钟之间，比赛有答辩环节，10分钟以内你得把作品进行展示和解说，所以控制好作品的时长很重要，必须腾出足够的时间解说。</strong></p>\n<h3 id=\"动画制作\"><a href=\"#动画制作\" class=\"headerlink\" title=\"动画制作\"></a>动画制作</h3><p>这是最为核心的环节，微课动画制作方法多种多样，我知道的有 Flash，After Effects，还有一些本身就是为微课而生的软件比如Focusky。  </p>\n<p>然而在制作过程中以上软件我都没用，我用的只是 PowerPonit，也就是 PPT,在固有观念里 PPT 就是做课件用的，但其实它是实实在在的动画制作软件，而缺点是制作起来较为繁杂。  </p>\n<p>学习其他软件，我要考虑时间成本，PPT 动画我需要学的仅仅是在原来的基础上进行进阶，因此我在B站上看了许多 PPT 动画视频，从中进行学习。  </p>\n<p><strong>PPT制作动画需要的不是高技术含量，是耐心，一张 PPT 多则可高达上百张动画，需要一步一步来组合。将文字在脑海中转换成图像，再用双手创作出来，动画制作就这么个过程。</strong></p>\n<h3 id=\"视频制作\"><a href=\"#视频制作\" class=\"headerlink\" title=\"视频制作\"></a>视频制作</h3><p>那我们仅仅做好动画是不行的，我们还需要拍摄成视频，进行配乐和配音，以及添加字幕，等一系列后期处理。  </p>\n<p>PPT 做的动画做成视频很简单，你可以直接以视频的方式导出。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/pptMovie1.png\" alt=\"PPT导出视频\" title=\"PPT导出视频\">  </p>\n<p>或者用录频软件录制一遍 PPT 的动画播放。<br>录频软件：N卡自带的录屏功能，OBS Studio，Bandicam(付费)等。  </p>\n<p>录好视频后，进行配乐和配音，我当时用的是 Premiere，pr的话可能需要花些时间去学习如何使用，现在的话我知道的剪映也是不错的，易上手。  </p>\n<p>配音的话简单粗暴，手机的录音功能加耳机就行，我当时是一句一句配的，这样不满意的话方便重新配。  </p>\n<p>配完的音频文件导入pr中，和视频进行结合就大功告成了，《电荷：正正子与负负美》的配音全程都是由我一人配的，当然如果要进一步提升竞争力我还是建议找专业的配音来吧。  </p>\n<p>挑选配乐的话，怎样合适怎样来，这范围就太大了。我当时挑选的是iPhone 5 广告Photos Every Day中的BGM—Rob Simonsen Blue</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>制作微课不需要高技术含量，制作一部微课，并且要用来参加竞赛的话，重要的是一定要记得<strong>创新</strong>，如果在此基础上你能设计出漂亮的动画和其他视觉、听觉上的体验那肯定是大大的加分项。  </p>\n<p><strong>虽然没在文章中说有关参赛文档的事，但如果是想要参赛的朋友一定要认认真真填写所有参赛文档，后期答辩时评委会仔细看和提问的，尤其是国赛的评委。</strong></p>\n<p><strong>如果是打算提取干货的朋友看到这里就可以离开了，后面的内容对你的帮助不大。</strong></p>\n<h2 id=\"作品链接\"><a href=\"#作品链接\" class=\"headerlink\" title=\"作品链接\"></a>作品链接</h2><blockquote>\n<p>链接：<a href=\"https://pan.baidu.com/s/1QGm5GTxQxeMLMfO5QWZ8ng?pwd=star\">https://pan.baidu.com/s/1QGm5GTxQxeMLMfO5QWZ8ng?pwd=star</a><br>提取码：star </p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/yimeifasha.jpg\"><br>我们下期文章再见。</p>\n<h2 id=\"参赛历程\"><a href=\"#参赛历程\" class=\"headerlink\" title=\"参赛历程\"></a>参赛历程</h2><p><strong>打算提取干货的朋友看到这里就可以离开了，后面的内容对你帮助不大</strong>。  </p>\n<p>既然是我的个人blog，我当然有必要记录下自己当时参赛的历程。  </p>\n<h3 id=\"报名\"><a href=\"#报名\" class=\"headerlink\" title=\"报名\"></a>报名</h3><p>&emsp;&emsp;当时刚进入大学，对一切都是那么好奇，感觉自己想做的事有很多，感觉自己目标很清晰，很有干劲呢。头一次听到计算机设计大赛是在一次学科讲座上听老师和学姐分享的，当时很有精神啊，还和学姐积极互动，那时候就想我应该也可以做一个参赛作品出来吧，听说可以出省去其他学校比赛呢，这对于一个入学就被封锁的学生来说太有吸引力了。<br>&emsp;&emsp;到下学期时，报名开始，那肯定得报嘛，约上我两个舍友然后就报上了。难的是后面怎么做呢？我看了一些优秀的获奖作品，想从中取经，当时看了的感觉就是：哇这做的太好了，没点专业知识恐怕做不出来。那时候我们所有人都打退堂鼓，后来我提出做高中物理的电荷，这个题材比较好做，后面我们讨论了下，确定下来。<br>&emsp;&emsp;后面就由我创作了整个故事情节，但是难点又来了，怎么做动画，我们都尝试做了，但是效果不尽人意。我就硬照着B站上那些好看的PPT动画去做，花了很大功夫，后来成功了，当我做出开头时，我感觉我还是可以的。</p>\n<h3 id=\"制作\"><a href=\"#制作\" class=\"headerlink\" title=\"制作\"></a>制作</h3><p>&emsp;&emsp;我做了两天，然后就放五一假期，当时我和舍友都回家了，那作品可能真就放弃了。回家后的两天抽空做了做，把开头做好，完成了30％，后面两天，花了大部分精力去做，尤其是第四天直接做到了凌晨5点。我当时就感觉灵感很充足，脑子中一幅幅画面涌现出来，效率特别高，毫无困意，那一天晚上直接就把动画全部做完了。<br>&emsp;&emsp;最后一天我在家弄好视频，回到学校弄好配音，然后就贴着时间点上交了。没想过拿奖，当时就没想要拿奖，可能一切都是徒劳，但是自己想做，想把这个故事写出来，画面呈现出来。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/ZhengFuCover.png\"></p>\n<h3 id=\"校级赛\"><a href=\"#校级赛\" class=\"headerlink\" title=\"校级赛\"></a>校级赛</h3><p>&emsp;&emsp;当时校级赛也需要答辩，第一次答辩我还是蛮紧张的，答辩当天，发现周围的参赛选手都做了答辩PPT，而我没做，当时心情就是崩了，答辩时我就放了一下作品，然后用作品本来的PPT做了介绍，当时觉得应该是没戏了，后面也没多想了，至少能锻炼一下自己的答辩能力……</p>\n<h3 id=\"获奖\"><a href=\"#获奖\" class=\"headerlink\" title=\"获奖\"></a>获奖</h3><p>&emsp;&emsp;校级赛公布结果的那一天，我在上PS课，当时点开一看是一等奖！差点在课上笑出声，瞬间感觉自己所有的付出都值了，后来作品被交付给省上初评顺利通过了，拿到了省赛现场资格，只要拿到了省赛现场资格就意味着进入了国赛。</p>\n<h3 id=\"省赛\"><a href=\"#省赛\" class=\"headerlink\" title=\"省赛\"></a>省赛</h3><p>&emsp;&emsp;省赛定在云南工商学院，没错，是线下赛，为期三天。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/gongshangxueyuan.jpg\" alt=\"云南工商学院\" title=\"云南工商学院\"><br>&emsp;&emsp;第一天从学校出发，乘坐高铁到达了昆明市杨林大学城，入住了官方指定的酒店，然后去领取选手证和官方T恤，顺便抽了签。答辩是分组的，和我同行的两组学长学姐我们分到了不同组，但我们手气出奇一致，在组内把第1都包了，所以当天会很快答完辩，然后就可以在杨林耍一天啦。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/xianchang.jpg\" alt=\"参赛物品\" title=\"参赛物品\"><br>&emsp;&emsp;第二天现场答辩，为什么我会强调一定要控制好微课时长，因为他只给10分钟的答辩时间，而正正子与负负美长达9分10秒，因此我必须在50秒内把作品介绍完，但可能吗？太难了，但这也没办法，那天答辩勉勉强强，紧张还是紧张，只能说自己的现场能力锻炼的还不够。评委老师问的问题主要是：应用了什么软件和技术，并且会挑出几张画面进行提问，然后给出一些建议。<br>&emsp;&emsp;第三天是领奖日，举行颁奖仪式，现场能看到云南省很厉害的计算机老师，当我看到C语言网课的普运伟老师时感觉挺奇妙的，有意义的是可以现场看到那些优秀作品展示，同行学长的数媒动画作品被评为了优秀作品，真的很厉害，我拿到了省级二等奖也算心满意足了。</p>\n<h3 id=\"国赛\"><a href=\"#国赛\" class=\"headerlink\" title=\"国赛\"></a>国赛</h3><p>&emsp;&emsp;因为疫情原因，很遗憾无法去线下参赛，本来想着能去阜阳师范大学见见世面，长长见识的，后来官方将国赛改为了线上比赛。其实我就只是想感受比赛现场的氛围，享受比赛，无法线下比赛是比较遗憾的，不过现场的话省赛也体验过了嘛，只不过我更期待国赛的现场。<br>&emsp;&emsp;国赛答辩是采用腾讯会议答辩，流程都是一样的，放作品介绍作品，回答评委老师的问题。评委老师是会认真去看你写的设计和教学文档的，让我比较在意的是我教学设计文档内容写崩了，只怪我当时没好好检查文档内容，没有做到完美，小小的遗憾吧。最终国赛获得三等奖，能走到国赛在我当时看来是不敢想的，感觉一切都值了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/rongyuqiang.jpg\" alt=\"电荷：正正子与负负美\" title=\"电荷：正正子与负负美\"></p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>其实写到这不知该怎样结尾了，前段时间陪伴了我6年的游戏《崩坏3》第一部完结了，在游戏制作组的纪录片中，编剧烧鸡老师在最后说的话令我印象深刻：  </p>\n<blockquote>\n<p>今天的自己有没有变得比昨天更好，明天的自己会不会变得比今天更好，就像我今天坐在这里，在镜头前讲下这个故事，它只是一个普普通通的，随处可见的故事，总有一天，每个人会和这个故事告别，走向不同的方向，独属于你自己的下一页，但是那样就好，累了的话就停下脚步，怀念的话就回来看看，这个故事也一直都在，且行且看，尽力而为，不要害怕，不要后悔，就像《崩坏3》的slogan“为世界上所有的美好而战”一样，我们每个人都是在哭声中来到这个世界，但是却要笑着走向未来。</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/xinlingbushou.jpg\" alt=\"《心灵捕手》台词\" title=\"《心灵捕手》台词\"></p>\n"},{"title":"将我的blog部署在云服务器ECS上","date":"2023-04-15T07:33:22.000Z","img":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_1.jpg","top":true,"cover":false,"coverImg":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_1.jpg","summary":"本篇文章用于记录我是如何将blog从github pages部署到云服务器ECS的","_content":"\n## 序言\n这次的网站部署工作还挺不容易的，是一次非常新奇的尝试，从此刻执笔写下这篇文章开始，我已经意识到这将是一个漫长的过程，也说明本篇的内容很长，对于我或是读者来说都是一段漫长的征途了。  \n\n![网站主页](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_2.png \"网站主页\")  \n\n早在一年前我就搭建好了我的blog，并且购买并配置了域名，那时候我的blog一直都是在GitHub Pages上的，但是访问速度实在太慢，于是想到把blog部署到国内的服务器上，本篇文章记录的正是这个部署的过程。\n\n## 服务器\n那首先我得有一台国内的服务器，因此我购买了一台云服务器ECS。\n>服务器的操作系统是**CentOS  7.9 64位**\n\n之后配置服务器的过程，因为不同的操作系统命令会有区别，还请读者根据自己的操作系统查询命令。\n\n## 安装MATE桌面环境\n**这个环节是非必要的，读者可跳过，这只是我熟悉服务器的一个小过程。**  \n\n1.执行以下命令，更新系统的软件包  \n```\nyum -y upgrade\n```\n\n2.依次执行以下命令，安装MATE桌面环境  \n**之后会出现一些提示，都让他通过就行**\n```\nyum groups install \"X Window System\"\nyum groups install \"MATE Desktop\"\n```\n\n3.设置默认使用图形化桌面环境启动实例\n```\nsystemctl set-default graphical.target\n```\n\n\n4.执行以下命令重启ECS实例，也可以在控制台手动重启\n```\nreboot\n```\n![控制台重启ECS](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_7.png \"控制台重启ECS\")\n\n5.之后通过ECS管理控制台的VNC连接实例就可以进入到图形界面\n![VNC连接ECS](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_8.png \"VNC连接ECS\")\n![图形界面](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_9.png \"图形界面\")\n\n更多的详细过程可参考阿里云的文档：  \n[如何在Linux系统的ECS实例中安装图形界面](https://help.aliyun.com/document_detail/41227.html)\n\n\n## 安装Git\n>Git 是分布式版本控制系统，有了它我们能很容易地进行主机与服务器的同步  \n\n1.首先查看服务器上是否有安装Git\n```\ngit --version\n```\n\n2.执行以下命令安装Git\n```\nyum install git\n```\n之后碰到提示直接输入y通过。安装完成会出现**Complete!**  \n\n3.执行以下命令创建一个Git用户\n```\nuseradd git\n```\n\n4.设置Git账户的密码\n```\npasswd git\n```\n![设置Git账户和密码](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_10.png \"设置Git账户和密码\")\n\n## 配置ssh\n>要想实现主机和服务器的Git连接，我们需要给到服务器我们主机的密钥\n\n首先主机上要安装Git，主机Git的安装过程在此略过......  \n之前我一直都用着Git，所以已经配置过ssh，但为了温故而知新，咱们从头再来配置一遍。\n\n### 生成ssh\n\n1.我们在**Desktop右键选择Git Bash Here**，然后输入命令，引号内为你的Git用户名\n```\ngit config --global user.name '用户名'\n```\n\n2.输入邮箱\n```\ngit config --global user.email '邮箱'\n```\n然后可以输入以下命令确认下账户\n```\ngit config --list\n```\n\n3.输入以下命令生成ssh，遇到暂停输入的情况就按下回车\n```\nssh-keygen -t rsa -C \"邮箱\"\n```\n![配置ssh](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_11.png \"配置ssh\")\n`\n之后可以在C:\\Users\\用户名\\.ssh目录下看到ssh\n`\n\n### 更新Github的SSHkey\n\n**因为这里我们的ssh变了，所以Github上的ssh也应该重新设置下**  \n\n登录Github，点击个人头像中的Settings，找到SSH and GPG keys，删除原来的SSH Keys，建立新的SSH Keys  \n\n**在ssh目录下找到id_rsa.pub**，拷贝其中内容到GithubSSHkey中\n![Github的SSH keys](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_12.png \"Github的SSH keys\")\n\nOK，之后我们在使用Git管理你的Github仓库时就不会出问题了。\n\n### 将公钥给服务器\n\n将公钥给到服务器，在ssh目录下右键选择Git Bash Here，输入以下命令\n```\nssh-copy-id -i id_rsa.pub git@服务器IP地址\n```\n>注：服务器IP地址为公网IP地址\n\n![将公钥给服务器](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_13.png \"将公钥给服务器\")\n\n好的，到这里我们的ssh全部完成，让我们回到服务器上。\n\n## Nginx\n>Nginx是一个高性能的HTTP和反向代理服务器，我选择使用Nginx来作为web服务器。\n\n### 安装Nginx\n\n1.执行以下命令安装Nginx，版本我选择了1.20.2\n```\nwget http://nginx.org/download/nginx-1.20.2.tar.gz\n```\n\n2.安装依赖\n```\nyum -y install gcc pcre-devel zlib-devel openssl openssl-devel\n```\n\n3.上一步完成后，解压依赖\n```\ntar -zxvf nginx-1.20.2.tar.gz\n```\n\n4.解压后进行配置，依次输入以下命令\n```\ncd nginx-1.20.2\n./configure\n```\n![配置Nginx](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_14.png \"配置Nginx\")\n之后再依次输入以下命令\n```\nmake\nmake install\n```\n到此Nginx就安装好了。\n\n### 运行Nginx及欢迎页面问题\n进入到nginx文件夹下的sbin目录启动nginx，依次执行以下命令\n```\ncd /usr/local/nginx/sbin\n./nginx\n```\n![运行Nginx](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_15.png \"运行Nginx\")\n\n之后在浏览器输入服务器的公网IP地址，就会出现Nginx的欢迎页面  \n\n![Nginx欢迎页面](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_16.png \"Nginx欢迎页面\")\n\n也有可能出现CentOS的欢迎页面  \n\n![CentOS欢迎页面](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_17.png \"CentOS欢迎页面\")\n\n**关于出现Nginx或CentOS页面的问题，我当时在这卡了一段时间，因为我格式化过服务器，第一次安装Nginx时出现的是Nginx的欢迎页面，第二次安装Nginx就出现了CentOS的欢迎页面，我就以为Nginx没安装成功，但是查看Nginx的确实在运行，于是找了下问题所在：**\n\n>检查了阿里云的安全组策略，Nginx的安装步骤，都没有发现问题，安装Nginx时阅读nginx.conf配置文件会发现欢迎页index.html文件路径。找到上面路径下的html文件，通过阅读发现这就是CentOS欢迎页面显示的内容，这证明安装Nginx的欢迎页已经不是Nginx欢迎页面了，所以我们的Nginx安装是完全正确的，只是显示页面改变了。\n\n### Nginx页面无法访问和服务器防火墙问题\n\n在面对防火墙之前，我们找到服务器的网络安全组，看一看有没有开放**80端口**，没有的话要添加一个。  \n![开放80端口](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_18.png \"开放80端口\")\n\n然后我们回到服务器。  \n\n1.查看防火墙状态\n```\nfirewall-cmd --state\n```\n如果没有运行，执行以下命令运行起来\n```\nsystemctl start firewalld.service\n```\n再次查看防火墙的状态会显示 `running`  \n\n2.依次执行以下命令，手动开放80端口\n```\niptables -I INPUT -p tcp --dport 80 -j ACCEPT\nfirewall-cmd --permanent --add-port=80/tcp\n```\n出现`success`  \n至此问题解决，可以正常访问Nginx欢迎页面。\n\n## 创建blog仓库和部署\n\n到这一步可以说是万事俱备，只欠东风了，现在我们需要进行：  \n1. 新建仓库用来存放网站的内容\n2. 提交后把内容自动同步到站点目录\n\n### 创建仓库\n\n1.依次执行以下命令进入git目录，新建一个仓库\n```\ncd /home/git\ngit init --bare blog.git\n```\n\n2.进入hooks文件夹\n```\ncd blog.git/\ncd hooks/\n```\n![创建仓库](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_19.png \"创建仓库\")\n\n### hooks\n\n**Git 钩子：Git 钩子是每次在 Git 存储库中发生特定事件时自动运行的脚本。它们允许您自定义 Git 的内部行为，并在开发生命周期的关键点触发可自定义的操作。**\n- Git 钩子(hooks)是在 Git 仓库中特定事件(certain points)触发后被调用的脚本。\n- 通过钩子可以自定义 Git 内部的相关（如 git push）行为，关键点（如 git push）触发自定义的行为。\n- Git 含有两种类型的钩子：客户端的和服务器端。\n- 客户端钩子由诸如提交和合并这样的操作所调用，而服务器端钩子作用于接收部署提交的代码。实现服务器和本地的git互通。\n\nGit 钩子存在于每个 Git 仓库的 .git/hooks 目录中。 \n![Git 钩子](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_20.png \"Git 钩子\")\n\n\n1.编写post-receive脚本\n```\nvi post-receive\n```\n输入i进入INSERT模式，内容如下\n```\n#!/bin/bash\n#nginx下html文件夹目录\nDIR=/usr/local/naginx/html\ngit --work-tree=${DIR} clean -fd\n#直接强制检出\ngit --work-tree=${DIR} checkout --force\n```\n写好后ESC退出INSERT模式，:wq保存退出\n\n2.授予运行权限\n```\nchmod +x post-receive\n```\n\n3.授予git用户\n```\nchown -R git post-receive\n```\n\n4.给到一个读写的最高权限\n```\nchmod 777 post-receive\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_21.png)\n\n\n5.回到git目录下，给仓库同样的操作\n```\ncd /home/git\nchmod 777 blog.git/\nchown -R git blog.git/\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_22.png)\n\n6.被同步的目录也需要授予最高权限和git用户\n```\ncd /usr/local/nginx\nchmod 777 html/\nchown -R git html/\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_23.png)\n\n### hexo配置\n\n打开hexo的主配置文件，添加deploy仓库\n```\ntype: git\nrepo: git@服务器IP地址:/home/git/blog.git\nbranch: master\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_24.png)\n\n### 同步到服务器\n\n在本地blog文件夹下Git Bash Here，执行以下命令\n```\nhexo clean\nhexo deploy\n```\n完成后，输入服务器的IP地址就可以访问到网站了。  \n\n可以检查下服务器上是否有我们的博客文件\n```\ncd /usr/local/nginx/html\nls\n```\n检查无误就大功告成了。\n\n## 域名解析\n\n这一步是让我的域名绑定服务器，绑定之后就能以域名访问网站了。这一步很简单，只需要添加域名解析就行。  \n\n**这里添加两个记录：www和@，记录值都是服务器的IP地址**\n![域名解析](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_25.png \"域名解析\")\n\n\n## SSL证书\n\n\n>SSL 证书就是遵守 SSL 安全套接层协议的服务器数字证书。而 SSL 安全协议最初是由美国网景 Netscape Communication 公司设计开发的,全称为:安全套接层协议 (Secure Sockets Layer) , 它指定了在应用程序协议(如 HTTP、Telnet、FTP)和 TCP/IP 之间提供数据安全性 分层的机制,它是在传输通信协议(TCP/IP)上实现的一种安全协议,采用公开密钥技术,它为 TCP/IP 连接提供数据加密、服务器认证、消息完整性以及可选的客户机认证。由于此协议很好地解决了互联网明文传输的不安全问题,很快得到了业界的支持,并已经成为国际标准。SSL 证书由浏览器中“受信任的根证书颁发机构”在验证服务器身份后颁发,实现网站身份验证和加密传输功能。\n\n装载SSL证书产品后自动激活浏览器中显示“锁”型安全标志，地址栏以“https”开头。\n\n### 获取SSL证书\n\n获取的方式挺多，可以购买，也可以免费获取，我的证书是领的阿里云免费给的20张证书。\n![免费的SSL证书](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_26.png \"免费的SSL证书\")\n\n### 下载SSL证书\n\n点击证书栏右侧“下载”，找到服务器类型Nginx下载。\n![下载SSL证书](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_27.png \"下载SSL证书\")\n\n### 传输到服务器\n\n下载后的证书是一个压缩包，解压后会有两个文件：**.key和.pem**  \n\n这里可以解压后传输到服务器，也可以把压缩包直接传输到服务器，但是需要在服务器上解压，所以服务器需要安装ZIP解压软件。这里我选择先解压再传输到服务器。  \n\n安装unzip\n```\nyum install unzip\n```\n\n1.在Nginx根目录下conf文件夹下创建存放证书的目录cert\n```\ncd /usr/local/nginx/conf\nmkdir cert\n```\n\n这里我选择先解压再传输到服务器。\n\n2.在ECS控制台发送.key和.pem文件，目标路径为\n```\n/usr/local/nginx/conf/cert/\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_29.png)\n\n上传成功后，进入cert文件夹可以看到存在这两个文件了\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_30.png)\n\n\n### 修改 server\n\n1..返回conf文件夹编辑Nginx配置文件nginx.conf，修改与证书相关的配置，目的是打开443端口。\n```\nvim nginx.conf\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_28.png)\n\n2.找到HTTPS server，**将其内容解注释并修改**。  \n\n以下步骤含错误示范，还请读者不要着急模仿，可以先去下面看一眼“**重启失败解决方案**”的内容，方便之后一步到位。  \n\n当然也可以跟着我的步骤来，之后修改错误。\n\n原来的HTTPS server内容\n```\n   # HTTPS server\n   #\n   # server {\n   #     listen       443 ssl;\n   #     server_name  localhost;\n\n\n   #     ssl_certificate      cert.pem;\n   #     ssl_certificate_key  cert.key;\n\n   #     ssl_session_cache    shared:SSL:1m;\n   #     ssl_session_timeout  5m;\n\n\n   #     ssl_ciphers HIGH:!aNULL:!MD5;\n   #     ssl_prefer_server_ciphers  on;\n\n   #     location / {\n   #         root   html;\n   #         index  index.html index.htm;\n   #     }\n   #}\n```\n\n修改后的HTTPS server\n```\n    HTTPS server\n   \n    server {\n        #HTTPS的默认访问端口为443\n        #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动\n        #如果使用Nginx 1.15.0及以上版本，请使用listen 443 ssl 代替listen 443和ssl on\n        listen       443 ssl;\n        #填写证书绑定的域名\n        server_name  www.invictusqiu.com;\n        root html;\n        index index.html index.htm;\n\n        #填写证书文件名称\n        ssl_certificate      cert/9575407_www.invictusqiu.com.pem;\n        ssl_certificate_key  cert/9575407_www.invictusqiu.com.key;\n\n        ssl_session_timeout  5m;\n\n        #表示使用的加密套件的类型\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n        #表示使用的TLS协议的类型，需要自行评估是否配置TLSv1.1协议\n        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n        ssl_prefer_server_ciphers  on;\n\n        location / {\n        #Web网站程序存放目录\n            root   html;\n            index  index.html index.htm;\n        }\n    }\n```\n\n3.修改80端口server的内容\n\n原来80端口的server\n```\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        #后面内容可忽略\n    }\n```\n修改后的80端口server\n```\n    server {\n        listen       80;\n        #填写证书绑定的域名\n        server_name  www.invictusqiu.com;\n        #将所有HTTP请求通过rewrite指令重定向到HTTPS。\n        rewrite ^(.*)$ https://$host$1;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        #后面内容可忽略\n    }\n```\n\n服务器界面展示：\n![443端口原来的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_31.png \"443端口原来的server\")\n![443端口现在的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_32.png \"443端口现在的server\")\n![80端口原来的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_33.png \"80端口原来的server\")\n![80端口现在的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_34.png \"80端口现在的server\")\n\n**修改完成后保存退出**\n\n### 重启Nginx服务\n\n来到nginx的sbin目录执行重启命令\n```\ncd /usr/local/nginx/sbin\n./nginx -s reload\n```\n\n发现报错：\n![重启错误](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_35.png \"重启错误\")\n\n### 重启失败解决方案\n\n好的，不论是跳转来这一步的朋友，还是跟着我步骤的朋友，**现在看一看nginx.conf文件443端口那里的HTTPS server是不是注释掉的。**\n\n也就是如下\n```\n   # HTTPS server\n   \n    server {\n        listen       443 ssl;\n        server_name  localhost;\n```\n**还没修改server的朋友请注意不要将HTTPS server解注释。**  \n\n**已经跟着我走的朋友请回去将其注释掉**。  \n\n之后再次重启Nginx服务就成功了。\n\n### 重启失败解决方案第二版\n\n为什么有第二版解决方案呢，这版解决方案是针对：  \n**由于我们未装SSL模块，启动时，会提示nginx:[emerg]unknown directive ssl错误**  \n\n因为我是先遇到第一版错误，不知道错哪了，查资料时干脆把这一版的解决方案先做了，到最后发现我并未存在此版错误，但我认为还是有必要提一下的。  \n\n**如果未做该版解决方案的朋友你跟着我前面的步骤很顺利的重启了，那么你可以跳过此小节到“放行443端口”。**  \n\n好的，让我们看看这一错误该怎么解决。\n\n先执行`cd ~`  \n\n1.检查你是否安装了ssl模块\n```\ncd /usr/local/nginx\n./sbin/nginx -V\n```\n如下图所示显示已经安装ssl模块则证明你不存在此版错误。\n![存在ssl模块](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_36.png \"存在ssl模块\")\n\n2.如果没有ssl模块，我们先来到Nginx的解压目录，跟着我的步骤走的朋友路径如下，其他的朋友可能你的解压目录在/usr/local/nginx-1.20.2\n```\ncd ~\ncd /root/nginx-1.20.2\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_37.png)\n\n3.添加ssl模块\n```\n./configure --with-http_ssl_module\n```\n\n4.执行make命令，编译安装包\n```\nmake\n```\n\n5.查看objs文件夹下有一个nginx文件，这个就是新版程序，然后备份下之前的nginx\n```\ncp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak\n```\n\n6.把编译好的nginx文件替换之前的\n```\ncp objs/nginx /usr/local/nginx/sbin/nginx\n```\n\n如果无法替换，显示  \n`\ncannot create regular file '/usr/local/nginx/sbin/nginx': Text file busy\n`\n  \n执行以下命令查看nginx进程\n```\nps -ef | grep nginx\n```\n发现正在运行\n\n\n查看进程号，执行以下命令关闭nginx进程\n```\nkill -QUIT 4809\n```\n再次查看nginx进程，可以看到已经关闭，之后再次执行上面的替换命令，就能成功替换了。\n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_38.png)\n\n7.最后查看下是否安装成功了\n```\ncd /usr/local/nginx\n./sbin/nginx -V\n```\n显示有ssl模块，那么就证明我们安装成功了，之后就能正常重启nginx了。\n\n\n### 放行443端口\n\n1.执行以下命令查看443端口是否在运行\n```\nnetstat -nplt lgrep 443\n```\n可以看到正在运行\n![443端口正常运行](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_39.png \"443端口正常运行\")\n\n\n2.添加防火墙端口\n\n查看防火墙运行状态\n```\nfirewall-cmd --state\n```\n显示`running`，则进入下一步。\n\n查看开放的端口\n```\nfirewall-cmd --list-ports\n```\n发现没有443端口。\n\n添加443端口\n```\nfirewall-cmd --zone=public --add-port=443/tcp --permanent\n```\n显示`success`\n\n3.重新加载防火墙\n```\nfirewall-cmd --reload\n```\n显示`success`\n\n再次查看开放的端口\n```\nfirewall-cmd --list-ports\n```\n可以看到存在443端口。\n\n![添加防火墙端口](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_40.png \"添加防火墙端口\")\n\n\n4.检查本地443端口加载的HTTPS服务以及证书是否正常，域名名称为你自己的域名\n```\necho | openssl s_client -connect 127.0.0.1:443 -servername invictusqiu.com 2>/dev/null\n```\n结果出现`SSL-Session`表示HTTPS服务正常运行。\n\n![SSL-Session](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_41.png \"SSL-Session\")\n\n\n5.进入ECS安全组策略\n![进入ECS安全组策略](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_42.png \"进入ECS安全组策略\")\n\n放行TCP协议443端口的入方向请求\n![放行443端口](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_43.png \"放行443端口\")\n\n6.执行curl命令，查询服务器响应header信息\n```\ncurl -l https://invictusqiu.com\n```\n结果显示HTTPS请求可以正常响应。\n![响应header信息](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_44.png \"响应header信息\")\n\n**至此所有工作都完成了！**\n\n## 结尾\n \n此番部署工作可谓是困难重重，在此途中卡了好多次，甚至一个重启nginx的问题都解决了好久，关于我是怎么知道HTTPS server需要注释掉的呢？在网上翻来覆去搞了半天，看到这个视频：\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_45.png)\n\n哈哈哈，找个错误CPU都干烧了，结果是这种错误。  \n这种 Error 可谓是读计算机专业家常便饭的事了。  \n\n\n最后分享一件事作为本篇文章的结尾：  \n&emsp;&emsp;我一直很钦佩纯粹的人，特别是以具体的目光投射到他身上时也依然纯粹的人，但这样的人只是我心目中的理想化，我也只是追寻着“这类不存在的人”的脚步前进罢了。几天前跟朋友聊天，聊到了跟几年前的自己做对比。假如需要你去做一件短时间内几乎不可能完成的事，以至于需要“燃尽”自己，你还会去做吗？我不可否认，在塑造世界观的那个年纪，现实、电影、小说、电子游戏等都或多或少影响到过我的世界观。  \n&emsp;&emsp;在几年前如果你问我这个问题，我的回答甚至偏向于“会”，但是现在我想还是算了罢，我想这就是现在的自己和几年前自己一个最大的对比。  \n&emsp;&emsp;我并不是否认“会”这个选项，只是它**现在**不是最优解了。所以我为什么钦佩纯粹的人，是因为他们从不会因为“时态”而去改变自身的选择，这也是我为什么仅仅只是追随他们而不是成为他们的原因吧。  \n\n>本章一句：  \n以我残躯化烈火。—— Cyberpunk 2077 隐藏结局\n\n### 我们下期文章再见！","source":"_posts/DeployBlog.md","raw":"---\ntitle: 将我的blog部署在云服务器ECS上\ndate: 2023-04-15 15:33:22\nimg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_1.jpg\ntop: true\ncover: false\ncoverImg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_1.jpg\nsummary: 本篇文章用于记录我是如何将blog从github pages部署到云服务器ECS的\ncategories: Hexo\ntags:\n    - Hexo\n    - Git\n    - Nginx\n    - 云服务器\n---\n\n## 序言\n这次的网站部署工作还挺不容易的，是一次非常新奇的尝试，从此刻执笔写下这篇文章开始，我已经意识到这将是一个漫长的过程，也说明本篇的内容很长，对于我或是读者来说都是一段漫长的征途了。  \n\n![网站主页](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_2.png \"网站主页\")  \n\n早在一年前我就搭建好了我的blog，并且购买并配置了域名，那时候我的blog一直都是在GitHub Pages上的，但是访问速度实在太慢，于是想到把blog部署到国内的服务器上，本篇文章记录的正是这个部署的过程。\n\n## 服务器\n那首先我得有一台国内的服务器，因此我购买了一台云服务器ECS。\n>服务器的操作系统是**CentOS  7.9 64位**\n\n之后配置服务器的过程，因为不同的操作系统命令会有区别，还请读者根据自己的操作系统查询命令。\n\n## 安装MATE桌面环境\n**这个环节是非必要的，读者可跳过，这只是我熟悉服务器的一个小过程。**  \n\n1.执行以下命令，更新系统的软件包  \n```\nyum -y upgrade\n```\n\n2.依次执行以下命令，安装MATE桌面环境  \n**之后会出现一些提示，都让他通过就行**\n```\nyum groups install \"X Window System\"\nyum groups install \"MATE Desktop\"\n```\n\n3.设置默认使用图形化桌面环境启动实例\n```\nsystemctl set-default graphical.target\n```\n\n\n4.执行以下命令重启ECS实例，也可以在控制台手动重启\n```\nreboot\n```\n![控制台重启ECS](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_7.png \"控制台重启ECS\")\n\n5.之后通过ECS管理控制台的VNC连接实例就可以进入到图形界面\n![VNC连接ECS](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_8.png \"VNC连接ECS\")\n![图形界面](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_9.png \"图形界面\")\n\n更多的详细过程可参考阿里云的文档：  \n[如何在Linux系统的ECS实例中安装图形界面](https://help.aliyun.com/document_detail/41227.html)\n\n\n## 安装Git\n>Git 是分布式版本控制系统，有了它我们能很容易地进行主机与服务器的同步  \n\n1.首先查看服务器上是否有安装Git\n```\ngit --version\n```\n\n2.执行以下命令安装Git\n```\nyum install git\n```\n之后碰到提示直接输入y通过。安装完成会出现**Complete!**  \n\n3.执行以下命令创建一个Git用户\n```\nuseradd git\n```\n\n4.设置Git账户的密码\n```\npasswd git\n```\n![设置Git账户和密码](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_10.png \"设置Git账户和密码\")\n\n## 配置ssh\n>要想实现主机和服务器的Git连接，我们需要给到服务器我们主机的密钥\n\n首先主机上要安装Git，主机Git的安装过程在此略过......  \n之前我一直都用着Git，所以已经配置过ssh，但为了温故而知新，咱们从头再来配置一遍。\n\n### 生成ssh\n\n1.我们在**Desktop右键选择Git Bash Here**，然后输入命令，引号内为你的Git用户名\n```\ngit config --global user.name '用户名'\n```\n\n2.输入邮箱\n```\ngit config --global user.email '邮箱'\n```\n然后可以输入以下命令确认下账户\n```\ngit config --list\n```\n\n3.输入以下命令生成ssh，遇到暂停输入的情况就按下回车\n```\nssh-keygen -t rsa -C \"邮箱\"\n```\n![配置ssh](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_11.png \"配置ssh\")\n`\n之后可以在C:\\Users\\用户名\\.ssh目录下看到ssh\n`\n\n### 更新Github的SSHkey\n\n**因为这里我们的ssh变了，所以Github上的ssh也应该重新设置下**  \n\n登录Github，点击个人头像中的Settings，找到SSH and GPG keys，删除原来的SSH Keys，建立新的SSH Keys  \n\n**在ssh目录下找到id_rsa.pub**，拷贝其中内容到GithubSSHkey中\n![Github的SSH keys](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_12.png \"Github的SSH keys\")\n\nOK，之后我们在使用Git管理你的Github仓库时就不会出问题了。\n\n### 将公钥给服务器\n\n将公钥给到服务器，在ssh目录下右键选择Git Bash Here，输入以下命令\n```\nssh-copy-id -i id_rsa.pub git@服务器IP地址\n```\n>注：服务器IP地址为公网IP地址\n\n![将公钥给服务器](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_13.png \"将公钥给服务器\")\n\n好的，到这里我们的ssh全部完成，让我们回到服务器上。\n\n## Nginx\n>Nginx是一个高性能的HTTP和反向代理服务器，我选择使用Nginx来作为web服务器。\n\n### 安装Nginx\n\n1.执行以下命令安装Nginx，版本我选择了1.20.2\n```\nwget http://nginx.org/download/nginx-1.20.2.tar.gz\n```\n\n2.安装依赖\n```\nyum -y install gcc pcre-devel zlib-devel openssl openssl-devel\n```\n\n3.上一步完成后，解压依赖\n```\ntar -zxvf nginx-1.20.2.tar.gz\n```\n\n4.解压后进行配置，依次输入以下命令\n```\ncd nginx-1.20.2\n./configure\n```\n![配置Nginx](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_14.png \"配置Nginx\")\n之后再依次输入以下命令\n```\nmake\nmake install\n```\n到此Nginx就安装好了。\n\n### 运行Nginx及欢迎页面问题\n进入到nginx文件夹下的sbin目录启动nginx，依次执行以下命令\n```\ncd /usr/local/nginx/sbin\n./nginx\n```\n![运行Nginx](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_15.png \"运行Nginx\")\n\n之后在浏览器输入服务器的公网IP地址，就会出现Nginx的欢迎页面  \n\n![Nginx欢迎页面](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_16.png \"Nginx欢迎页面\")\n\n也有可能出现CentOS的欢迎页面  \n\n![CentOS欢迎页面](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_17.png \"CentOS欢迎页面\")\n\n**关于出现Nginx或CentOS页面的问题，我当时在这卡了一段时间，因为我格式化过服务器，第一次安装Nginx时出现的是Nginx的欢迎页面，第二次安装Nginx就出现了CentOS的欢迎页面，我就以为Nginx没安装成功，但是查看Nginx的确实在运行，于是找了下问题所在：**\n\n>检查了阿里云的安全组策略，Nginx的安装步骤，都没有发现问题，安装Nginx时阅读nginx.conf配置文件会发现欢迎页index.html文件路径。找到上面路径下的html文件，通过阅读发现这就是CentOS欢迎页面显示的内容，这证明安装Nginx的欢迎页已经不是Nginx欢迎页面了，所以我们的Nginx安装是完全正确的，只是显示页面改变了。\n\n### Nginx页面无法访问和服务器防火墙问题\n\n在面对防火墙之前，我们找到服务器的网络安全组，看一看有没有开放**80端口**，没有的话要添加一个。  \n![开放80端口](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_18.png \"开放80端口\")\n\n然后我们回到服务器。  \n\n1.查看防火墙状态\n```\nfirewall-cmd --state\n```\n如果没有运行，执行以下命令运行起来\n```\nsystemctl start firewalld.service\n```\n再次查看防火墙的状态会显示 `running`  \n\n2.依次执行以下命令，手动开放80端口\n```\niptables -I INPUT -p tcp --dport 80 -j ACCEPT\nfirewall-cmd --permanent --add-port=80/tcp\n```\n出现`success`  \n至此问题解决，可以正常访问Nginx欢迎页面。\n\n## 创建blog仓库和部署\n\n到这一步可以说是万事俱备，只欠东风了，现在我们需要进行：  \n1. 新建仓库用来存放网站的内容\n2. 提交后把内容自动同步到站点目录\n\n### 创建仓库\n\n1.依次执行以下命令进入git目录，新建一个仓库\n```\ncd /home/git\ngit init --bare blog.git\n```\n\n2.进入hooks文件夹\n```\ncd blog.git/\ncd hooks/\n```\n![创建仓库](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_19.png \"创建仓库\")\n\n### hooks\n\n**Git 钩子：Git 钩子是每次在 Git 存储库中发生特定事件时自动运行的脚本。它们允许您自定义 Git 的内部行为，并在开发生命周期的关键点触发可自定义的操作。**\n- Git 钩子(hooks)是在 Git 仓库中特定事件(certain points)触发后被调用的脚本。\n- 通过钩子可以自定义 Git 内部的相关（如 git push）行为，关键点（如 git push）触发自定义的行为。\n- Git 含有两种类型的钩子：客户端的和服务器端。\n- 客户端钩子由诸如提交和合并这样的操作所调用，而服务器端钩子作用于接收部署提交的代码。实现服务器和本地的git互通。\n\nGit 钩子存在于每个 Git 仓库的 .git/hooks 目录中。 \n![Git 钩子](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_20.png \"Git 钩子\")\n\n\n1.编写post-receive脚本\n```\nvi post-receive\n```\n输入i进入INSERT模式，内容如下\n```\n#!/bin/bash\n#nginx下html文件夹目录\nDIR=/usr/local/naginx/html\ngit --work-tree=${DIR} clean -fd\n#直接强制检出\ngit --work-tree=${DIR} checkout --force\n```\n写好后ESC退出INSERT模式，:wq保存退出\n\n2.授予运行权限\n```\nchmod +x post-receive\n```\n\n3.授予git用户\n```\nchown -R git post-receive\n```\n\n4.给到一个读写的最高权限\n```\nchmod 777 post-receive\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_21.png)\n\n\n5.回到git目录下，给仓库同样的操作\n```\ncd /home/git\nchmod 777 blog.git/\nchown -R git blog.git/\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_22.png)\n\n6.被同步的目录也需要授予最高权限和git用户\n```\ncd /usr/local/nginx\nchmod 777 html/\nchown -R git html/\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_23.png)\n\n### hexo配置\n\n打开hexo的主配置文件，添加deploy仓库\n```\ntype: git\nrepo: git@服务器IP地址:/home/git/blog.git\nbranch: master\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_24.png)\n\n### 同步到服务器\n\n在本地blog文件夹下Git Bash Here，执行以下命令\n```\nhexo clean\nhexo deploy\n```\n完成后，输入服务器的IP地址就可以访问到网站了。  \n\n可以检查下服务器上是否有我们的博客文件\n```\ncd /usr/local/nginx/html\nls\n```\n检查无误就大功告成了。\n\n## 域名解析\n\n这一步是让我的域名绑定服务器，绑定之后就能以域名访问网站了。这一步很简单，只需要添加域名解析就行。  \n\n**这里添加两个记录：www和@，记录值都是服务器的IP地址**\n![域名解析](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_25.png \"域名解析\")\n\n\n## SSL证书\n\n\n>SSL 证书就是遵守 SSL 安全套接层协议的服务器数字证书。而 SSL 安全协议最初是由美国网景 Netscape Communication 公司设计开发的,全称为:安全套接层协议 (Secure Sockets Layer) , 它指定了在应用程序协议(如 HTTP、Telnet、FTP)和 TCP/IP 之间提供数据安全性 分层的机制,它是在传输通信协议(TCP/IP)上实现的一种安全协议,采用公开密钥技术,它为 TCP/IP 连接提供数据加密、服务器认证、消息完整性以及可选的客户机认证。由于此协议很好地解决了互联网明文传输的不安全问题,很快得到了业界的支持,并已经成为国际标准。SSL 证书由浏览器中“受信任的根证书颁发机构”在验证服务器身份后颁发,实现网站身份验证和加密传输功能。\n\n装载SSL证书产品后自动激活浏览器中显示“锁”型安全标志，地址栏以“https”开头。\n\n### 获取SSL证书\n\n获取的方式挺多，可以购买，也可以免费获取，我的证书是领的阿里云免费给的20张证书。\n![免费的SSL证书](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_26.png \"免费的SSL证书\")\n\n### 下载SSL证书\n\n点击证书栏右侧“下载”，找到服务器类型Nginx下载。\n![下载SSL证书](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_27.png \"下载SSL证书\")\n\n### 传输到服务器\n\n下载后的证书是一个压缩包，解压后会有两个文件：**.key和.pem**  \n\n这里可以解压后传输到服务器，也可以把压缩包直接传输到服务器，但是需要在服务器上解压，所以服务器需要安装ZIP解压软件。这里我选择先解压再传输到服务器。  \n\n安装unzip\n```\nyum install unzip\n```\n\n1.在Nginx根目录下conf文件夹下创建存放证书的目录cert\n```\ncd /usr/local/nginx/conf\nmkdir cert\n```\n\n这里我选择先解压再传输到服务器。\n\n2.在ECS控制台发送.key和.pem文件，目标路径为\n```\n/usr/local/nginx/conf/cert/\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_29.png)\n\n上传成功后，进入cert文件夹可以看到存在这两个文件了\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_30.png)\n\n\n### 修改 server\n\n1..返回conf文件夹编辑Nginx配置文件nginx.conf，修改与证书相关的配置，目的是打开443端口。\n```\nvim nginx.conf\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_28.png)\n\n2.找到HTTPS server，**将其内容解注释并修改**。  \n\n以下步骤含错误示范，还请读者不要着急模仿，可以先去下面看一眼“**重启失败解决方案**”的内容，方便之后一步到位。  \n\n当然也可以跟着我的步骤来，之后修改错误。\n\n原来的HTTPS server内容\n```\n   # HTTPS server\n   #\n   # server {\n   #     listen       443 ssl;\n   #     server_name  localhost;\n\n\n   #     ssl_certificate      cert.pem;\n   #     ssl_certificate_key  cert.key;\n\n   #     ssl_session_cache    shared:SSL:1m;\n   #     ssl_session_timeout  5m;\n\n\n   #     ssl_ciphers HIGH:!aNULL:!MD5;\n   #     ssl_prefer_server_ciphers  on;\n\n   #     location / {\n   #         root   html;\n   #         index  index.html index.htm;\n   #     }\n   #}\n```\n\n修改后的HTTPS server\n```\n    HTTPS server\n   \n    server {\n        #HTTPS的默认访问端口为443\n        #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动\n        #如果使用Nginx 1.15.0及以上版本，请使用listen 443 ssl 代替listen 443和ssl on\n        listen       443 ssl;\n        #填写证书绑定的域名\n        server_name  www.invictusqiu.com;\n        root html;\n        index index.html index.htm;\n\n        #填写证书文件名称\n        ssl_certificate      cert/9575407_www.invictusqiu.com.pem;\n        ssl_certificate_key  cert/9575407_www.invictusqiu.com.key;\n\n        ssl_session_timeout  5m;\n\n        #表示使用的加密套件的类型\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n        #表示使用的TLS协议的类型，需要自行评估是否配置TLSv1.1协议\n        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n        ssl_prefer_server_ciphers  on;\n\n        location / {\n        #Web网站程序存放目录\n            root   html;\n            index  index.html index.htm;\n        }\n    }\n```\n\n3.修改80端口server的内容\n\n原来80端口的server\n```\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        #后面内容可忽略\n    }\n```\n修改后的80端口server\n```\n    server {\n        listen       80;\n        #填写证书绑定的域名\n        server_name  www.invictusqiu.com;\n        #将所有HTTP请求通过rewrite指令重定向到HTTPS。\n        rewrite ^(.*)$ https://$host$1;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        #后面内容可忽略\n    }\n```\n\n服务器界面展示：\n![443端口原来的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_31.png \"443端口原来的server\")\n![443端口现在的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_32.png \"443端口现在的server\")\n![80端口原来的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_33.png \"80端口原来的server\")\n![80端口现在的server](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_34.png \"80端口现在的server\")\n\n**修改完成后保存退出**\n\n### 重启Nginx服务\n\n来到nginx的sbin目录执行重启命令\n```\ncd /usr/local/nginx/sbin\n./nginx -s reload\n```\n\n发现报错：\n![重启错误](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_35.png \"重启错误\")\n\n### 重启失败解决方案\n\n好的，不论是跳转来这一步的朋友，还是跟着我步骤的朋友，**现在看一看nginx.conf文件443端口那里的HTTPS server是不是注释掉的。**\n\n也就是如下\n```\n   # HTTPS server\n   \n    server {\n        listen       443 ssl;\n        server_name  localhost;\n```\n**还没修改server的朋友请注意不要将HTTPS server解注释。**  \n\n**已经跟着我走的朋友请回去将其注释掉**。  \n\n之后再次重启Nginx服务就成功了。\n\n### 重启失败解决方案第二版\n\n为什么有第二版解决方案呢，这版解决方案是针对：  \n**由于我们未装SSL模块，启动时，会提示nginx:[emerg]unknown directive ssl错误**  \n\n因为我是先遇到第一版错误，不知道错哪了，查资料时干脆把这一版的解决方案先做了，到最后发现我并未存在此版错误，但我认为还是有必要提一下的。  \n\n**如果未做该版解决方案的朋友你跟着我前面的步骤很顺利的重启了，那么你可以跳过此小节到“放行443端口”。**  \n\n好的，让我们看看这一错误该怎么解决。\n\n先执行`cd ~`  \n\n1.检查你是否安装了ssl模块\n```\ncd /usr/local/nginx\n./sbin/nginx -V\n```\n如下图所示显示已经安装ssl模块则证明你不存在此版错误。\n![存在ssl模块](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_36.png \"存在ssl模块\")\n\n2.如果没有ssl模块，我们先来到Nginx的解压目录，跟着我的步骤走的朋友路径如下，其他的朋友可能你的解压目录在/usr/local/nginx-1.20.2\n```\ncd ~\ncd /root/nginx-1.20.2\n```\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_37.png)\n\n3.添加ssl模块\n```\n./configure --with-http_ssl_module\n```\n\n4.执行make命令，编译安装包\n```\nmake\n```\n\n5.查看objs文件夹下有一个nginx文件，这个就是新版程序，然后备份下之前的nginx\n```\ncp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak\n```\n\n6.把编译好的nginx文件替换之前的\n```\ncp objs/nginx /usr/local/nginx/sbin/nginx\n```\n\n如果无法替换，显示  \n`\ncannot create regular file '/usr/local/nginx/sbin/nginx': Text file busy\n`\n  \n执行以下命令查看nginx进程\n```\nps -ef | grep nginx\n```\n发现正在运行\n\n\n查看进程号，执行以下命令关闭nginx进程\n```\nkill -QUIT 4809\n```\n再次查看nginx进程，可以看到已经关闭，之后再次执行上面的替换命令，就能成功替换了。\n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_38.png)\n\n7.最后查看下是否安装成功了\n```\ncd /usr/local/nginx\n./sbin/nginx -V\n```\n显示有ssl模块，那么就证明我们安装成功了，之后就能正常重启nginx了。\n\n\n### 放行443端口\n\n1.执行以下命令查看443端口是否在运行\n```\nnetstat -nplt lgrep 443\n```\n可以看到正在运行\n![443端口正常运行](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_39.png \"443端口正常运行\")\n\n\n2.添加防火墙端口\n\n查看防火墙运行状态\n```\nfirewall-cmd --state\n```\n显示`running`，则进入下一步。\n\n查看开放的端口\n```\nfirewall-cmd --list-ports\n```\n发现没有443端口。\n\n添加443端口\n```\nfirewall-cmd --zone=public --add-port=443/tcp --permanent\n```\n显示`success`\n\n3.重新加载防火墙\n```\nfirewall-cmd --reload\n```\n显示`success`\n\n再次查看开放的端口\n```\nfirewall-cmd --list-ports\n```\n可以看到存在443端口。\n\n![添加防火墙端口](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_40.png \"添加防火墙端口\")\n\n\n4.检查本地443端口加载的HTTPS服务以及证书是否正常，域名名称为你自己的域名\n```\necho | openssl s_client -connect 127.0.0.1:443 -servername invictusqiu.com 2>/dev/null\n```\n结果出现`SSL-Session`表示HTTPS服务正常运行。\n\n![SSL-Session](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_41.png \"SSL-Session\")\n\n\n5.进入ECS安全组策略\n![进入ECS安全组策略](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_42.png \"进入ECS安全组策略\")\n\n放行TCP协议443端口的入方向请求\n![放行443端口](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_43.png \"放行443端口\")\n\n6.执行curl命令，查询服务器响应header信息\n```\ncurl -l https://invictusqiu.com\n```\n结果显示HTTPS请求可以正常响应。\n![响应header信息](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_44.png \"响应header信息\")\n\n**至此所有工作都完成了！**\n\n## 结尾\n \n此番部署工作可谓是困难重重，在此途中卡了好多次，甚至一个重启nginx的问题都解决了好久，关于我是怎么知道HTTPS server需要注释掉的呢？在网上翻来覆去搞了半天，看到这个视频：\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_45.png)\n\n哈哈哈，找个错误CPU都干烧了，结果是这种错误。  \n这种 Error 可谓是读计算机专业家常便饭的事了。  \n\n\n最后分享一件事作为本篇文章的结尾：  \n&emsp;&emsp;我一直很钦佩纯粹的人，特别是以具体的目光投射到他身上时也依然纯粹的人，但这样的人只是我心目中的理想化，我也只是追寻着“这类不存在的人”的脚步前进罢了。几天前跟朋友聊天，聊到了跟几年前的自己做对比。假如需要你去做一件短时间内几乎不可能完成的事，以至于需要“燃尽”自己，你还会去做吗？我不可否认，在塑造世界观的那个年纪，现实、电影、小说、电子游戏等都或多或少影响到过我的世界观。  \n&emsp;&emsp;在几年前如果你问我这个问题，我的回答甚至偏向于“会”，但是现在我想还是算了罢，我想这就是现在的自己和几年前自己一个最大的对比。  \n&emsp;&emsp;我并不是否认“会”这个选项，只是它**现在**不是最优解了。所以我为什么钦佩纯粹的人，是因为他们从不会因为“时态”而去改变自身的选择，这也是我为什么仅仅只是追随他们而不是成为他们的原因吧。  \n\n>本章一句：  \n以我残躯化烈火。—— Cyberpunk 2077 隐藏结局\n\n### 我们下期文章再见！","slug":"DeployBlog","published":1,"updated":"2024-09-20T08:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1bsqfjq0007estyd314ftuj","content":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>这次的网站部署工作还挺不容易的，是一次非常新奇的尝试，从此刻执笔写下这篇文章开始，我已经意识到这将是一个漫长的过程，也说明本篇的内容很长，对于我或是读者来说都是一段漫长的征途了。  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_2.png\" alt=\"网站主页\" title=\"网站主页\">  </p>\n<p>早在一年前我就搭建好了我的blog，并且购买并配置了域名，那时候我的blog一直都是在GitHub Pages上的，但是访问速度实在太慢，于是想到把blog部署到国内的服务器上，本篇文章记录的正是这个部署的过程。</p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><p>那首先我得有一台国内的服务器，因此我购买了一台云服务器ECS。</p>\n<blockquote>\n<p>服务器的操作系统是<strong>CentOS  7.9 64位</strong></p>\n</blockquote>\n<p>之后配置服务器的过程，因为不同的操作系统命令会有区别，还请读者根据自己的操作系统查询命令。</p>\n<h2 id=\"安装MATE桌面环境\"><a href=\"#安装MATE桌面环境\" class=\"headerlink\" title=\"安装MATE桌面环境\"></a>安装MATE桌面环境</h2><p><strong>这个环节是非必要的，读者可跳过，这只是我熟悉服务器的一个小过程。</strong>  </p>\n<p>1.执行以下命令，更新系统的软件包  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y upgrade<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.依次执行以下命令，安装MATE桌面环境<br><strong>之后会出现一些提示，都让他通过就行</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum groups install \"X Window System\"\nyum groups install \"MATE Desktop\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>3.设置默认使用图形化桌面环境启动实例</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl set-default graphical.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<p>4.执行以下命令重启ECS实例，也可以在控制台手动重启</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">reboot<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_7.png\" alt=\"控制台重启ECS\" title=\"控制台重启ECS\"></p>\n<p>5.之后通过ECS管理控制台的VNC连接实例就可以进入到图形界面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_8.png\" alt=\"VNC连接ECS\" title=\"VNC连接ECS\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_9.png\" alt=\"图形界面\" title=\"图形界面\"></p>\n<p>更多的详细过程可参考阿里云的文档：<br><a href=\"https://help.aliyun.com/document_detail/41227.html\">如何在Linux系统的ECS实例中安装图形界面</a></p>\n<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><blockquote>\n<p>Git 是分布式版本控制系统，有了它我们能很容易地进行主机与服务器的同步  </p>\n</blockquote>\n<p>1.首先查看服务器上是否有安装Git</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.执行以下命令安装Git</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后碰到提示直接输入y通过。安装完成会出现<strong>Complete!</strong>  </p>\n<p>3.执行以下命令创建一个Git用户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">useradd git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.设置Git账户的密码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">passwd git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_10.png\" alt=\"设置Git账户和密码\" title=\"设置Git账户和密码\"></p>\n<h2 id=\"配置ssh\"><a href=\"#配置ssh\" class=\"headerlink\" title=\"配置ssh\"></a>配置ssh</h2><blockquote>\n<p>要想实现主机和服务器的Git连接，我们需要给到服务器我们主机的密钥</p>\n</blockquote>\n<p>首先主机上要安装Git，主机Git的安装过程在此略过……<br>之前我一直都用着Git，所以已经配置过ssh，但为了温故而知新，咱们从头再来配置一遍。</p>\n<h3 id=\"生成ssh\"><a href=\"#生成ssh\" class=\"headerlink\" title=\"生成ssh\"></a>生成ssh</h3><p>1.我们在<strong>Desktop右键选择Git Bash Here</strong>，然后输入命令，引号内为你的Git用户名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --global user.name '用户名'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.输入邮箱</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --global user.email '邮箱'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后可以输入以下命令确认下账户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.输入以下命令生成ssh，遇到暂停输入的情况就按下回车</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -t rsa -C \"邮箱\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_11.png\" alt=\"配置ssh\" title=\"配置ssh\"><br><code>之后可以在C:\\Users\\用户名\\.ssh目录下看到ssh</code></p>\n<h3 id=\"更新Github的SSHkey\"><a href=\"#更新Github的SSHkey\" class=\"headerlink\" title=\"更新Github的SSHkey\"></a>更新Github的SSHkey</h3><p><strong>因为这里我们的ssh变了，所以Github上的ssh也应该重新设置下</strong>  </p>\n<p>登录Github，点击个人头像中的Settings，找到SSH and GPG keys，删除原来的SSH Keys，建立新的SSH Keys  </p>\n<p><strong>在ssh目录下找到id_rsa.pub</strong>，拷贝其中内容到GithubSSHkey中<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_12.png\" alt=\"Github的SSH keys\" title=\"Github的SSH keys\"></p>\n<p>OK，之后我们在使用Git管理你的Github仓库时就不会出问题了。</p>\n<h3 id=\"将公钥给服务器\"><a href=\"#将公钥给服务器\" class=\"headerlink\" title=\"将公钥给服务器\"></a>将公钥给服务器</h3><p>将公钥给到服务器，在ssh目录下右键选择Git Bash Here，输入以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-copy-id -i id_rsa.pub git@服务器IP地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>注：服务器IP地址为公网IP地址</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_13.png\" alt=\"将公钥给服务器\" title=\"将公钥给服务器\"></p>\n<p>好的，到这里我们的ssh全部完成，让我们回到服务器上。</p>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><blockquote>\n<p>Nginx是一个高性能的HTTP和反向代理服务器，我选择使用Nginx来作为web服务器。</p>\n</blockquote>\n<h3 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h3><p>1.执行以下命令安装Nginx，版本我选择了1.20.2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget http://nginx.org/download/nginx-1.20.2.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.安装依赖</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.上一步完成后，解压依赖</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -zxvf nginx-1.20.2.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.解压后进行配置，依次输入以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd nginx-1.20.2\n./configure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_14.png\" alt=\"配置Nginx\" title=\"配置Nginx\"><br>之后再依次输入以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make\nmake install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>到此Nginx就安装好了。</p>\n<h3 id=\"运行Nginx及欢迎页面问题\"><a href=\"#运行Nginx及欢迎页面问题\" class=\"headerlink\" title=\"运行Nginx及欢迎页面问题\"></a>运行Nginx及欢迎页面问题</h3><p>进入到nginx文件夹下的sbin目录启动nginx，依次执行以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx/sbin\n./nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_15.png\" alt=\"运行Nginx\" title=\"运行Nginx\"></p>\n<p>之后在浏览器输入服务器的公网IP地址，就会出现Nginx的欢迎页面  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_16.png\" alt=\"Nginx欢迎页面\" title=\"Nginx欢迎页面\"></p>\n<p>也有可能出现CentOS的欢迎页面  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_17.png\" alt=\"CentOS欢迎页面\" title=\"CentOS欢迎页面\"></p>\n<p><strong>关于出现Nginx或CentOS页面的问题，我当时在这卡了一段时间，因为我格式化过服务器，第一次安装Nginx时出现的是Nginx的欢迎页面，第二次安装Nginx就出现了CentOS的欢迎页面，我就以为Nginx没安装成功，但是查看Nginx的确实在运行，于是找了下问题所在：</strong></p>\n<blockquote>\n<p>检查了阿里云的安全组策略，Nginx的安装步骤，都没有发现问题，安装Nginx时阅读nginx.conf配置文件会发现欢迎页index.html文件路径。找到上面路径下的html文件，通过阅读发现这就是CentOS欢迎页面显示的内容，这证明安装Nginx的欢迎页已经不是Nginx欢迎页面了，所以我们的Nginx安装是完全正确的，只是显示页面改变了。</p>\n</blockquote>\n<h3 id=\"Nginx页面无法访问和服务器防火墙问题\"><a href=\"#Nginx页面无法访问和服务器防火墙问题\" class=\"headerlink\" title=\"Nginx页面无法访问和服务器防火墙问题\"></a>Nginx页面无法访问和服务器防火墙问题</h3><p>在面对防火墙之前，我们找到服务器的网络安全组，看一看有没有开放<strong>80端口</strong>，没有的话要添加一个。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_18.png\" alt=\"开放80端口\" title=\"开放80端口\"></p>\n<p>然后我们回到服务器。  </p>\n<p>1.查看防火墙状态</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --state<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果没有运行，执行以下命令运行起来</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl start firewalld.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再次查看防火墙的状态会显示 <code>running</code>  </p>\n<p>2.依次执行以下命令，手动开放80端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">iptables -I INPUT -p tcp --dport 80 -j ACCEPT\nfirewall-cmd --permanent --add-port=80/tcp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>出现<code>success</code><br>至此问题解决，可以正常访问Nginx欢迎页面。</p>\n<h2 id=\"创建blog仓库和部署\"><a href=\"#创建blog仓库和部署\" class=\"headerlink\" title=\"创建blog仓库和部署\"></a>创建blog仓库和部署</h2><p>到这一步可以说是万事俱备，只欠东风了，现在我们需要进行：  </p>\n<ol>\n<li>新建仓库用来存放网站的内容</li>\n<li>提交后把内容自动同步到站点目录</li>\n</ol>\n<h3 id=\"创建仓库\"><a href=\"#创建仓库\" class=\"headerlink\" title=\"创建仓库\"></a>创建仓库</h3><p>1.依次执行以下命令进入git目录，新建一个仓库</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /home/git\ngit init --bare blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>2.进入hooks文件夹</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd blog.git/\ncd hooks/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_19.png\" alt=\"创建仓库\" title=\"创建仓库\"></p>\n<h3 id=\"hooks\"><a href=\"#hooks\" class=\"headerlink\" title=\"hooks\"></a>hooks</h3><p><strong>Git 钩子：Git 钩子是每次在 Git 存储库中发生特定事件时自动运行的脚本。它们允许您自定义 Git 的内部行为，并在开发生命周期的关键点触发可自定义的操作。</strong></p>\n<ul>\n<li>Git 钩子(hooks)是在 Git 仓库中特定事件(certain points)触发后被调用的脚本。</li>\n<li>通过钩子可以自定义 Git 内部的相关（如 git push）行为，关键点（如 git push）触发自定义的行为。</li>\n<li>Git 含有两种类型的钩子：客户端的和服务器端。</li>\n<li>客户端钩子由诸如提交和合并这样的操作所调用，而服务器端钩子作用于接收部署提交的代码。实现服务器和本地的git互通。</li>\n</ul>\n<p>Git 钩子存在于每个 Git 仓库的 .git/hooks 目录中。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_20.png\" alt=\"Git 钩子\" title=\"Git 钩子\"></p>\n<p>1.编写post-receive脚本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vi post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输入i进入INSERT模式，内容如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!/bin/bash\n#nginx下html文件夹目录\nDIR=/usr/local/naginx/html\ngit --work-tree=${DIR} clean -fd\n#直接强制检出\ngit --work-tree=${DIR} checkout --force<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>写好后ESC退出INSERT模式，:wq保存退出</p>\n<p>2.授予运行权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod +x post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.授予git用户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chown -R git post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.给到一个读写的最高权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod 777 post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_21.png\"></p>\n<p>5.回到git目录下，给仓库同样的操作</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /home/git\nchmod 777 blog.git/\nchown -R git blog.git/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_22.png\"></p>\n<p>6.被同步的目录也需要授予最高权限和git用户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx\nchmod 777 html/\nchown -R git html/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_23.png\"></p>\n<h3 id=\"hexo配置\"><a href=\"#hexo配置\" class=\"headerlink\" title=\"hexo配置\"></a>hexo配置</h3><p>打开hexo的主配置文件，添加deploy仓库</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">type: git\nrepo: git@服务器IP地址:/home/git/blog.git\nbranch: master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_24.png\"></p>\n<h3 id=\"同步到服务器\"><a href=\"#同步到服务器\" class=\"headerlink\" title=\"同步到服务器\"></a>同步到服务器</h3><p>在本地blog文件夹下Git Bash Here，执行以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo clean\nhexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>完成后，输入服务器的IP地址就可以访问到网站了。  </p>\n<p>可以检查下服务器上是否有我们的博客文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx/html\nls<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>检查无误就大功告成了。</p>\n<h2 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>这一步是让我的域名绑定服务器，绑定之后就能以域名访问网站了。这一步很简单，只需要添加域名解析就行。  </p>\n<p><strong>这里添加两个记录：www和@，记录值都是服务器的IP地址</strong><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_25.png\" alt=\"域名解析\" title=\"域名解析\"></p>\n<h2 id=\"SSL证书\"><a href=\"#SSL证书\" class=\"headerlink\" title=\"SSL证书\"></a>SSL证书</h2><blockquote>\n<p>SSL 证书就是遵守 SSL 安全套接层协议的服务器数字证书。而 SSL 安全协议最初是由美国网景 Netscape Communication 公司设计开发的,全称为:安全套接层协议 (Secure Sockets Layer) , 它指定了在应用程序协议(如 HTTP、Telnet、FTP)和 TCP/IP 之间提供数据安全性 分层的机制,它是在传输通信协议(TCP/IP)上实现的一种安全协议,采用公开密钥技术,它为 TCP/IP 连接提供数据加密、服务器认证、消息完整性以及可选的客户机认证。由于此协议很好地解决了互联网明文传输的不安全问题,很快得到了业界的支持,并已经成为国际标准。SSL 证书由浏览器中“受信任的根证书颁发机构”在验证服务器身份后颁发,实现网站身份验证和加密传输功能。</p>\n</blockquote>\n<p>装载SSL证书产品后自动激活浏览器中显示“锁”型安全标志，地址栏以“https”开头。</p>\n<h3 id=\"获取SSL证书\"><a href=\"#获取SSL证书\" class=\"headerlink\" title=\"获取SSL证书\"></a>获取SSL证书</h3><p>获取的方式挺多，可以购买，也可以免费获取，我的证书是领的阿里云免费给的20张证书。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_26.png\" alt=\"免费的SSL证书\" title=\"免费的SSL证书\"></p>\n<h3 id=\"下载SSL证书\"><a href=\"#下载SSL证书\" class=\"headerlink\" title=\"下载SSL证书\"></a>下载SSL证书</h3><p>点击证书栏右侧“下载”，找到服务器类型Nginx下载。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_27.png\" alt=\"下载SSL证书\" title=\"下载SSL证书\"></p>\n<h3 id=\"传输到服务器\"><a href=\"#传输到服务器\" class=\"headerlink\" title=\"传输到服务器\"></a>传输到服务器</h3><p>下载后的证书是一个压缩包，解压后会有两个文件：**.key和.pem**  </p>\n<p>这里可以解压后传输到服务器，也可以把压缩包直接传输到服务器，但是需要在服务器上解压，所以服务器需要安装ZIP解压软件。这里我选择先解压再传输到服务器。  </p>\n<p>安装unzip</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install unzip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>1.在Nginx根目录下conf文件夹下创建存放证书的目录cert</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx/conf\nmkdir cert<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这里我选择先解压再传输到服务器。</p>\n<p>2.在ECS控制台发送.key和.pem文件，目标路径为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">/usr/local/nginx/conf/cert/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_29.png\"></p>\n<p>上传成功后，进入cert文件夹可以看到存在这两个文件了<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_30.png\"></p>\n<h3 id=\"修改-server\"><a href=\"#修改-server\" class=\"headerlink\" title=\"修改 server\"></a>修改 server</h3><p>1..返回conf文件夹编辑Nginx配置文件nginx.conf，修改与证书相关的配置，目的是打开443端口。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim nginx.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_28.png\"></p>\n<p>2.找到HTTPS server，<strong>将其内容解注释并修改</strong>。  </p>\n<p>以下步骤含错误示范，还请读者不要着急模仿，可以先去下面看一眼“<strong>重启失败解决方案</strong>”的内容，方便之后一步到位。  </p>\n<p>当然也可以跟着我的步骤来，之后修改错误。</p>\n<p>原来的HTTPS server内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># HTTPS server\n#\n# server {\n#     listen       443 ssl;\n#     server_name  localhost;\n\n\n#     ssl_certificate      cert.pem;\n#     ssl_certificate_key  cert.key;\n\n#     ssl_session_cache    shared:SSL:1m;\n#     ssl_session_timeout  5m;\n\n\n#     ssl_ciphers HIGH:!aNULL:!MD5;\n#     ssl_prefer_server_ciphers  on;\n\n#     location / {\n#         root   html;\n#         index  index.html index.htm;\n#     }\n#}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修改后的HTTPS server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTPS server\n   \nserver {\n    #HTTPS的默认访问端口为443\n    #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动\n    #如果使用Nginx 1.15.0及以上版本，请使用listen 443 ssl 代替listen 443和ssl on\n    listen       443 ssl;\n    #填写证书绑定的域名\n    server_name  www.invictusqiu.com;\n    root html;\n    index index.html index.htm;\n\n    #填写证书文件名称\n    ssl_certificate      cert/9575407_www.invictusqiu.com.pem;\n    ssl_certificate_key  cert/9575407_www.invictusqiu.com.key;\n\n    ssl_session_timeout  5m;\n\n    #表示使用的加密套件的类型\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    #表示使用的TLS协议的类型，需要自行评估是否配置TLSv1.1协议\n    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n    ssl_prefer_server_ciphers  on;\n\n    location / {\n    #Web网站程序存放目录\n        root   html;\n        index  index.html index.htm;\n    }\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>3.修改80端口server的内容</p>\n<p>原来80端口的server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server {\n    listen       80;\n    server_name  localhost;\n\n    #charset koi8-r;\n\n    #access_log  logs/host.access.log  main;\n\n    location / {\n        root   html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n    #后面内容可忽略\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>修改后的80端口server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server {\n    listen       80;\n    #填写证书绑定的域名\n    server_name  www.invictusqiu.com;\n    #将所有HTTP请求通过rewrite指令重定向到HTTPS。\n    rewrite ^(.*)$ https://$host$1;\n\n    #charset koi8-r;\n\n    #access_log  logs/host.access.log  main;\n\n    location / {\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n    #后面内容可忽略\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>服务器界面展示：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_31.png\" alt=\"443端口原来的server\" title=\"443端口原来的server\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_32.png\" alt=\"443端口现在的server\" title=\"443端口现在的server\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_33.png\" alt=\"80端口原来的server\" title=\"80端口原来的server\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_34.png\" alt=\"80端口现在的server\" title=\"80端口现在的server\"></p>\n<p><strong>修改完成后保存退出</strong></p>\n<h3 id=\"重启Nginx服务\"><a href=\"#重启Nginx服务\" class=\"headerlink\" title=\"重启Nginx服务\"></a>重启Nginx服务</h3><p>来到nginx的sbin目录执行重启命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx/sbin\n./nginx -s reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>发现报错：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_35.png\" alt=\"重启错误\" title=\"重启错误\"></p>\n<h3 id=\"重启失败解决方案\"><a href=\"#重启失败解决方案\" class=\"headerlink\" title=\"重启失败解决方案\"></a>重启失败解决方案</h3><p>好的，不论是跳转来这一步的朋友，还是跟着我步骤的朋友，<strong>现在看一看nginx.conf文件443端口那里的HTTPS server是不是注释掉的。</strong></p>\n<p>也就是如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># HTTPS server\n\n server {\n     listen       443 ssl;\n     server_name  localhost;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>还没修改server的朋友请注意不要将HTTPS server解注释。</strong>  </p>\n<p><strong>已经跟着我走的朋友请回去将其注释掉</strong>。  </p>\n<p>之后再次重启Nginx服务就成功了。</p>\n<h3 id=\"重启失败解决方案第二版\"><a href=\"#重启失败解决方案第二版\" class=\"headerlink\" title=\"重启失败解决方案第二版\"></a>重启失败解决方案第二版</h3><p>为什么有第二版解决方案呢，这版解决方案是针对：<br><strong>由于我们未装SSL模块，启动时，会提示nginx:[emerg]unknown directive ssl错误</strong>  </p>\n<p>因为我是先遇到第一版错误，不知道错哪了，查资料时干脆把这一版的解决方案先做了，到最后发现我并未存在此版错误，但我认为还是有必要提一下的。  </p>\n<p><strong>如果未做该版解决方案的朋友你跟着我前面的步骤很顺利的重启了，那么你可以跳过此小节到“放行443端口”。</strong>  </p>\n<p>好的，让我们看看这一错误该怎么解决。</p>\n<p>先执行<code>cd ~</code>  </p>\n<p>1.检查你是否安装了ssl模块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx\n./sbin/nginx -V<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如下图所示显示已经安装ssl模块则证明你不存在此版错误。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_36.png\" alt=\"存在ssl模块\" title=\"存在ssl模块\"></p>\n<p>2.如果没有ssl模块，我们先来到Nginx的解压目录，跟着我的步骤走的朋友路径如下，其他的朋友可能你的解压目录在/usr/local/nginx-1.20.2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd ~\ncd /root/nginx-1.20.2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_37.png\"></p>\n<p>3.添加ssl模块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">./configure --with-http_ssl_module<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.执行make命令，编译安装包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>5.查看objs文件夹下有一个nginx文件，这个就是新版程序，然后备份下之前的nginx</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>6.把编译好的nginx文件替换之前的</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp objs/nginx /usr/local/nginx/sbin/nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果无法替换，显示<br><code>cannot create regular file '/usr/local/nginx/sbin/nginx': Text file busy</code></p>\n<p>执行以下命令查看nginx进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -ef | grep nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现正在运行</p>\n<p>查看进程号，执行以下命令关闭nginx进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kill -QUIT 4809<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再次查看nginx进程，可以看到已经关闭，之后再次执行上面的替换命令，就能成功替换了。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_38.png\"></p>\n<p>7.最后查看下是否安装成功了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd /usr/local/nginx\n./sbin/nginx -V<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>显示有ssl模块，那么就证明我们安装成功了，之后就能正常重启nginx了。</p>\n<h3 id=\"放行443端口\"><a href=\"#放行443端口\" class=\"headerlink\" title=\"放行443端口\"></a>放行443端口</h3><p>1.执行以下命令查看443端口是否在运行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">netstat -nplt lgrep 443<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以看到正在运行<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_39.png\" alt=\"443端口正常运行\" title=\"443端口正常运行\"></p>\n<p>2.添加防火墙端口</p>\n<p>查看防火墙运行状态</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --state<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>显示<code>running</code>，则进入下一步。</p>\n<p>查看开放的端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --list-ports<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现没有443端口。</p>\n<p>添加443端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --zone=public --add-port=443/tcp --permanent<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>显示<code>success</code></p>\n<p>3.重新加载防火墙</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>显示<code>success</code></p>\n<p>再次查看开放的端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --list-ports<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以看到存在443端口。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_40.png\" alt=\"添加防火墙端口\" title=\"添加防火墙端口\"></p>\n<p>4.检查本地443端口加载的HTTPS服务以及证书是否正常，域名名称为你自己的域名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo | openssl s_client -connect 127.0.0.1:443 -servername invictusqiu.com 2&gt;/dev/null<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果出现<code>SSL-Session</code>表示HTTPS服务正常运行。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_41.png\" alt=\"SSL-Session\" title=\"SSL-Session\"></p>\n<p>5.进入ECS安全组策略<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_42.png\" alt=\"进入ECS安全组策略\" title=\"进入ECS安全组策略\"></p>\n<p>放行TCP协议443端口的入方向请求<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_43.png\" alt=\"放行443端口\" title=\"放行443端口\"></p>\n<p>6.执行curl命令，查询服务器响应header信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -l https://invictusqiu.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果显示HTTPS请求可以正常响应。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_44.png\" alt=\"响应header信息\" title=\"响应header信息\"></p>\n<p><strong>至此所有工作都完成了！</strong></p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>此番部署工作可谓是困难重重，在此途中卡了好多次，甚至一个重启nginx的问题都解决了好久，关于我是怎么知道HTTPS server需要注释掉的呢？在网上翻来覆去搞了半天，看到这个视频：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_45.png\"></p>\n<p>哈哈哈，找个错误CPU都干烧了，结果是这种错误。<br>这种 Error 可谓是读计算机专业家常便饭的事了。  </p>\n<p>最后分享一件事作为本篇文章的结尾：<br>  我一直很钦佩纯粹的人，特别是以具体的目光投射到他身上时也依然纯粹的人，但这样的人只是我心目中的理想化，我也只是追寻着“这类不存在的人”的脚步前进罢了。几天前跟朋友聊天，聊到了跟几年前的自己做对比。假如需要你去做一件短时间内几乎不可能完成的事，以至于需要“燃尽”自己，你还会去做吗？我不可否认，在塑造世界观的那个年纪，现实、电影、小说、电子游戏等都或多或少影响到过我的世界观。<br>  在几年前如果你问我这个问题，我的回答甚至偏向于“会”，但是现在我想还是算了罢，我想这就是现在的自己和几年前自己一个最大的对比。<br>  我并不是否认“会”这个选项，只是它<strong>现在</strong>不是最优解了。所以我为什么钦佩纯粹的人，是因为他们从不会因为“时态”而去改变自身的选择，这也是我为什么仅仅只是追随他们而不是成为他们的原因吧。  </p>\n<blockquote>\n<p>本章一句：<br>以我残躯化烈火。—— Cyberpunk 2077 隐藏结局</p>\n</blockquote>\n<h3 id=\"我们下期文章再见！\"><a href=\"#我们下期文章再见！\" class=\"headerlink\" title=\"我们下期文章再见！\"></a>我们下期文章再见！</h3>","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h2><p>这次的网站部署工作还挺不容易的，是一次非常新奇的尝试，从此刻执笔写下这篇文章开始，我已经意识到这将是一个漫长的过程，也说明本篇的内容很长，对于我或是读者来说都是一段漫长的征途了。  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_2.png\" alt=\"网站主页\" title=\"网站主页\">  </p>\n<p>早在一年前我就搭建好了我的blog，并且购买并配置了域名，那时候我的blog一直都是在GitHub Pages上的，但是访问速度实在太慢，于是想到把blog部署到国内的服务器上，本篇文章记录的正是这个部署的过程。</p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><p>那首先我得有一台国内的服务器，因此我购买了一台云服务器ECS。</p>\n<blockquote>\n<p>服务器的操作系统是<strong>CentOS  7.9 64位</strong></p>\n</blockquote>\n<p>之后配置服务器的过程，因为不同的操作系统命令会有区别，还请读者根据自己的操作系统查询命令。</p>\n<h2 id=\"安装MATE桌面环境\"><a href=\"#安装MATE桌面环境\" class=\"headerlink\" title=\"安装MATE桌面环境\"></a>安装MATE桌面环境</h2><p><strong>这个环节是非必要的，读者可跳过，这只是我熟悉服务器的一个小过程。</strong>  </p>\n<p>1.执行以下命令，更新系统的软件包  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y upgrade<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.依次执行以下命令，安装MATE桌面环境<br><strong>之后会出现一些提示，都让他通过就行</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum groups install &quot;X Window System&quot;\nyum groups install &quot;MATE Desktop&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>3.设置默认使用图形化桌面环境启动实例</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl set-default graphical.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<p>4.执行以下命令重启ECS实例，也可以在控制台手动重启</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">reboot<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_7.png\" alt=\"控制台重启ECS\" title=\"控制台重启ECS\"></p>\n<p>5.之后通过ECS管理控制台的VNC连接实例就可以进入到图形界面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_8.png\" alt=\"VNC连接ECS\" title=\"VNC连接ECS\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_9.png\" alt=\"图形界面\" title=\"图形界面\"></p>\n<p>更多的详细过程可参考阿里云的文档：<br><a href=\"https://help.aliyun.com/document_detail/41227.html\">如何在Linux系统的ECS实例中安装图形界面</a></p>\n<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><blockquote>\n<p>Git 是分布式版本控制系统，有了它我们能很容易地进行主机与服务器的同步  </p>\n</blockquote>\n<p>1.首先查看服务器上是否有安装Git</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.执行以下命令安装Git</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后碰到提示直接输入y通过。安装完成会出现<strong>Complete!</strong>  </p>\n<p>3.执行以下命令创建一个Git用户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">useradd git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.设置Git账户的密码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">passwd git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_10.png\" alt=\"设置Git账户和密码\" title=\"设置Git账户和密码\"></p>\n<h2 id=\"配置ssh\"><a href=\"#配置ssh\" class=\"headerlink\" title=\"配置ssh\"></a>配置ssh</h2><blockquote>\n<p>要想实现主机和服务器的Git连接，我们需要给到服务器我们主机的密钥</p>\n</blockquote>\n<p>首先主机上要安装Git，主机Git的安装过程在此略过……<br>之前我一直都用着Git，所以已经配置过ssh，但为了温故而知新，咱们从头再来配置一遍。</p>\n<h3 id=\"生成ssh\"><a href=\"#生成ssh\" class=\"headerlink\" title=\"生成ssh\"></a>生成ssh</h3><p>1.我们在<strong>Desktop右键选择Git Bash Here</strong>，然后输入命令，引号内为你的Git用户名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --global user.name &#39;用户名&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.输入邮箱</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --global user.email &#39;邮箱&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后可以输入以下命令确认下账户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.输入以下命令生成ssh，遇到暂停输入的情况就按下回车</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -t rsa -C &quot;邮箱&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_11.png\" alt=\"配置ssh\" title=\"配置ssh\"><br><code>之后可以在C:\\Users\\用户名\\.ssh目录下看到ssh</code></p>\n<h3 id=\"更新Github的SSHkey\"><a href=\"#更新Github的SSHkey\" class=\"headerlink\" title=\"更新Github的SSHkey\"></a>更新Github的SSHkey</h3><p><strong>因为这里我们的ssh变了，所以Github上的ssh也应该重新设置下</strong>  </p>\n<p>登录Github，点击个人头像中的Settings，找到SSH and GPG keys，删除原来的SSH Keys，建立新的SSH Keys  </p>\n<p><strong>在ssh目录下找到id_rsa.pub</strong>，拷贝其中内容到GithubSSHkey中<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_12.png\" alt=\"Github的SSH keys\" title=\"Github的SSH keys\"></p>\n<p>OK，之后我们在使用Git管理你的Github仓库时就不会出问题了。</p>\n<h3 id=\"将公钥给服务器\"><a href=\"#将公钥给服务器\" class=\"headerlink\" title=\"将公钥给服务器\"></a>将公钥给服务器</h3><p>将公钥给到服务器，在ssh目录下右键选择Git Bash Here，输入以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-copy-id -i id_rsa.pub git@服务器IP地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>注：服务器IP地址为公网IP地址</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_13.png\" alt=\"将公钥给服务器\" title=\"将公钥给服务器\"></p>\n<p>好的，到这里我们的ssh全部完成，让我们回到服务器上。</p>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><blockquote>\n<p>Nginx是一个高性能的HTTP和反向代理服务器，我选择使用Nginx来作为web服务器。</p>\n</blockquote>\n<h3 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h3><p>1.执行以下命令安装Nginx，版本我选择了1.20.2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.20.2.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.安装依赖</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum -y install gcc pcre-devel zlib-devel openssl openssl-devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.上一步完成后，解压依赖</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -zxvf nginx-1.20.2.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.解压后进行配置，依次输入以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd nginx-1.20.2\n.&#x2F;configure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_14.png\" alt=\"配置Nginx\" title=\"配置Nginx\"><br>之后再依次输入以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make\nmake install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>到此Nginx就安装好了。</p>\n<h3 id=\"运行Nginx及欢迎页面问题\"><a href=\"#运行Nginx及欢迎页面问题\" class=\"headerlink\" title=\"运行Nginx及欢迎页面问题\"></a>运行Nginx及欢迎页面问题</h3><p>进入到nginx文件夹下的sbin目录启动nginx，依次执行以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin\n.&#x2F;nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_15.png\" alt=\"运行Nginx\" title=\"运行Nginx\"></p>\n<p>之后在浏览器输入服务器的公网IP地址，就会出现Nginx的欢迎页面  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_16.png\" alt=\"Nginx欢迎页面\" title=\"Nginx欢迎页面\"></p>\n<p>也有可能出现CentOS的欢迎页面  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_17.png\" alt=\"CentOS欢迎页面\" title=\"CentOS欢迎页面\"></p>\n<p><strong>关于出现Nginx或CentOS页面的问题，我当时在这卡了一段时间，因为我格式化过服务器，第一次安装Nginx时出现的是Nginx的欢迎页面，第二次安装Nginx就出现了CentOS的欢迎页面，我就以为Nginx没安装成功，但是查看Nginx的确实在运行，于是找了下问题所在：</strong></p>\n<blockquote>\n<p>检查了阿里云的安全组策略，Nginx的安装步骤，都没有发现问题，安装Nginx时阅读nginx.conf配置文件会发现欢迎页index.html文件路径。找到上面路径下的html文件，通过阅读发现这就是CentOS欢迎页面显示的内容，这证明安装Nginx的欢迎页已经不是Nginx欢迎页面了，所以我们的Nginx安装是完全正确的，只是显示页面改变了。</p>\n</blockquote>\n<h3 id=\"Nginx页面无法访问和服务器防火墙问题\"><a href=\"#Nginx页面无法访问和服务器防火墙问题\" class=\"headerlink\" title=\"Nginx页面无法访问和服务器防火墙问题\"></a>Nginx页面无法访问和服务器防火墙问题</h3><p>在面对防火墙之前，我们找到服务器的网络安全组，看一看有没有开放<strong>80端口</strong>，没有的话要添加一个。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_18.png\" alt=\"开放80端口\" title=\"开放80端口\"></p>\n<p>然后我们回到服务器。  </p>\n<p>1.查看防火墙状态</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --state<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果没有运行，执行以下命令运行起来</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl start firewalld.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再次查看防火墙的状态会显示 <code>running</code>  </p>\n<p>2.依次执行以下命令，手动开放80端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">iptables -I INPUT -p tcp --dport 80 -j ACCEPT\nfirewall-cmd --permanent --add-port&#x3D;80&#x2F;tcp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>出现<code>success</code><br>至此问题解决，可以正常访问Nginx欢迎页面。</p>\n<h2 id=\"创建blog仓库和部署\"><a href=\"#创建blog仓库和部署\" class=\"headerlink\" title=\"创建blog仓库和部署\"></a>创建blog仓库和部署</h2><p>到这一步可以说是万事俱备，只欠东风了，现在我们需要进行：  </p>\n<ol>\n<li>新建仓库用来存放网站的内容</li>\n<li>提交后把内容自动同步到站点目录</li>\n</ol>\n<h3 id=\"创建仓库\"><a href=\"#创建仓库\" class=\"headerlink\" title=\"创建仓库\"></a>创建仓库</h3><p>1.依次执行以下命令进入git目录，新建一个仓库</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;home&#x2F;git\ngit init --bare blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>2.进入hooks文件夹</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd blog.git&#x2F;\ncd hooks&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_19.png\" alt=\"创建仓库\" title=\"创建仓库\"></p>\n<h3 id=\"hooks\"><a href=\"#hooks\" class=\"headerlink\" title=\"hooks\"></a>hooks</h3><p><strong>Git 钩子：Git 钩子是每次在 Git 存储库中发生特定事件时自动运行的脚本。它们允许您自定义 Git 的内部行为，并在开发生命周期的关键点触发可自定义的操作。</strong></p>\n<ul>\n<li>Git 钩子(hooks)是在 Git 仓库中特定事件(certain points)触发后被调用的脚本。</li>\n<li>通过钩子可以自定义 Git 内部的相关（如 git push）行为，关键点（如 git push）触发自定义的行为。</li>\n<li>Git 含有两种类型的钩子：客户端的和服务器端。</li>\n<li>客户端钩子由诸如提交和合并这样的操作所调用，而服务器端钩子作用于接收部署提交的代码。实现服务器和本地的git互通。</li>\n</ul>\n<p>Git 钩子存在于每个 Git 仓库的 .git/hooks 目录中。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_20.png\" alt=\"Git 钩子\" title=\"Git 钩子\"></p>\n<p>1.编写post-receive脚本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vi post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输入i进入INSERT模式，内容如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!&#x2F;bin&#x2F;bash\n#nginx下html文件夹目录\nDIR&#x3D;&#x2F;usr&#x2F;local&#x2F;naginx&#x2F;html\ngit --work-tree&#x3D;$&#123;DIR&#125; clean -fd\n#直接强制检出\ngit --work-tree&#x3D;$&#123;DIR&#125; checkout --force<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>写好后ESC退出INSERT模式，:wq保存退出</p>\n<p>2.授予运行权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod +x post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.授予git用户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chown -R git post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.给到一个读写的最高权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod 777 post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_21.png\"></p>\n<p>5.回到git目录下，给仓库同样的操作</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;home&#x2F;git\nchmod 777 blog.git&#x2F;\nchown -R git blog.git&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_22.png\"></p>\n<p>6.被同步的目录也需要授予最高权限和git用户</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx\nchmod 777 html&#x2F;\nchown -R git html&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_23.png\"></p>\n<h3 id=\"hexo配置\"><a href=\"#hexo配置\" class=\"headerlink\" title=\"hexo配置\"></a>hexo配置</h3><p>打开hexo的主配置文件，添加deploy仓库</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">type: git\nrepo: git@服务器IP地址:&#x2F;home&#x2F;git&#x2F;blog.git\nbranch: master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_24.png\"></p>\n<h3 id=\"同步到服务器\"><a href=\"#同步到服务器\" class=\"headerlink\" title=\"同步到服务器\"></a>同步到服务器</h3><p>在本地blog文件夹下Git Bash Here，执行以下命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo clean\nhexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>完成后，输入服务器的IP地址就可以访问到网站了。  </p>\n<p>可以检查下服务器上是否有我们的博客文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html\nls<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>检查无误就大功告成了。</p>\n<h2 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>这一步是让我的域名绑定服务器，绑定之后就能以域名访问网站了。这一步很简单，只需要添加域名解析就行。  </p>\n<p><strong>这里添加两个记录：www和@，记录值都是服务器的IP地址</strong><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_25.png\" alt=\"域名解析\" title=\"域名解析\"></p>\n<h2 id=\"SSL证书\"><a href=\"#SSL证书\" class=\"headerlink\" title=\"SSL证书\"></a>SSL证书</h2><blockquote>\n<p>SSL 证书就是遵守 SSL 安全套接层协议的服务器数字证书。而 SSL 安全协议最初是由美国网景 Netscape Communication 公司设计开发的,全称为:安全套接层协议 (Secure Sockets Layer) , 它指定了在应用程序协议(如 HTTP、Telnet、FTP)和 TCP/IP 之间提供数据安全性 分层的机制,它是在传输通信协议(TCP/IP)上实现的一种安全协议,采用公开密钥技术,它为 TCP/IP 连接提供数据加密、服务器认证、消息完整性以及可选的客户机认证。由于此协议很好地解决了互联网明文传输的不安全问题,很快得到了业界的支持,并已经成为国际标准。SSL 证书由浏览器中“受信任的根证书颁发机构”在验证服务器身份后颁发,实现网站身份验证和加密传输功能。</p>\n</blockquote>\n<p>装载SSL证书产品后自动激活浏览器中显示“锁”型安全标志，地址栏以“https”开头。</p>\n<h3 id=\"获取SSL证书\"><a href=\"#获取SSL证书\" class=\"headerlink\" title=\"获取SSL证书\"></a>获取SSL证书</h3><p>获取的方式挺多，可以购买，也可以免费获取，我的证书是领的阿里云免费给的20张证书。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_26.png\" alt=\"免费的SSL证书\" title=\"免费的SSL证书\"></p>\n<h3 id=\"下载SSL证书\"><a href=\"#下载SSL证书\" class=\"headerlink\" title=\"下载SSL证书\"></a>下载SSL证书</h3><p>点击证书栏右侧“下载”，找到服务器类型Nginx下载。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_27.png\" alt=\"下载SSL证书\" title=\"下载SSL证书\"></p>\n<h3 id=\"传输到服务器\"><a href=\"#传输到服务器\" class=\"headerlink\" title=\"传输到服务器\"></a>传输到服务器</h3><p>下载后的证书是一个压缩包，解压后会有两个文件：**.key和.pem**  </p>\n<p>这里可以解压后传输到服务器，也可以把压缩包直接传输到服务器，但是需要在服务器上解压，所以服务器需要安装ZIP解压软件。这里我选择先解压再传输到服务器。  </p>\n<p>安装unzip</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install unzip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>1.在Nginx根目录下conf文件夹下创建存放证书的目录cert</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf\nmkdir cert<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这里我选择先解压再传输到服务器。</p>\n<p>2.在ECS控制台发送.key和.pem文件，目标路径为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;cert&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_29.png\"></p>\n<p>上传成功后，进入cert文件夹可以看到存在这两个文件了<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_30.png\"></p>\n<h3 id=\"修改-server\"><a href=\"#修改-server\" class=\"headerlink\" title=\"修改 server\"></a>修改 server</h3><p>1..返回conf文件夹编辑Nginx配置文件nginx.conf，修改与证书相关的配置，目的是打开443端口。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim nginx.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_28.png\"></p>\n<p>2.找到HTTPS server，<strong>将其内容解注释并修改</strong>。  </p>\n<p>以下步骤含错误示范，还请读者不要着急模仿，可以先去下面看一眼“<strong>重启失败解决方案</strong>”的内容，方便之后一步到位。  </p>\n<p>当然也可以跟着我的步骤来，之后修改错误。</p>\n<p>原来的HTTPS server内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># HTTPS server\n#\n# server &#123;\n#     listen       443 ssl;\n#     server_name  localhost;\n\n\n#     ssl_certificate      cert.pem;\n#     ssl_certificate_key  cert.key;\n\n#     ssl_session_cache    shared:SSL:1m;\n#     ssl_session_timeout  5m;\n\n\n#     ssl_ciphers HIGH:!aNULL:!MD5;\n#     ssl_prefer_server_ciphers  on;\n\n#     location &#x2F; &#123;\n#         root   html;\n#         index  index.html index.htm;\n#     &#125;\n#&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修改后的HTTPS server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTPS server\n   \nserver &#123;\n    #HTTPS的默认访问端口为443\n    #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动\n    #如果使用Nginx 1.15.0及以上版本，请使用listen 443 ssl 代替listen 443和ssl on\n    listen       443 ssl;\n    #填写证书绑定的域名\n    server_name  www.invictusqiu.com;\n    root html;\n    index index.html index.htm;\n\n    #填写证书文件名称\n    ssl_certificate      cert&#x2F;9575407_www.invictusqiu.com.pem;\n    ssl_certificate_key  cert&#x2F;9575407_www.invictusqiu.com.key;\n\n    ssl_session_timeout  5m;\n\n    #表示使用的加密套件的类型\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    #表示使用的TLS协议的类型，需要自行评估是否配置TLSv1.1协议\n    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;\n\n    ssl_prefer_server_ciphers  on;\n\n    location &#x2F; &#123;\n    #Web网站程序存放目录\n        root   html;\n        index  index.html index.htm;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>3.修改80端口server的内容</p>\n<p>原来80端口的server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n    listen       80;\n    server_name  localhost;\n\n    #charset koi8-r;\n\n    #access_log  logs&#x2F;host.access.log  main;\n\n    location &#x2F; &#123;\n        root   html;\n        index  index.html index.htm;\n    &#125;\n\n    #error_page  404              &#x2F;404.html;\n\n    # redirect server error pages to the static page &#x2F;50x.html\n    #\n    error_page   500 502 503 504  &#x2F;50x.html;\n    location &#x3D; &#x2F;50x.html &#123;\n        root   html;\n    &#125;\n    #后面内容可忽略\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>修改后的80端口server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n    listen       80;\n    #填写证书绑定的域名\n    server_name  www.invictusqiu.com;\n    #将所有HTTP请求通过rewrite指令重定向到HTTPS。\n    rewrite ^(.*)$ https:&#x2F;&#x2F;$host$1;\n\n    #charset koi8-r;\n\n    #access_log  logs&#x2F;host.access.log  main;\n\n    location &#x2F; &#123;\n        index  index.html index.htm;\n    &#125;\n\n    #error_page  404              &#x2F;404.html;\n\n    # redirect server error pages to the static page &#x2F;50x.html\n    #\n    error_page   500 502 503 504  &#x2F;50x.html;\n    location &#x3D; &#x2F;50x.html &#123;\n        root   html;\n    &#125;\n    #后面内容可忽略\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>服务器界面展示：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_31.png\" alt=\"443端口原来的server\" title=\"443端口原来的server\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_32.png\" alt=\"443端口现在的server\" title=\"443端口现在的server\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_33.png\" alt=\"80端口原来的server\" title=\"80端口原来的server\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_34.png\" alt=\"80端口现在的server\" title=\"80端口现在的server\"></p>\n<p><strong>修改完成后保存退出</strong></p>\n<h3 id=\"重启Nginx服务\"><a href=\"#重启Nginx服务\" class=\"headerlink\" title=\"重启Nginx服务\"></a>重启Nginx服务</h3><p>来到nginx的sbin目录执行重启命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin\n.&#x2F;nginx -s reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>发现报错：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_35.png\" alt=\"重启错误\" title=\"重启错误\"></p>\n<h3 id=\"重启失败解决方案\"><a href=\"#重启失败解决方案\" class=\"headerlink\" title=\"重启失败解决方案\"></a>重启失败解决方案</h3><p>好的，不论是跳转来这一步的朋友，还是跟着我步骤的朋友，<strong>现在看一看nginx.conf文件443端口那里的HTTPS server是不是注释掉的。</strong></p>\n<p>也就是如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># HTTPS server\n\n server &#123;\n     listen       443 ssl;\n     server_name  localhost;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>还没修改server的朋友请注意不要将HTTPS server解注释。</strong>  </p>\n<p><strong>已经跟着我走的朋友请回去将其注释掉</strong>。  </p>\n<p>之后再次重启Nginx服务就成功了。</p>\n<h3 id=\"重启失败解决方案第二版\"><a href=\"#重启失败解决方案第二版\" class=\"headerlink\" title=\"重启失败解决方案第二版\"></a>重启失败解决方案第二版</h3><p>为什么有第二版解决方案呢，这版解决方案是针对：<br><strong>由于我们未装SSL模块，启动时，会提示nginx:[emerg]unknown directive ssl错误</strong>  </p>\n<p>因为我是先遇到第一版错误，不知道错哪了，查资料时干脆把这一版的解决方案先做了，到最后发现我并未存在此版错误，但我认为还是有必要提一下的。  </p>\n<p><strong>如果未做该版解决方案的朋友你跟着我前面的步骤很顺利的重启了，那么你可以跳过此小节到“放行443端口”。</strong>  </p>\n<p>好的，让我们看看这一错误该怎么解决。</p>\n<p>先执行<code>cd ~</code>  </p>\n<p>1.检查你是否安装了ssl模块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx\n.&#x2F;sbin&#x2F;nginx -V<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如下图所示显示已经安装ssl模块则证明你不存在此版错误。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_36.png\" alt=\"存在ssl模块\" title=\"存在ssl模块\"></p>\n<p>2.如果没有ssl模块，我们先来到Nginx的解压目录，跟着我的步骤走的朋友路径如下，其他的朋友可能你的解压目录在/usr/local/nginx-1.20.2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd ~\ncd &#x2F;root&#x2F;nginx-1.20.2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_37.png\"></p>\n<p>3.添加ssl模块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.&#x2F;configure --with-http_ssl_module<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.执行make命令，编译安装包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>5.查看objs文件夹下有一个nginx文件，这个就是新版程序，然后备份下之前的nginx</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx.bak<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>6.把编译好的nginx文件替换之前的</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp objs&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>如果无法替换，显示<br><code>cannot create regular file &#39;/usr/local/nginx/sbin/nginx&#39;: Text file busy</code></p>\n<p>执行以下命令查看nginx进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -ef | grep nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现正在运行</p>\n<p>查看进程号，执行以下命令关闭nginx进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kill -QUIT 4809<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再次查看nginx进程，可以看到已经关闭，之后再次执行上面的替换命令，就能成功替换了。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_38.png\"></p>\n<p>7.最后查看下是否安装成功了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;usr&#x2F;local&#x2F;nginx\n.&#x2F;sbin&#x2F;nginx -V<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>显示有ssl模块，那么就证明我们安装成功了，之后就能正常重启nginx了。</p>\n<h3 id=\"放行443端口\"><a href=\"#放行443端口\" class=\"headerlink\" title=\"放行443端口\"></a>放行443端口</h3><p>1.执行以下命令查看443端口是否在运行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">netstat -nplt lgrep 443<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以看到正在运行<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_39.png\" alt=\"443端口正常运行\" title=\"443端口正常运行\"></p>\n<p>2.添加防火墙端口</p>\n<p>查看防火墙运行状态</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --state<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>显示<code>running</code>，则进入下一步。</p>\n<p>查看开放的端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --list-ports<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现没有443端口。</p>\n<p>添加443端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --zone&#x3D;public --add-port&#x3D;443&#x2F;tcp --permanent<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>显示<code>success</code></p>\n<p>3.重新加载防火墙</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>显示<code>success</code></p>\n<p>再次查看开放的端口</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">firewall-cmd --list-ports<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以看到存在443端口。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_40.png\" alt=\"添加防火墙端口\" title=\"添加防火墙端口\"></p>\n<p>4.检查本地443端口加载的HTTPS服务以及证书是否正常，域名名称为你自己的域名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo | openssl s_client -connect 127.0.0.1:443 -servername invictusqiu.com 2&gt;&#x2F;dev&#x2F;null<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果出现<code>SSL-Session</code>表示HTTPS服务正常运行。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_41.png\" alt=\"SSL-Session\" title=\"SSL-Session\"></p>\n<p>5.进入ECS安全组策略<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_42.png\" alt=\"进入ECS安全组策略\" title=\"进入ECS安全组策略\"></p>\n<p>放行TCP协议443端口的入方向请求<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_43.png\" alt=\"放行443端口\" title=\"放行443端口\"></p>\n<p>6.执行curl命令，查询服务器响应header信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -l https:&#x2F;&#x2F;invictusqiu.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果显示HTTPS请求可以正常响应。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_44.png\" alt=\"响应header信息\" title=\"响应header信息\"></p>\n<p><strong>至此所有工作都完成了！</strong></p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>此番部署工作可谓是困难重重，在此途中卡了好多次，甚至一个重启nginx的问题都解决了好久，关于我是怎么知道HTTPS server需要注释掉的呢？在网上翻来覆去搞了半天，看到这个视频：<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/DeployBlog_45.png\"></p>\n<p>哈哈哈，找个错误CPU都干烧了，结果是这种错误。<br>这种 Error 可谓是读计算机专业家常便饭的事了。  </p>\n<p>最后分享一件事作为本篇文章的结尾：<br>&emsp;&emsp;我一直很钦佩纯粹的人，特别是以具体的目光投射到他身上时也依然纯粹的人，但这样的人只是我心目中的理想化，我也只是追寻着“这类不存在的人”的脚步前进罢了。几天前跟朋友聊天，聊到了跟几年前的自己做对比。假如需要你去做一件短时间内几乎不可能完成的事，以至于需要“燃尽”自己，你还会去做吗？我不可否认，在塑造世界观的那个年纪，现实、电影、小说、电子游戏等都或多或少影响到过我的世界观。<br>&emsp;&emsp;在几年前如果你问我这个问题，我的回答甚至偏向于“会”，但是现在我想还是算了罢，我想这就是现在的自己和几年前自己一个最大的对比。<br>&emsp;&emsp;我并不是否认“会”这个选项，只是它<strong>现在</strong>不是最优解了。所以我为什么钦佩纯粹的人，是因为他们从不会因为“时态”而去改变自身的选择，这也是我为什么仅仅只是追随他们而不是成为他们的原因吧。  </p>\n<blockquote>\n<p>本章一句：<br>以我残躯化烈火。—— Cyberpunk 2077 隐藏结局</p>\n</blockquote>\n<h3 id=\"我们下期文章再见！\"><a href=\"#我们下期文章再见！\" class=\"headerlink\" title=\"我们下期文章再见！\"></a>我们下期文章再见！</h3>"},{"title":"Markdown基本语法详细介绍","date":"2022-02-05T03:00:12.000Z","img":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/holmes.jpg","top":false,"cover":false,"coverImg":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/holmes.jpg","summary":"Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML文档","_content":"\nMarkdown是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML文档。\n\n# 一、标题\n\n在想要设置为标题的文字前加#来表示。  \n\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。  \n\n注：标准语法要在#后面跟一个空格再写文字。\n\n示例：\n```\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n效果如下：  \n\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题  \n\n\n# 二、字体\n- **加粗**  \n\n  要加粗的文字左右分别用两个*号包起来  \n\n- **斜体**\n  \n  要倾斜的文字左右分别用一个*号包起来  \n\n- **斜体加粗**  \n  \n  要倾斜和加粗的文字左右分别用三个*号包起来  \n\n- **删除线**  \n\n  要加删除线的文字左右分别用两个~~号包起来  \n\n示例：\n```\n**这是加粗的文字**\n*这是倾斜的文字*\n***这是倾斜加粗的文字***\n~~这是加删除线的文字~~\n```\n效果如下：\n  \n**这是加粗的文字**  \n*这是倾斜的文字*  \n***这是倾斜加粗的文字***  \n~~这是加删除线的文字~~\n\n# 三、引用\n\n在引用的文字前加>即可。引用可以嵌套，如加两个>>三个>>>  \nn个...  \n\n示例：\n```\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n```\n效果如下：\n>这是引用的内容\n\n# 四、分割线\n三个或者三个以上的-或者*都可以。  \n\n示例：\n```\n---\n----\n***\n*****\n```\n效果如下：  \n可以看到，显示效果是一样的。\n\n---\n----\n***\n*****\n\n# 五、图片\n语法：\n```\n![图片alt](图片地址\"图片title\")\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加。\n```\n示例：\n```\n![岩田聪](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg \"岩田聪\")\n```\n效果如下：  \n\n![岩田聪](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg \"岩田聪\")\n\n**上传本地图片直接点击导航栏的图片标志，选择图片即可**  \n\nmarkdown格式追求的是简单、多平台统一。这里我用到的是基于阿里云OSS个人搭建的图床。\n\n# 六、超链接\n\n语法：\n\n```\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n```\n\n示例：\n\n```\n[我的github主页](https://github.com/InvictusEd)\n[我的个人博客网站](https://invictusqiu.com/)\n```\n\n效果如下：  \n\n[我的github主页](https://github.com/InvictusEd)  \n[我的个人博客网站](https://invictusqiu.com/)\n\n# 七、列表\n\n**无序列表**  \n\n语法：  \n无序列表用-+*任何一种都可以\n\n示例：\n```\n- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格\n```\n\n效果如下:  \n- 列表内容\n+ 列表内容\n* 列表内容\n\n**有序列表**  \n\n语法：  \n数字加点\n\n```\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格\n```\n\n效果如下：\n\n1. 列表内容\n2. 列表内容\n3. 列表内容  \n\n**列表嵌套**  \n\n**上一级和下一级之间敲三个空格即可**\n\n- 一级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n\n- 一级无序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n1. 一级有序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n\n2. 一级有序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n\n# 八、表格\n\n语法：\n```\n|表头|表头|表头|\n|---|:--:|---:|\n|内容|内容|内容|\n|内容|内容|内容|\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n- 两边加:表示文字居中\n- 右边加:表示文字居右\n```\n\n示例：\n```\n|姓名|技能|排行|\n|---|:--:|---:|\n|刘备|哭|大哥|\n|关羽|打|二哥|\n|张飞|骂|三弟|\n```\n效果如下：  \n\n|姓名|技能|排行|\n|---|:--:|---:|\n|刘备|哭|大哥|\n|关羽|打|二哥|\n|张飞|骂|三弟|\n\n>因网站主题限制，表格文字暂且只能靠左对齐。\n\n# 九、代码\n\n语法：  \n单行代码：代码之间分别用一个反引号包起来\n```\n`代码内容`\n```\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n```\n(```)\n    代码...\n    代码...\n    代码...\n(```)\n```\n>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。\n\n示例：  \n\n单行代码\n```\n`create database hero`\n```\n代码块\n```\n(```)\n    function fun(){\n        echo \"这是一句非常牛逼的代码\";\n    }\n    fun();\n(```)\n```\n\n效果如下：  \n\n单行代码  \n`create database hero`\n\n代码块\n```\nfunction fun(){\n    echo \"这是一句非常牛逼的代码\";\n}\nfun();\n```\n\n>**本文章参考   \n>简书：[高鸿祥《Markdown基本语法》](https://www.jianshu.com/p/191d1e21f7ed/)**","source":"_posts/MarkdownSyntax.md","raw":"---\ntitle: Markdown基本语法详细介绍\ndate: 2022-02-05 11:00:12\nimg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/holmes.jpg\ntop: false\ncover: false\ncoverImg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/holmes.jpg\nsummary: Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML文档\ncategories: Makrdown\ntags:\n    - Markdown\n---\n\nMarkdown是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML文档。\n\n# 一、标题\n\n在想要设置为标题的文字前加#来表示。  \n\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。  \n\n注：标准语法要在#后面跟一个空格再写文字。\n\n示例：\n```\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n\n效果如下：  \n\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题  \n\n\n# 二、字体\n- **加粗**  \n\n  要加粗的文字左右分别用两个*号包起来  \n\n- **斜体**\n  \n  要倾斜的文字左右分别用一个*号包起来  \n\n- **斜体加粗**  \n  \n  要倾斜和加粗的文字左右分别用三个*号包起来  \n\n- **删除线**  \n\n  要加删除线的文字左右分别用两个~~号包起来  \n\n示例：\n```\n**这是加粗的文字**\n*这是倾斜的文字*\n***这是倾斜加粗的文字***\n~~这是加删除线的文字~~\n```\n效果如下：\n  \n**这是加粗的文字**  \n*这是倾斜的文字*  \n***这是倾斜加粗的文字***  \n~~这是加删除线的文字~~\n\n# 三、引用\n\n在引用的文字前加>即可。引用可以嵌套，如加两个>>三个>>>  \nn个...  \n\n示例：\n```\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n```\n效果如下：\n>这是引用的内容\n\n# 四、分割线\n三个或者三个以上的-或者*都可以。  \n\n示例：\n```\n---\n----\n***\n*****\n```\n效果如下：  \n可以看到，显示效果是一样的。\n\n---\n----\n***\n*****\n\n# 五、图片\n语法：\n```\n![图片alt](图片地址\"图片title\")\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加。\n```\n示例：\n```\n![岩田聪](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg \"岩田聪\")\n```\n效果如下：  \n\n![岩田聪](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg \"岩田聪\")\n\n**上传本地图片直接点击导航栏的图片标志，选择图片即可**  \n\nmarkdown格式追求的是简单、多平台统一。这里我用到的是基于阿里云OSS个人搭建的图床。\n\n# 六、超链接\n\n语法：\n\n```\n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n```\n\n示例：\n\n```\n[我的github主页](https://github.com/InvictusEd)\n[我的个人博客网站](https://invictusqiu.com/)\n```\n\n效果如下：  \n\n[我的github主页](https://github.com/InvictusEd)  \n[我的个人博客网站](https://invictusqiu.com/)\n\n# 七、列表\n\n**无序列表**  \n\n语法：  \n无序列表用-+*任何一种都可以\n\n示例：\n```\n- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格\n```\n\n效果如下:  \n- 列表内容\n+ 列表内容\n* 列表内容\n\n**有序列表**  \n\n语法：  \n数字加点\n\n```\n1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格\n```\n\n效果如下：\n\n1. 列表内容\n2. 列表内容\n3. 列表内容  \n\n**列表嵌套**  \n\n**上一级和下一级之间敲三个空格即可**\n\n- 一级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n\n- 一级无序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n1. 一级有序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n   - 二级无序列表内容\n\n2. 一级有序列表内容\n   1. 二级有序列表内容\n   2. 二级有序列表内容\n   3. 二级有序列表内容\n\n\n# 八、表格\n\n语法：\n```\n|表头|表头|表头|\n|---|:--:|---:|\n|内容|内容|内容|\n|内容|内容|内容|\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n- 两边加:表示文字居中\n- 右边加:表示文字居右\n```\n\n示例：\n```\n|姓名|技能|排行|\n|---|:--:|---:|\n|刘备|哭|大哥|\n|关羽|打|二哥|\n|张飞|骂|三弟|\n```\n效果如下：  \n\n|姓名|技能|排行|\n|---|:--:|---:|\n|刘备|哭|大哥|\n|关羽|打|二哥|\n|张飞|骂|三弟|\n\n>因网站主题限制，表格文字暂且只能靠左对齐。\n\n# 九、代码\n\n语法：  \n单行代码：代码之间分别用一个反引号包起来\n```\n`代码内容`\n```\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n```\n(```)\n    代码...\n    代码...\n    代码...\n(```)\n```\n>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。\n\n示例：  \n\n单行代码\n```\n`create database hero`\n```\n代码块\n```\n(```)\n    function fun(){\n        echo \"这是一句非常牛逼的代码\";\n    }\n    fun();\n(```)\n```\n\n效果如下：  \n\n单行代码  \n`create database hero`\n\n代码块\n```\nfunction fun(){\n    echo \"这是一句非常牛逼的代码\";\n}\nfun();\n```\n\n>**本文章参考   \n>简书：[高鸿祥《Markdown基本语法》](https://www.jianshu.com/p/191d1e21f7ed/)**","slug":"MarkdownSyntax","published":1,"updated":"2024-09-20T08:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1bsqfjs0009esty7c355b6x","content":"<p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML文档。</p>\n<h1 id=\"一、标题\"><a href=\"#一、标题\" class=\"headerlink\" title=\"一、标题\"></a>一、标题</h1><p>在想要设置为标题的文字前加#来表示。  </p>\n<p>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。  </p>\n<p>注：标准语法要在#后面跟一个空格再写文字。</p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下：  </p>\n<h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"这是二级标题\"><a href=\"#这是二级标题\" class=\"headerlink\" title=\"这是二级标题\"></a>这是二级标题</h2><h3 id=\"这是三级标题\"><a href=\"#这是三级标题\" class=\"headerlink\" title=\"这是三级标题\"></a>这是三级标题</h3><h4 id=\"这是四级标题\"><a href=\"#这是四级标题\" class=\"headerlink\" title=\"这是四级标题\"></a>这是四级标题</h4><h5 id=\"这是五级标题\"><a href=\"#这是五级标题\" class=\"headerlink\" title=\"这是五级标题\"></a>这是五级标题</h5><h6 id=\"这是六级标题\"><a href=\"#这是六级标题\" class=\"headerlink\" title=\"这是六级标题\"></a>这是六级标题</h6><h1 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h1><ul>\n<li><p><strong>加粗</strong>  </p>\n<p>要加粗的文字左右分别用两个*号包起来  </p>\n</li>\n<li><p><strong>斜体</strong></p>\n<p>要倾斜的文字左右分别用一个*号包起来  </p>\n</li>\n<li><p><strong>斜体加粗</strong>  </p>\n<p>要倾斜和加粗的文字左右分别用三个*号包起来  </p>\n</li>\n<li><p><strong>删除线</strong>  </p>\n<p>要加删除线的文字左右分别用两个~~号包起来  </p>\n</li>\n</ul>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">**这是加粗的文字**\n*这是倾斜的文字*\n***这是倾斜加粗的文字***\n~~这是加删除线的文字~~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：</p>\n<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br><em><strong>这是倾斜加粗的文字</strong></em><br><del>这是加删除线的文字</del></p>\n<h1 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…  </p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&gt;这是引用的内容\n&gt;&gt;这是引用的内容\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：</p>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n<h1 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h1><p>三个或者三个以上的-或者*都可以。  </p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">---\n----\n***\n*****<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：<br>可以看到，显示效果是一样的。</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<h1 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h1><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">![图片alt](图片地址\"图片title\")\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">![岩田聪](https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg \"岩田聪\")<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>效果如下：  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg\" alt=\"岩田聪\" title=\"岩田聪\"></p>\n<p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong>  </p>\n<p>markdown格式追求的是简单、多平台统一。这里我用到的是基于阿里云OSS个人搭建的图床。</p>\n<h1 id=\"六、超链接\"><a href=\"#六、超链接\" class=\"headerlink\" title=\"六、超链接\"></a>六、超链接</h1><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[我的github主页](https://github.com/InvictusEd)\n[我的个人博客网站](https://invictusqiu.com/)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>效果如下：  </p>\n<p><a href=\"https://github.com/InvictusEd\">我的github主页</a><br><a href=\"https://invictusqiu.com/\">我的个人博客网站</a></p>\n<h1 id=\"七、列表\"><a href=\"#七、列表\" class=\"headerlink\" title=\"七、列表\"></a>七、列表</h1><p><strong>无序列表</strong>  </p>\n<p>语法：<br>无序列表用-+*任何一种都可以</p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下:  </p>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n<p><strong>有序列表</strong>  </p>\n<p>语法：<br>数字加点</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下：</p>\n<ol>\n<li>列表内容</li>\n<li>列表内容</li>\n<li>列表内容  </li>\n</ol>\n<p><strong>列表嵌套</strong>  </p>\n<p><strong>上一级和下一级之间敲三个空格即可</strong></p>\n<ul>\n<li><p>一级无序列表内容</p>\n<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li><p>一级无序列表内容</p>\n<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li><p>一级有序列表内容</p>\n<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li><p>一级有序列表内容</p>\n<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h1><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">|表头|表头|表头|\n|---|:--:|---:|\n|内容|内容|内容|\n|内容|内容|内容|\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n- 两边加:表示文字居中\n- 右边加:表示文字居右<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">|姓名|技能|排行|\n|---|:--:|---:|\n|刘备|哭|大哥|\n|关羽|打|二哥|\n|张飞|骂|三弟|<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：  </p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th align=\"center\">技能</th>\n<th align=\"right\">排行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>刘备</td>\n<td align=\"center\">哭</td>\n<td align=\"right\">大哥</td>\n</tr>\n<tr>\n<td>关羽</td>\n<td align=\"center\">打</td>\n<td align=\"right\">二哥</td>\n</tr>\n<tr>\n<td>张飞</td>\n<td align=\"center\">骂</td>\n<td align=\"right\">三弟</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>因网站主题限制，表格文字暂且只能靠左对齐。</p>\n</blockquote>\n<h1 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h1><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">`代码内容`<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(```)\n    代码...\n    代码...\n    代码...\n(```)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p>\n</blockquote>\n<p>示例：  </p>\n<p>单行代码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">`create database hero`<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>代码块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(```)\n    function fun(){\n        echo \"这是一句非常牛逼的代码\";\n    }\n    fun();\n(```)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下：  </p>\n<p>单行代码<br><code>create database hero</code></p>\n<p>代码块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">function fun(){\n    echo \"这是一句非常牛逼的代码\";\n}\nfun();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><strong>本文章参考<br>简书：<a href=\"https://www.jianshu.com/p/191d1e21f7ed/\">高鸿祥《Markdown基本语法》</a></strong></p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML文档。</p>\n<h1 id=\"一、标题\"><a href=\"#一、标题\" class=\"headerlink\" title=\"一、标题\"></a>一、标题</h1><p>在想要设置为标题的文字前加#来表示。  </p>\n<p>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。  </p>\n<p>注：标准语法要在#后面跟一个空格再写文字。</p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下：  </p>\n<h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"这是二级标题\"><a href=\"#这是二级标题\" class=\"headerlink\" title=\"这是二级标题\"></a>这是二级标题</h2><h3 id=\"这是三级标题\"><a href=\"#这是三级标题\" class=\"headerlink\" title=\"这是三级标题\"></a>这是三级标题</h3><h4 id=\"这是四级标题\"><a href=\"#这是四级标题\" class=\"headerlink\" title=\"这是四级标题\"></a>这是四级标题</h4><h5 id=\"这是五级标题\"><a href=\"#这是五级标题\" class=\"headerlink\" title=\"这是五级标题\"></a>这是五级标题</h5><h6 id=\"这是六级标题\"><a href=\"#这是六级标题\" class=\"headerlink\" title=\"这是六级标题\"></a>这是六级标题</h6><h1 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h1><ul>\n<li><p><strong>加粗</strong>  </p>\n<p>要加粗的文字左右分别用两个*号包起来  </p>\n</li>\n<li><p><strong>斜体</strong></p>\n<p>要倾斜的文字左右分别用一个*号包起来  </p>\n</li>\n<li><p><strong>斜体加粗</strong>  </p>\n<p>要倾斜和加粗的文字左右分别用三个*号包起来  </p>\n</li>\n<li><p><strong>删除线</strong>  </p>\n<p>要加删除线的文字左右分别用两个~~号包起来  </p>\n</li>\n</ul>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">**这是加粗的文字**\n*这是倾斜的文字*\n***这是倾斜加粗的文字***\n~~这是加删除线的文字~~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：</p>\n<p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br><em><strong>这是倾斜加粗的文字</strong></em><br><del>这是加删除线的文字</del></p>\n<h1 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…  </p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&gt;这是引用的内容\n&gt;&gt;这是引用的内容\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：</p>\n<blockquote>\n<p>这是引用的内容</p>\n</blockquote>\n<h1 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h1><p>三个或者三个以上的-或者*都可以。  </p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">---\n----\n***\n*****<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：<br>可以看到，显示效果是一样的。</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<h1 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h1><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">![图片alt](图片地址&quot;图片title&quot;)\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">![岩田聪](https:&#x2F;&#x2F;invictusqiu.oss-cn-beijing.aliyuncs.com&#x2F;yantiancong.jpg &quot;岩田聪&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>效果如下：  </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/yantiancong.jpg\" alt=\"岩田聪\" title=\"岩田聪\"></p>\n<p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong>  </p>\n<p>markdown格式追求的是简单、多平台统一。这里我用到的是基于阿里云OSS个人搭建的图床。</p>\n<h1 id=\"六、超链接\"><a href=\"#六、超链接\" class=\"headerlink\" title=\"六、超链接\"></a>六、超链接</h1><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[超链接名](超链接地址 &quot;超链接title&quot;)\ntitle可加可不加<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[我的github主页](https:&#x2F;&#x2F;github.com&#x2F;InvictusEd)\n[我的个人博客网站](https:&#x2F;&#x2F;invictusqiu.com&#x2F;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>效果如下：  </p>\n<p><a href=\"https://github.com/InvictusEd\">我的github主页</a><br><a href=\"https://invictusqiu.com/\">我的个人博客网站</a></p>\n<h1 id=\"七、列表\"><a href=\"#七、列表\" class=\"headerlink\" title=\"七、列表\"></a>七、列表</h1><p><strong>无序列表</strong>  </p>\n<p>语法：<br>无序列表用-+*任何一种都可以</p>\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">- 列表内容\n+ 列表内容\n* 列表内容\n\n注意：- + * 跟内容之间都要有一个空格<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下:  </p>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n<ul>\n<li>列表内容</li>\n</ul>\n<p><strong>有序列表</strong>  </p>\n<p>语法：<br>数字加点</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 列表内容\n2. 列表内容\n3. 列表内容\n\n注意：序号跟内容之间要有空格<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下：</p>\n<ol>\n<li>列表内容</li>\n<li>列表内容</li>\n<li>列表内容  </li>\n</ol>\n<p><strong>列表嵌套</strong>  </p>\n<p><strong>上一级和下一级之间敲三个空格即可</strong></p>\n<ul>\n<li><p>一级无序列表内容</p>\n<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li><p>一级无序列表内容</p>\n<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li><p>一级有序列表内容</p>\n<ul>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n<li>二级无序列表内容</li>\n</ul>\n</li>\n<li><p>一级有序列表内容</p>\n<ol>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n<li>二级有序列表内容</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h1><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">|表头|表头|表头|\n|---|:--:|---:|\n|内容|内容|内容|\n|内容|内容|内容|\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n- 两边加:表示文字居中\n- 右边加:表示文字居右<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">|姓名|技能|排行|\n|---|:--:|---:|\n|刘备|哭|大哥|\n|关羽|打|二哥|\n|张飞|骂|三弟|<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>效果如下：  </p>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th align=\"center\">技能</th>\n<th align=\"right\">排行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>刘备</td>\n<td align=\"center\">哭</td>\n<td align=\"right\">大哥</td>\n</tr>\n<tr>\n<td>关羽</td>\n<td align=\"center\">打</td>\n<td align=\"right\">二哥</td>\n</tr>\n<tr>\n<td>张飞</td>\n<td align=\"center\">骂</td>\n<td align=\"right\">三弟</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>因网站主题限制，表格文字暂且只能靠左对齐。</p>\n</blockquote>\n<h1 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h1><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#96;代码内容&#96;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&#96;&#96;&#96;)\n    代码...\n    代码...\n    代码...\n(&#96;&#96;&#96;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p>\n</blockquote>\n<p>示例：  </p>\n<p>单行代码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#96;create database hero&#96;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>代码块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&#96;&#96;&#96;)\n    function fun()&#123;\n        echo &quot;这是一句非常牛逼的代码&quot;;\n    &#125;\n    fun();\n(&#96;&#96;&#96;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>效果如下：  </p>\n<p>单行代码<br><code>create database hero</code></p>\n<p>代码块</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">function fun()&#123;\n    echo &quot;这是一句非常牛逼的代码&quot;;\n&#125;\nfun();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p><strong>本文章参考<br>简书：<a href=\"https://www.jianshu.com/p/191d1e21f7ed/\">高鸿祥《Markdown基本语法》</a></strong></p>\n</blockquote>\n"},{"title":"毕业设计——在线教育平台","date":"2024-05-27T11:04:00.000Z","img":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/Home.jpg","top":true,"cover":false,"coverImg":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/Home.jpg","summary":"在线教育平台是我的毕业设计，本篇文章用于总结整个项目的开发过程，以及项目的功能和技术栈","_content":"\n## 开篇\n由于在开发该系统时，并未有书写开发文档的经验，而仅仅是记录了每一天的开发日志，但开发日志多达21篇，因此把所有开发日志放在博客当中是影响读者观感的，因此本篇文章仅仅是作为总结，如果有具体需要，请联系我，或者访问我的GitHub仓库或百度云盘。\n\n## 项目简介\n在线教育平台采用B2C模式，Spring Cloud搭建整个微服务架构，后台采用Spring Boot+MySQL+MyBatis-Plus+Redis，并且结合Vue前端框架，采用Nuxt服务端渲染技术来优化前端页面，运用阿里云视频点播技术。在管理系统的后台中，运用Spring Security进行用户认证和授权，以确保对不同用户权限的细致划分。在用户的登录系统方面，则采纳了手机验证码注册和登录方式，并运用JWT生成Token以实现便捷的单点登录。此外，用户通过微信支付来进行课程购买。\n\n## 技术栈\n\n### 后端\n- Spring Boot\n- Spring Cloud\n- MySQL\n- MyBatis-Plus\n- Redis\n- Spring Security\n- EasyExcel\n\n### 前端\n- Vue\n- Nuxt\n- ElementUI\n- Axios\n- ECharts\n\n## 后台管理系统\n在线教育平台后台管理系统的前端使用的是vue-admin-template模板\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/BackendLogin.jpg)\n### 讲师管理\n对讲师进行增删改查操作，后端集成了阿里云OSS，用于讲师头像的上传。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/AdminTeachers.png)\n**开发中值得一提的：**  \nvue-router导航切换 时，如果两个路由都渲染同个组件，组件会重（chong）用,  \n组件的生命周期钩子（created）不会再被调用, 使得组件的一些数据无法根据 path的改变得到更新  \n因此：  \n1、我们可以在watch中监听路由的变化，当路由变化时，重新调用created中的内容  \n2、在init方法中我们判断路由的变化，如果是修改路由，则从api获取表单数据，  \n\n如果是新增路由，则重新初始化表单数据\n```js\nwatch: { // 监听\n    $route(to, from) { // 路由变化方式，路由发生变化，方法就会执行\n      this.init()\n    }\n  },\n  created() { // 页面渲染之前执行\n    this.init()\n  },\n  methods: {\n    init() {\n      // 判断路径是否有id值\n      if (this.$route.params && this.$route.params.id) {\n        // 从路径获取id值\n        const id = this.$route.params.id\n        // 调用根据id查询的方法\n        this.getInfo(id)\n      } else { // 路径没有id值，做添加\n        // 清空表单\n        this.teacher = {}\n      }\n    },\n```\n### 课程分类管理\n前端上传课程Excel表格，后端通过EasyExcel来处理表格并将其持久化存储于数据库中。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseExcel.png)\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseCategory.png)\n### 课程管理\n可以查看课程详细信息并管理课程，如果是发布课程需要进行三个步骤，分别是“填写课程基本信息”、“创建课程大纲”、“最终发布”，需要按照该执行顺序去操作才能完整发布课程。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseAdmin.png)\n**值得一提的是课程视频上传的实现**  \n1. 引入依赖  \n引入依赖存在问题\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/DependencyProblem.png)\nmvn需要配置环境变量，这样才能在命令行中使用mvn命令\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/MavenPath.png)\n上传视频  \n参考官网压缩包里面的sample示例代码改造\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/ExampleCode.png)\n```java\npublic static void main(String[] args) {\n        String accessKeyId = \"\";\n        String accessKeySecret = \"\";\n\n        String title = \"6 - How Does Project Submission Work - upload by sdk\";  // 上传之后文件名称\n        String fileName = \"E:\\\\6 - What If I Want to Move Faster.mp4\";   // 本地文件路径和名称\n\n        // 上传视频的方法\n        UploadVideoRequest request = new UploadVideoRequest(accessKeyId, accessKeySecret, title, fileName);\n        /* 可指定分片上传时每个分片的大小，默认为2M字节 */\n        request.setPartSize(2 * 1024 * 1024L);\n        /* 可指定分片上传时的并发线程数，默认为1，(注：该配置会占用服务器CPU资源，需根据服务器情况指定）*/\n        request.setTaskNum(1);\n        UploadVideoImpl uploader = new UploadVideoImpl();\n        UploadVideoResponse response = uploader.uploadVideo(request);\n\n        if (response.isSuccess()) {\n            System.out.print(\"VideoId=\" + response.getVideoId() + \"\\n\");\n        } else {\n            /* 如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因 */\n            System.out.print(\"VideoId=\" + response.getVideoId() + \"\\n\");\n            System.out.print(\"ErrorCode=\" + response.getCode() + \"\\n\");\n            System.out.print(\"ErrorMessage=\" + response.getMessage() + \"\\n\");\n        }\n    }\n```\n2. 配置文件\n```yml\n# 服务端口\nserver:\n  port: 8082\n\nspring:\n  application:\n    # 服务名\n    name: service-vod\n  profiles:\n    # 环境设置：dev、test、prod\n    active: dev\n  servlet:\n    multipart:\n      # 最大上传单个文件大小：默认1M\n      max-file-size: 1024MB\n      # 最大总上传的数据大小：默认10MB\n      max-request-size: 1024MB\n\n# 阿里云 vod\n# 不同的服务器，地址不同\naliyun:\n  vod:\n    file:\n      keyid: \n      keysecret: \n\n```\n3. VodApplication\n```java\n@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)\n@ComponentScan(basePackages = {\"com.invictusqiu\"})\npublic class VodApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(VodApplication.class, args);\n    }\n}\n```\n4. 工具类  \n常量读取工具类，读取配置文件的内容\n```java\n@Component\npublic class ConstantVodUtils implements InitializingBean {\n\n    @Value(\"${aliyun.vod.file.keyid}\")\n    private String keyid;\n\n    @Value(\"${aliyun.vod.file.keysecret}\")\n    private String keysecret;\n\n    // 定义公开常量\n    public static String ACCESS_KEY_ID;\n    public static String ACCESS_KEY_SECRET;\n\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        ACCESS_KEY_ID = keyid;\n        ACCESS_KEY_SECRET = keysecret;\n    }\n}\n```\n5. 控制器\n```java\n@RestController\n@RequestMapping(\"/eduvod/video\")\n@CrossOrigin\npublic class VodController {\n\n    @Autowired\n    private VodService vodService;\n\n    // 上传视频到阿里云\n    @PostMapping(\"uploadAlyVideo\")\n    public Result uploadAlyVideo(MultipartFile file) {\n        // 返回上传视频id\n        String videoId = vodService.uploadVideoAly(file);\n        return Result.ok().data(\"videoId\",videoId);\n    }\n}\n```\n\n6. 服务实现类\n```java\n@Service\npublic class VodServiceImpl implements VodService {\n\n    // 上传视频到阿里云（采用流式上传接口）\n    @Override\n    public String uploadVideoAly(MultipartFile file) {\n        try {\n            // accessKeyId, accessKeySecret\n            // fileName: 上传文件原始名称\n            // 01.03.09.mp4\n            String fileName = file.getOriginalFilename();\n\n            // title: 上传之后显示名称\n            // 去除最后一个.\n            String title = fileName.substring(0, fileName.lastIndexOf(\".\"));\n\n            // inputStream: 上传文件输入流\n            InputStream inputStream = file.getInputStream();\n\n            UploadStreamRequest request = new UploadStreamRequest(ConstantVodUtils.ACCESS_KEY_ID, ConstantVodUtils.ACCESS_KEY_SECRET, title, fileName, inputStream);\n\n            UploadVideoImpl uploader = new UploadVideoImpl();\n            UploadStreamResponse response = uploader.uploadStream(request);\n\n            String videoId = null;\n            if (response.isSuccess()) {\n                videoId = response.getVideoId();\n            } else { //如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因\n                videoId = response.getVideoId();\n            }\n            return videoId;\n        } catch(Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n```\n\n7. 前端\nchapter.vue\n```html\n<el-form-item label=\"上传视频\">\n<el-upload\n  :on-success=\"handleVodUploadSuccess\"\n  :on-remove=\"handleVodRemove\"\n  :before-remove=\"beforeVodRemove\"\n  :on-exceed=\"handleUploadExceed\"\n  :file-list=\"fileList\"\n  :action=\"BASE_API + '/eduvod/video/uploadAlyVideo'\"\n  :limit=\"1\"\n  class=\"upload-demo\">\n  <el-button size=\"small\" type=\"primary\">上传视频</el-button>\n  <el-tooltip placement=\"right-end\">\n    <div slot=\"content\">最大支持1G，<br>\n      支持3GP、ASF、AVI、DAT、DV、FLV、F4V、<br>\n      GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、<br>\n      MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、<br>\n      SWF、TS、VOB、WMV、WEBM 等视频格式上传</div>\n    <i class=\"el-icon-question\"/>\n  </el-tooltip>\n</el-upload>\n</el-form-item>\n```\n```js\nfileList: [], // 上传视频的列表\nBASE_API: process.env.BASE_API // 接口API地址\n\n// 成功回调\nhandleVodUploadSuccess(response, file, fileList) {\n  this.video.videoSourceId = response.data.videoId\n},\n// 视图上传多于一个视频\nhandleUploadExceed() {\n  this.$message.warning('想要重新上传视频，请先删除已上传的视频')\n},\n```\n\n8. nginx配置\n```conf\nlocation ~ /eduvod/ {\n    proxy_pass http://localhost:8082;\n}\n```\n配置nginx上传文件大小，否则上传时会有 413 (Request Entity Too Large) 异常  \n打开nginx主配置文件nginx.conf，找到http{}，添加\n```conf\nclient_max_body_size 1024m;\n```\n\n9. 如果数据库没有视频名称  \n修改前端\n```js\n// 上传视频成功调用的方法\nhandleVodUploadSuccess(response, file, fileList) {\n  // 上传视频id赋值\n  this.video.videoSourceId = response.data.videoId\n  // 上传视频名称赋值\n  this.video.videoOriginalName = file.name\n},\n```\n \n\n### 统计分析\n统计分析页面，前端页面使用Echarts组件库实现图表展示，用户可以选择指定日期范围生成统计数据，包括范围内的用户登录数和注册数，以及课程播放数等数据。\n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/StatisticalAnalysis.png)\n该模块使用了Feign远程调用  \n比如调用接口UcenterClient\n```java\n@Component\n@FeignClient(\"service-ucenter\")\npublic interface UcenterClient {\n\n    // 查询某一天注册人数\n    @GetMapping(\"/educenter/member/countRegister/{day}\")\n    public Result countRegister(@PathVariable(\"day\") String day);\n}\n```\n\nStatisticsDailyServiceImpl服务实现类\n```java\n@Autowired\nprivate UcenterClient ucenterClient;\n\n// 统计某一天注册人数，生成统计数据\n@Override\npublic void registerCount(String day) {\n\n    // 添加记录之前删除表相同日期的数据\n    QueryWrapper<StatisticsDaily> wrapper = new QueryWrapper<>();\n    wrapper.eq(\"date_calculated\", day);\n    baseMapper.delete(wrapper);\n\n    // 远程调用得到某一天注册人数\n    Result registerResult = ucenterClient.countRegister(day);\n    Integer countRegister = (Integer)registerResult.getData().get(\"countRegister\");\n\n    // 把获取数据添加数据库，统计分析表里面\n    StatisticsDaily sta = new StatisticsDaily();\n    sta.setRegisterNum(countRegister); //注册人数\n    sta.setDateCalculated(day); //统计日期\n\n    sta.setVideoViewNum(RandomUtils.nextInt(100,200));\n    sta.setLoginNum(RandomUtils.nextInt(100,200));\n    sta.setCourseNum(RandomUtils.nextInt(100,200));\n    baseMapper.insert(sta);\n}\n```\n\n除此之外，启用定时任务实现每天统计  \n启动类添加注释\n```java\n@EnableScheduling //定时任务注解\n```\n\n创建ScheduleTask类\n```java\n@Component\npublic class ScheduleTask {\n\n    @Autowired\n    private StatisticsDailyService staService;\n\n    /* 定时器测试\n 0/5 * * * * ?表示每隔5秒执行一次这个方法\n    @Scheduled(cron = \"0/5 * * * * ?\")\n    public void task1() {\n        System.out.println(\"********************task1执行了...\");\n    }\n*/\n\n    // 在每天凌晨1点，把前一天的数据进行数据查询添加\n    @Scheduled(cron = \"0 0 1 * * ?\")\n    public void task2() {\n        staService.registerCount(DateUtil.formatDate(DateUtil.addDays(new Date(),-1)));\n    }\n}\n```\n \n## 前台用户系统\n### 前端框架\nNuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用,也可充当静态站点引擎生成静态站点应用,具有优雅的代码结构分层和热加载等特性。  \n官方网站：\nhttps://zh.nuxtjs.org/  \n幻灯片插件：vue-awesome-swiper\n### 首页\n展示轮播图、热门课程等信息，然后对用户展示网站幻灯片、热门课程、名师等内容，为了提高访问速度使用了Redis缓存首页数据。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/HomePage.png)\n### 注册和登录\n注册功能需要用户通过填写昵称、手机号，然后接收验证码的方式进行注册。如果使用手机号码注册，系统会通过阿里云短信服务向该用户发送短信验证码，后端保存该验证码来和用户输入的验证码进行比对。如果用户是以扫描微信二维码的方式进行注册，后端接收到该请求后会将页面重定向至二维码页面，扫码之后获得微信官方返回的临时票据，使用票据可以获得该用户微信账号的访问凭证和唯一标识，然后请求微信官方的接口地址得到该用户的账号信息，并将其持久化存储于数据库中，实现微信扫码注册功能。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/RegisterPage.png)\n值得一提的是使用Redis解决验证码有效时间问题\n```java\n// springboot整合的Redis模板对象\n@Autowired\nprivate RedisTemplate<String,String> redisTemplate;\n\n// 发送短信的方法\n@GetMapping(\"send/{phone}\")\npublic Result sendMsm(@PathVariable String phone) {\n    // 1.从redis获取验证码，如果获取到直接返回\n    String code = redisTemplate.opsForValue().get(phone);\n    if (!StringUtils.isEmpty(code)) {\n        return Result.ok();\n    }\n\n    // 2.如果redis获取不到，进行阿里云发送\n    // 生成随机值，传递阿里云进行发送\n    code = RandomUtil.getFourBitRandom();\n    Map<String,Object> param = new HashMap<>();\n    param.put(\"code\",code);\n    // 调用service发送短信的方法\n    boolean isSend = msmService.send(param,phone);\n    if (isSend) {\n        // 发送成功，把发送成功验证码放到redis里面\n        // 设置有效时间\n        redisTemplate.opsForValue().set(phone,code,5, TimeUnit.MINUTES);\n        return Result.ok();\n    } else {\n        return Result.error().message(\"短信发送失败\");\n    }\n}\n```\n \n### 课程列表\n课程列表，展示上架课程，对不同种类的课程进行了分类，可以按照销量、发布时间、售价来对课程列表进行排序。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseSchedule.png)\n后端处理条件分页\n```java\n// 1.条件查询带分页查询课程\n@Override\npublic Map<String, Object> getCourseFrontList(Page<EduCourse> pageCourse, CourseFrontVo courseFrontVo) {\n\n    QueryWrapper<EduCourse> wrapper = new QueryWrapper<>();\n    // 判断条件值是否为空，不为空拼接\n    if (!StringUtils.isEmpty(courseFrontVo.getSubjectParentId())) { //一级分类\n        wrapper.eq(\"subject_parent_id\", courseFrontVo.getSubjectParentId());\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getSubjectId())) {   //二级分类\n        wrapper.eq(\"subject_id\",courseFrontVo.getSubjectId());\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getBuyCountSort())) {   //关注度\n        wrapper.orderByDesc(\"buy_count\");\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getGmtCreateSort())) {   //最新\n        wrapper.orderByDesc(\"gmt_create\");\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getPriceSort())) {   //价格\n        wrapper.orderByDesc(\"price\");\n    }\n    // 只获取发布状态的课程\n    wrapper.eq(\"status\",\"Normal\");\n    baseMapper.selectPage(pageCourse,wrapper);\n\n    List<EduCourse> records = pageCourse.getRecords();\n    long current = pageCourse.getCurrent();\n    long pages = pageCourse.getPages();\n    long size = pageCourse.getSize();\n    long total = pageCourse.getTotal();\n    boolean hasNext = pageCourse.hasNext();\n    boolean hasPrevious = pageCourse.hasPrevious();\n\n    // 把分页数据获取出来，放到map集合\n    Map<String, Object> map = new HashMap<>();\n    map.put(\"items\", records);\n    map.put(\"current\", current);\n    map.put(\"pages\", pages);\n    map.put(\"size\", size);\n    map.put(\"total\", total);\n    map.put(\"hasNext\", hasNext);\n    map.put(\"hasPrevious\", hasPrevious);\n\n    // map返回\n    return map;\n}\n```\n \n### 课程详情\n课程详情页，包含课程基本信息、分类、讲师等内容，课程分为免费和付费，如果是付费课程，那么前端的“立即观看”按钮会变为“立即购买”按钮，并且在该页面用户可以发表对该课程的评论。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseDetail.png)\n### 视频播放\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/VodPlayer.png)\n#### 获取播放地址\n参考文档：https://help.aliyun.com/document_detail/61064.html\n前面的 03-使用服务端SDK 介绍了如何获取非加密视频的播放地址。直接使用03节的例子获取加密视频播放地址会返回如下错误信息   \nCurrently only the AliyunVoDEncryption stream exists, you must use the Aliyun player to play or set the value of ResultType to Multiple.  \n目前只有AliyunVoDEncryption流存在，您必须使用Aliyun player来播放或将ResultType的值设置为Multiple。  \n因此在testGetPlayInfo测试方法中添加 ResultType 参数，并设置为true  \n```\nprivateParams.put(\"ResultType\", \"Multiple\");\n```\n此种方式获取的视频文件不能直接播放，必须使用阿里云播放器播放\n\n#### 视频播放器\n参考文档：https://help.aliyun.com/document_detail/61109.html\n\n**视频播放器介绍**  \n阿里云播放器SDK（ApsaraVideo Player SDK）是阿里视频服务的重要一环，除了支持点播和直播的基础播放功能外，深度融合视频云业务，如支持视频的加密播放、安全下载、清晰度切换、直播答题等业务场景，为用户提供简单、快速、安全、稳定的视频播放服务。\n\n**集成视频播放器**  \n参考文档：https://help.aliyun.com/document_detail/51991.html  \n参考 【播放器简单使用说明】一节  \n引入脚本文件和css文件\n```css\n<link rel=\"stylesheet\" href=\"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css\" />\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"></script>\n```\n初始化视频播放器\n```html\n<body>\n    <div  class=\"prism-player\" id=\"J_prismPlayer\"></div>\n    <script>\n        var player = new Aliplayer({\n            id: 'J_prismPlayer',\n            width: '100%',\n            autoplay: false,\n            cover: 'http://liveroom-img.oss-cn-qingdao.aliyuncs.com/logo.png',  \n            //播放配置\n        },function(player){\n            console.log('播放器创建好了。')\n        });\n    </script>\n</body>\n```\n**1. 播放地址播放**  \n在Aliplayer的配置参数中添加如下属性\n```html\n//播放方式一：支持播放地址播放,此播放优先级最高，此种方式不能播放加密视频\nsource : '你的视频播放地址',\n```\n启动浏览器运行，测试视频的播放\n\n**2. 播放凭证播放（推荐）**  \n阿里云播放器支持通过播放凭证自动换取播放地址进行播放，接入方式更为简单，且安全性更高。播放凭证默认时效为100秒（最大为3000秒），只能用于获取指定视频的播放地址，不能混用或重复使用。如果凭证过期则无法获取播放地址，需要重新获取凭证。\n```html\nencryptType:'1',//如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\nvid : '视频id',\nplayauth : '视频授权码',\n```\n注意：播放凭证有过期时间，默认值：100秒 。取值范围：100~3000。  \n设置播放凭证的有效期  \n在获取播放凭证的测试用例中添加如下代码  \n```\nrequest.setAuthInfoTimeout(200L);\n```\n在线配置参考：https://player.alicdn.com/aliplayer/setting/setting.html\n\n\n#### 后端获取播放凭证\n\n**播放组件相关文档**  \n集成文档：https://help.aliyun.com/document_detail/51991.html?spm=a2c4g.11186623.2.39.478e192b8VSdEn  \n在线配置：https://player.alicdn.com/aliplayer/setting/setting.html  \n功能展示：https://player.alicdn.com/aliplayer/presentation/index.html  \n\n\n### 整合阿里云视频播放器\n\n#### 后端\n\n修改VideoVo\n```java\npublic class VideoVo {\n\n    private String id;\n\n    private String title;\n\n    private String videoSourceId;   //视频id\n}\n```\n\nVodController\n```java\n// 根据视频id获取视频凭证\n@GetMapping(\"getPlayAuth/{id}\")\npublic Result getPlayAuth(@PathVariable String id) {\n    try {\n        // 创建初始化对象\n        DefaultAcsClient client =\n                InitVodClient.initVodClient(ConstantVodUtils.ACCESS_KEY_ID,ConstantVodUtils.ACCESS_KEY_SECRET);\n        // 创建获取凭证request和response对象\n        GetVideoPlayAuthRequest request = new GetVideoPlayAuthRequest();\n        // 向request设置视频id\n        request.setVideoId(id);\n        // 调用方法得到凭证\n        GetVideoPlayAuthResponse response = client.getAcsResponse(request);\n        String playAuth = response.getPlayAuth();\n        return Result.ok().data(\"playAuth\",playAuth);\n    } catch (Exception e) {\n        throw new EduException(20001,\"获取凭证失败\");\n    }\n}\n```\n \n#### 前端\n\napi  \nvod.js\n```js\nimport request from '@/utils/request'\n\nexport default {\n  getPlayAuth(vid) {\n    return request({\n      url: `/eduvod/video/getPlayAuth/${vid}`,\n      method: 'get'\n    })\n  }\n}\n```\n\n创建新的layouts  \nvideo.vue\n```html\n<template>\n  <div class=\"guli-player\">\n    <div class=\"head\">\n      <a href=\"#\" title=\"在线教育\">\n        <img class=\"logo\" src=\"~/assets/img/logo.png\" lt=\"在线教育\">\n      </a>\n    </div>\n    <div class=\"body\">\n      <div class=\"content\">\n        <nuxt />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {}\n</script>\n<style>\nhtml,\nbody {\n  height: 100%;\n}\n</style>\n\n<style scoped>\n.head {\n  height: 50px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n}\n\n.head .logo {\n  height: 50px;\n  margin-left: 10px;\n}\n\n.body {\n  position: absolute;\n  top: 50px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n}\n</style>\n```\n\n_id.vue  \n点击小节携带视频id跳转\n```html\n<a :href=\"'/player/'+video.videoSourceId\" title target=\"_blank\">\n```\n\n新建Page/player/_vid.vue  \n```html\n<template>\n  <div>\n\n    <!-- 阿里云视频播放器样式 -->\n    <link rel=\"stylesheet\" href=\"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css\">\n\n    <!-- 定义播放器dom -->\n    <div id=\"J_prismPlayer\" class=\"prism-player\" />\n  </div>\n</template>\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"/>\n<script>\nimport vod from '@/api/vod'\nexport default {\n  layout: 'video', // 使用video布局\n  asyncData({ params, error }) {\n    return vod.getPlayAuth(params.vid)\n      .then(response => {\n        return {\n          playAuth: response.data.playAuth,\n          vid: params.vid\n        }\n      })\n  },\n  mounted() {\n    new Aliplayer({\n      id: 'J_prismPlayer',\n      vid: this.vid, // 视频id\n      playauth: this.playAuth, // 播放凭证\n      // encryptType: '1', // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\n      width: '100%',\n      height: '500px'\n    }, function(player) {\n      console.log('播放器创建成功')\n    })\n  }\n}\n</script>\n```\n\n排错\n>先看看播放器的js有没有引入\n摁下F12，在网络中（network）查看，如果没有可以尝试在nuxt.config.js文件中的head中添加。  \n不要删除原_vid.vue中的\n```js\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"/>\n```\n把它放到`<template></template>`标签外\n```js\nhead: {\n  script: [{ src: 'https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js' }],\n}\n```\n \n### 名师列表\n得到所有讲师信息，显示所有名师的头像、名称、简介内容。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherList.png)\n### 讲师详情\n在名师列表页可以选择不同讲师的卡片，通过携带讲师id请求后端接口来查询该讲师的信息和所授课程，页面中展示了名师的详细信息和所授课程。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherDetail.png)\n\n### 订单模块\n课程支付，用户只有登录后才能购买对应课程。购买会生成课程订单和微信支付的二维码，在此支付期间每隔3秒会查询支付状态，只有扫码成功后才更新数据库中该订单的支付状态，一旦查询支付状态为“已支付”才能为用户开通课程观看权限。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/OrderPay.png)\n服务实现代码\n```java\n@Autowired\nprivate OrderService orderService;\n\n// 生成微信支付二维码接口\n@Override\npublic Map createNative(String orderNo) {\n    try {\n        // 1.根据订单号查询订单信息\n        QueryWrapper<Order> wrapper = new QueryWrapper<>();\n        wrapper.eq(\"order_no\",orderNo);\n        Order order = orderService.getOne(wrapper);\n\n        // 2.使用map设置生成二维码需要的参数\n        Map m = new HashMap();\n        m.put(\"appid\", \"wx74862e0dfcf69954\");\n        m.put(\"mch_id\", \"1558950191\");\n        m.put(\"nonce_str\", WXPayUtil.generateNonceStr());\n        m.put(\"body\", order.getCourseTitle());\n        m.put(\"out_trade_no\", orderNo);\n        m.put(\"total_fee\", order.getTotalFee().multiply(new BigDecimal(\"100\")).longValue()+\"\");\n        m.put(\"spbill_create_ip\", \"127.0.0.1\");\n        m.put(\"notify_url\", \"http://guli.shop/api/order/weixinPay/weixinNotify\\n\");\n        m.put(\"trade_type\", \"NATIVE\");\n\n        // 3.发送httpClient请求，传递参数xml格式，微信支付提供的固定地址\n        HttpClient client = new HttpClient(\"https://api.mch.weixin.qq.com/pay/unifiedorder\");\n        // 设置xml格式的参数\n        client.setXmlParam(WXPayUtil.generateSignedXml(m,\"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb\"));\n        client.setHttps(true);\n        // 执行请求发送\n        client.post();\n\n        // 4.得到发送请求返回的结果\n        // 返回内容，是使用xml格式返回\n        String xml = client.getContent();\n\n        // 把xml格式转换map集合，把map集合返回\n        Map<String,String> resultMap = WXPayUtil.xmlToMap(xml);\n\n        //最终返回数据的封装\n        Map map = new HashMap();\n        map.put(\"out_trade_no\", orderNo);\n        map.put(\"course_id\", order.getCourseId());\n        map.put(\"total_fee\", order.getTotalFee());\n        map.put(\"result_code\", resultMap.get(\"result_code\"));   // 返回二维码操作状态码\n        map.put(\"code_url\", resultMap.get(\"code_url\")); //二维码地址\n\n        return map;\n\n    } catch (Exception e) {\n        throw new EduException(20001,\"生成二维码失败\");\n    }\n}\n```\n \n## 项目仓库\n后端：\n* https://github.com/InvictusEd/online-education-platform-backend\n\n前端：\n* https://github.com/InvictusEd/online-education-platform-frontend-management  \n* https://github.com/InvictusEd/online-education-platform-frontend\n\n \n## 开发日志以及论文成果\n链接：https://pan.baidu.com/s/19poiZHY7C4HyjostpuOj2Q?pwd=yyds \n提取码：yyds \n ","source":"_posts/OnlineEducation.md","raw":"---\ntitle: 毕业设计——在线教育平台\ndate: 2024-05-27 19:04:00\nimg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/Home.jpg\ntop: true\ncover: false\ncoverImg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/Home.jpg\nsummary: 在线教育平台是我的毕业设计，本篇文章用于总结整个项目的开发过程，以及项目的功能和技术栈\ncategories: Project\ntags:\n    - Java\n    - Spring Boot\n    - Spring Cloud\n    - Vue\n---\n\n## 开篇\n由于在开发该系统时，并未有书写开发文档的经验，而仅仅是记录了每一天的开发日志，但开发日志多达21篇，因此把所有开发日志放在博客当中是影响读者观感的，因此本篇文章仅仅是作为总结，如果有具体需要，请联系我，或者访问我的GitHub仓库或百度云盘。\n\n## 项目简介\n在线教育平台采用B2C模式，Spring Cloud搭建整个微服务架构，后台采用Spring Boot+MySQL+MyBatis-Plus+Redis，并且结合Vue前端框架，采用Nuxt服务端渲染技术来优化前端页面，运用阿里云视频点播技术。在管理系统的后台中，运用Spring Security进行用户认证和授权，以确保对不同用户权限的细致划分。在用户的登录系统方面，则采纳了手机验证码注册和登录方式，并运用JWT生成Token以实现便捷的单点登录。此外，用户通过微信支付来进行课程购买。\n\n## 技术栈\n\n### 后端\n- Spring Boot\n- Spring Cloud\n- MySQL\n- MyBatis-Plus\n- Redis\n- Spring Security\n- EasyExcel\n\n### 前端\n- Vue\n- Nuxt\n- ElementUI\n- Axios\n- ECharts\n\n## 后台管理系统\n在线教育平台后台管理系统的前端使用的是vue-admin-template模板\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/BackendLogin.jpg)\n### 讲师管理\n对讲师进行增删改查操作，后端集成了阿里云OSS，用于讲师头像的上传。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/AdminTeachers.png)\n**开发中值得一提的：**  \nvue-router导航切换 时，如果两个路由都渲染同个组件，组件会重（chong）用,  \n组件的生命周期钩子（created）不会再被调用, 使得组件的一些数据无法根据 path的改变得到更新  \n因此：  \n1、我们可以在watch中监听路由的变化，当路由变化时，重新调用created中的内容  \n2、在init方法中我们判断路由的变化，如果是修改路由，则从api获取表单数据，  \n\n如果是新增路由，则重新初始化表单数据\n```js\nwatch: { // 监听\n    $route(to, from) { // 路由变化方式，路由发生变化，方法就会执行\n      this.init()\n    }\n  },\n  created() { // 页面渲染之前执行\n    this.init()\n  },\n  methods: {\n    init() {\n      // 判断路径是否有id值\n      if (this.$route.params && this.$route.params.id) {\n        // 从路径获取id值\n        const id = this.$route.params.id\n        // 调用根据id查询的方法\n        this.getInfo(id)\n      } else { // 路径没有id值，做添加\n        // 清空表单\n        this.teacher = {}\n      }\n    },\n```\n### 课程分类管理\n前端上传课程Excel表格，后端通过EasyExcel来处理表格并将其持久化存储于数据库中。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseExcel.png)\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseCategory.png)\n### 课程管理\n可以查看课程详细信息并管理课程，如果是发布课程需要进行三个步骤，分别是“填写课程基本信息”、“创建课程大纲”、“最终发布”，需要按照该执行顺序去操作才能完整发布课程。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseAdmin.png)\n**值得一提的是课程视频上传的实现**  \n1. 引入依赖  \n引入依赖存在问题\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/DependencyProblem.png)\nmvn需要配置环境变量，这样才能在命令行中使用mvn命令\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/MavenPath.png)\n上传视频  \n参考官网压缩包里面的sample示例代码改造\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/ExampleCode.png)\n```java\npublic static void main(String[] args) {\n        String accessKeyId = \"\";\n        String accessKeySecret = \"\";\n\n        String title = \"6 - How Does Project Submission Work - upload by sdk\";  // 上传之后文件名称\n        String fileName = \"E:\\\\6 - What If I Want to Move Faster.mp4\";   // 本地文件路径和名称\n\n        // 上传视频的方法\n        UploadVideoRequest request = new UploadVideoRequest(accessKeyId, accessKeySecret, title, fileName);\n        /* 可指定分片上传时每个分片的大小，默认为2M字节 */\n        request.setPartSize(2 * 1024 * 1024L);\n        /* 可指定分片上传时的并发线程数，默认为1，(注：该配置会占用服务器CPU资源，需根据服务器情况指定）*/\n        request.setTaskNum(1);\n        UploadVideoImpl uploader = new UploadVideoImpl();\n        UploadVideoResponse response = uploader.uploadVideo(request);\n\n        if (response.isSuccess()) {\n            System.out.print(\"VideoId=\" + response.getVideoId() + \"\\n\");\n        } else {\n            /* 如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因 */\n            System.out.print(\"VideoId=\" + response.getVideoId() + \"\\n\");\n            System.out.print(\"ErrorCode=\" + response.getCode() + \"\\n\");\n            System.out.print(\"ErrorMessage=\" + response.getMessage() + \"\\n\");\n        }\n    }\n```\n2. 配置文件\n```yml\n# 服务端口\nserver:\n  port: 8082\n\nspring:\n  application:\n    # 服务名\n    name: service-vod\n  profiles:\n    # 环境设置：dev、test、prod\n    active: dev\n  servlet:\n    multipart:\n      # 最大上传单个文件大小：默认1M\n      max-file-size: 1024MB\n      # 最大总上传的数据大小：默认10MB\n      max-request-size: 1024MB\n\n# 阿里云 vod\n# 不同的服务器，地址不同\naliyun:\n  vod:\n    file:\n      keyid: \n      keysecret: \n\n```\n3. VodApplication\n```java\n@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)\n@ComponentScan(basePackages = {\"com.invictusqiu\"})\npublic class VodApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(VodApplication.class, args);\n    }\n}\n```\n4. 工具类  \n常量读取工具类，读取配置文件的内容\n```java\n@Component\npublic class ConstantVodUtils implements InitializingBean {\n\n    @Value(\"${aliyun.vod.file.keyid}\")\n    private String keyid;\n\n    @Value(\"${aliyun.vod.file.keysecret}\")\n    private String keysecret;\n\n    // 定义公开常量\n    public static String ACCESS_KEY_ID;\n    public static String ACCESS_KEY_SECRET;\n\n    @Override\n    public void afterPropertiesSet() throws Exception {\n        ACCESS_KEY_ID = keyid;\n        ACCESS_KEY_SECRET = keysecret;\n    }\n}\n```\n5. 控制器\n```java\n@RestController\n@RequestMapping(\"/eduvod/video\")\n@CrossOrigin\npublic class VodController {\n\n    @Autowired\n    private VodService vodService;\n\n    // 上传视频到阿里云\n    @PostMapping(\"uploadAlyVideo\")\n    public Result uploadAlyVideo(MultipartFile file) {\n        // 返回上传视频id\n        String videoId = vodService.uploadVideoAly(file);\n        return Result.ok().data(\"videoId\",videoId);\n    }\n}\n```\n\n6. 服务实现类\n```java\n@Service\npublic class VodServiceImpl implements VodService {\n\n    // 上传视频到阿里云（采用流式上传接口）\n    @Override\n    public String uploadVideoAly(MultipartFile file) {\n        try {\n            // accessKeyId, accessKeySecret\n            // fileName: 上传文件原始名称\n            // 01.03.09.mp4\n            String fileName = file.getOriginalFilename();\n\n            // title: 上传之后显示名称\n            // 去除最后一个.\n            String title = fileName.substring(0, fileName.lastIndexOf(\".\"));\n\n            // inputStream: 上传文件输入流\n            InputStream inputStream = file.getInputStream();\n\n            UploadStreamRequest request = new UploadStreamRequest(ConstantVodUtils.ACCESS_KEY_ID, ConstantVodUtils.ACCESS_KEY_SECRET, title, fileName, inputStream);\n\n            UploadVideoImpl uploader = new UploadVideoImpl();\n            UploadStreamResponse response = uploader.uploadStream(request);\n\n            String videoId = null;\n            if (response.isSuccess()) {\n                videoId = response.getVideoId();\n            } else { //如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因\n                videoId = response.getVideoId();\n            }\n            return videoId;\n        } catch(Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n```\n\n7. 前端\nchapter.vue\n```html\n<el-form-item label=\"上传视频\">\n<el-upload\n  :on-success=\"handleVodUploadSuccess\"\n  :on-remove=\"handleVodRemove\"\n  :before-remove=\"beforeVodRemove\"\n  :on-exceed=\"handleUploadExceed\"\n  :file-list=\"fileList\"\n  :action=\"BASE_API + '/eduvod/video/uploadAlyVideo'\"\n  :limit=\"1\"\n  class=\"upload-demo\">\n  <el-button size=\"small\" type=\"primary\">上传视频</el-button>\n  <el-tooltip placement=\"right-end\">\n    <div slot=\"content\">最大支持1G，<br>\n      支持3GP、ASF、AVI、DAT、DV、FLV、F4V、<br>\n      GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、<br>\n      MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、<br>\n      SWF、TS、VOB、WMV、WEBM 等视频格式上传</div>\n    <i class=\"el-icon-question\"/>\n  </el-tooltip>\n</el-upload>\n</el-form-item>\n```\n```js\nfileList: [], // 上传视频的列表\nBASE_API: process.env.BASE_API // 接口API地址\n\n// 成功回调\nhandleVodUploadSuccess(response, file, fileList) {\n  this.video.videoSourceId = response.data.videoId\n},\n// 视图上传多于一个视频\nhandleUploadExceed() {\n  this.$message.warning('想要重新上传视频，请先删除已上传的视频')\n},\n```\n\n8. nginx配置\n```conf\nlocation ~ /eduvod/ {\n    proxy_pass http://localhost:8082;\n}\n```\n配置nginx上传文件大小，否则上传时会有 413 (Request Entity Too Large) 异常  \n打开nginx主配置文件nginx.conf，找到http{}，添加\n```conf\nclient_max_body_size 1024m;\n```\n\n9. 如果数据库没有视频名称  \n修改前端\n```js\n// 上传视频成功调用的方法\nhandleVodUploadSuccess(response, file, fileList) {\n  // 上传视频id赋值\n  this.video.videoSourceId = response.data.videoId\n  // 上传视频名称赋值\n  this.video.videoOriginalName = file.name\n},\n```\n \n\n### 统计分析\n统计分析页面，前端页面使用Echarts组件库实现图表展示，用户可以选择指定日期范围生成统计数据，包括范围内的用户登录数和注册数，以及课程播放数等数据。\n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/StatisticalAnalysis.png)\n该模块使用了Feign远程调用  \n比如调用接口UcenterClient\n```java\n@Component\n@FeignClient(\"service-ucenter\")\npublic interface UcenterClient {\n\n    // 查询某一天注册人数\n    @GetMapping(\"/educenter/member/countRegister/{day}\")\n    public Result countRegister(@PathVariable(\"day\") String day);\n}\n```\n\nStatisticsDailyServiceImpl服务实现类\n```java\n@Autowired\nprivate UcenterClient ucenterClient;\n\n// 统计某一天注册人数，生成统计数据\n@Override\npublic void registerCount(String day) {\n\n    // 添加记录之前删除表相同日期的数据\n    QueryWrapper<StatisticsDaily> wrapper = new QueryWrapper<>();\n    wrapper.eq(\"date_calculated\", day);\n    baseMapper.delete(wrapper);\n\n    // 远程调用得到某一天注册人数\n    Result registerResult = ucenterClient.countRegister(day);\n    Integer countRegister = (Integer)registerResult.getData().get(\"countRegister\");\n\n    // 把获取数据添加数据库，统计分析表里面\n    StatisticsDaily sta = new StatisticsDaily();\n    sta.setRegisterNum(countRegister); //注册人数\n    sta.setDateCalculated(day); //统计日期\n\n    sta.setVideoViewNum(RandomUtils.nextInt(100,200));\n    sta.setLoginNum(RandomUtils.nextInt(100,200));\n    sta.setCourseNum(RandomUtils.nextInt(100,200));\n    baseMapper.insert(sta);\n}\n```\n\n除此之外，启用定时任务实现每天统计  \n启动类添加注释\n```java\n@EnableScheduling //定时任务注解\n```\n\n创建ScheduleTask类\n```java\n@Component\npublic class ScheduleTask {\n\n    @Autowired\n    private StatisticsDailyService staService;\n\n    /* 定时器测试\n 0/5 * * * * ?表示每隔5秒执行一次这个方法\n    @Scheduled(cron = \"0/5 * * * * ?\")\n    public void task1() {\n        System.out.println(\"********************task1执行了...\");\n    }\n*/\n\n    // 在每天凌晨1点，把前一天的数据进行数据查询添加\n    @Scheduled(cron = \"0 0 1 * * ?\")\n    public void task2() {\n        staService.registerCount(DateUtil.formatDate(DateUtil.addDays(new Date(),-1)));\n    }\n}\n```\n \n## 前台用户系统\n### 前端框架\nNuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用,也可充当静态站点引擎生成静态站点应用,具有优雅的代码结构分层和热加载等特性。  \n官方网站：\nhttps://zh.nuxtjs.org/  \n幻灯片插件：vue-awesome-swiper\n### 首页\n展示轮播图、热门课程等信息，然后对用户展示网站幻灯片、热门课程、名师等内容，为了提高访问速度使用了Redis缓存首页数据。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/HomePage.png)\n### 注册和登录\n注册功能需要用户通过填写昵称、手机号，然后接收验证码的方式进行注册。如果使用手机号码注册，系统会通过阿里云短信服务向该用户发送短信验证码，后端保存该验证码来和用户输入的验证码进行比对。如果用户是以扫描微信二维码的方式进行注册，后端接收到该请求后会将页面重定向至二维码页面，扫码之后获得微信官方返回的临时票据，使用票据可以获得该用户微信账号的访问凭证和唯一标识，然后请求微信官方的接口地址得到该用户的账号信息，并将其持久化存储于数据库中，实现微信扫码注册功能。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/RegisterPage.png)\n值得一提的是使用Redis解决验证码有效时间问题\n```java\n// springboot整合的Redis模板对象\n@Autowired\nprivate RedisTemplate<String,String> redisTemplate;\n\n// 发送短信的方法\n@GetMapping(\"send/{phone}\")\npublic Result sendMsm(@PathVariable String phone) {\n    // 1.从redis获取验证码，如果获取到直接返回\n    String code = redisTemplate.opsForValue().get(phone);\n    if (!StringUtils.isEmpty(code)) {\n        return Result.ok();\n    }\n\n    // 2.如果redis获取不到，进行阿里云发送\n    // 生成随机值，传递阿里云进行发送\n    code = RandomUtil.getFourBitRandom();\n    Map<String,Object> param = new HashMap<>();\n    param.put(\"code\",code);\n    // 调用service发送短信的方法\n    boolean isSend = msmService.send(param,phone);\n    if (isSend) {\n        // 发送成功，把发送成功验证码放到redis里面\n        // 设置有效时间\n        redisTemplate.opsForValue().set(phone,code,5, TimeUnit.MINUTES);\n        return Result.ok();\n    } else {\n        return Result.error().message(\"短信发送失败\");\n    }\n}\n```\n \n### 课程列表\n课程列表，展示上架课程，对不同种类的课程进行了分类，可以按照销量、发布时间、售价来对课程列表进行排序。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseSchedule.png)\n后端处理条件分页\n```java\n// 1.条件查询带分页查询课程\n@Override\npublic Map<String, Object> getCourseFrontList(Page<EduCourse> pageCourse, CourseFrontVo courseFrontVo) {\n\n    QueryWrapper<EduCourse> wrapper = new QueryWrapper<>();\n    // 判断条件值是否为空，不为空拼接\n    if (!StringUtils.isEmpty(courseFrontVo.getSubjectParentId())) { //一级分类\n        wrapper.eq(\"subject_parent_id\", courseFrontVo.getSubjectParentId());\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getSubjectId())) {   //二级分类\n        wrapper.eq(\"subject_id\",courseFrontVo.getSubjectId());\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getBuyCountSort())) {   //关注度\n        wrapper.orderByDesc(\"buy_count\");\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getGmtCreateSort())) {   //最新\n        wrapper.orderByDesc(\"gmt_create\");\n    }\n    if (!StringUtils.isEmpty(courseFrontVo.getPriceSort())) {   //价格\n        wrapper.orderByDesc(\"price\");\n    }\n    // 只获取发布状态的课程\n    wrapper.eq(\"status\",\"Normal\");\n    baseMapper.selectPage(pageCourse,wrapper);\n\n    List<EduCourse> records = pageCourse.getRecords();\n    long current = pageCourse.getCurrent();\n    long pages = pageCourse.getPages();\n    long size = pageCourse.getSize();\n    long total = pageCourse.getTotal();\n    boolean hasNext = pageCourse.hasNext();\n    boolean hasPrevious = pageCourse.hasPrevious();\n\n    // 把分页数据获取出来，放到map集合\n    Map<String, Object> map = new HashMap<>();\n    map.put(\"items\", records);\n    map.put(\"current\", current);\n    map.put(\"pages\", pages);\n    map.put(\"size\", size);\n    map.put(\"total\", total);\n    map.put(\"hasNext\", hasNext);\n    map.put(\"hasPrevious\", hasPrevious);\n\n    // map返回\n    return map;\n}\n```\n \n### 课程详情\n课程详情页，包含课程基本信息、分类、讲师等内容，课程分为免费和付费，如果是付费课程，那么前端的“立即观看”按钮会变为“立即购买”按钮，并且在该页面用户可以发表对该课程的评论。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseDetail.png)\n### 视频播放\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/VodPlayer.png)\n#### 获取播放地址\n参考文档：https://help.aliyun.com/document_detail/61064.html\n前面的 03-使用服务端SDK 介绍了如何获取非加密视频的播放地址。直接使用03节的例子获取加密视频播放地址会返回如下错误信息   \nCurrently only the AliyunVoDEncryption stream exists, you must use the Aliyun player to play or set the value of ResultType to Multiple.  \n目前只有AliyunVoDEncryption流存在，您必须使用Aliyun player来播放或将ResultType的值设置为Multiple。  \n因此在testGetPlayInfo测试方法中添加 ResultType 参数，并设置为true  \n```\nprivateParams.put(\"ResultType\", \"Multiple\");\n```\n此种方式获取的视频文件不能直接播放，必须使用阿里云播放器播放\n\n#### 视频播放器\n参考文档：https://help.aliyun.com/document_detail/61109.html\n\n**视频播放器介绍**  \n阿里云播放器SDK（ApsaraVideo Player SDK）是阿里视频服务的重要一环，除了支持点播和直播的基础播放功能外，深度融合视频云业务，如支持视频的加密播放、安全下载、清晰度切换、直播答题等业务场景，为用户提供简单、快速、安全、稳定的视频播放服务。\n\n**集成视频播放器**  \n参考文档：https://help.aliyun.com/document_detail/51991.html  \n参考 【播放器简单使用说明】一节  \n引入脚本文件和css文件\n```css\n<link rel=\"stylesheet\" href=\"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css\" />\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"></script>\n```\n初始化视频播放器\n```html\n<body>\n    <div  class=\"prism-player\" id=\"J_prismPlayer\"></div>\n    <script>\n        var player = new Aliplayer({\n            id: 'J_prismPlayer',\n            width: '100%',\n            autoplay: false,\n            cover: 'http://liveroom-img.oss-cn-qingdao.aliyuncs.com/logo.png',  \n            //播放配置\n        },function(player){\n            console.log('播放器创建好了。')\n        });\n    </script>\n</body>\n```\n**1. 播放地址播放**  \n在Aliplayer的配置参数中添加如下属性\n```html\n//播放方式一：支持播放地址播放,此播放优先级最高，此种方式不能播放加密视频\nsource : '你的视频播放地址',\n```\n启动浏览器运行，测试视频的播放\n\n**2. 播放凭证播放（推荐）**  \n阿里云播放器支持通过播放凭证自动换取播放地址进行播放，接入方式更为简单，且安全性更高。播放凭证默认时效为100秒（最大为3000秒），只能用于获取指定视频的播放地址，不能混用或重复使用。如果凭证过期则无法获取播放地址，需要重新获取凭证。\n```html\nencryptType:'1',//如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\nvid : '视频id',\nplayauth : '视频授权码',\n```\n注意：播放凭证有过期时间，默认值：100秒 。取值范围：100~3000。  \n设置播放凭证的有效期  \n在获取播放凭证的测试用例中添加如下代码  \n```\nrequest.setAuthInfoTimeout(200L);\n```\n在线配置参考：https://player.alicdn.com/aliplayer/setting/setting.html\n\n\n#### 后端获取播放凭证\n\n**播放组件相关文档**  \n集成文档：https://help.aliyun.com/document_detail/51991.html?spm=a2c4g.11186623.2.39.478e192b8VSdEn  \n在线配置：https://player.alicdn.com/aliplayer/setting/setting.html  \n功能展示：https://player.alicdn.com/aliplayer/presentation/index.html  \n\n\n### 整合阿里云视频播放器\n\n#### 后端\n\n修改VideoVo\n```java\npublic class VideoVo {\n\n    private String id;\n\n    private String title;\n\n    private String videoSourceId;   //视频id\n}\n```\n\nVodController\n```java\n// 根据视频id获取视频凭证\n@GetMapping(\"getPlayAuth/{id}\")\npublic Result getPlayAuth(@PathVariable String id) {\n    try {\n        // 创建初始化对象\n        DefaultAcsClient client =\n                InitVodClient.initVodClient(ConstantVodUtils.ACCESS_KEY_ID,ConstantVodUtils.ACCESS_KEY_SECRET);\n        // 创建获取凭证request和response对象\n        GetVideoPlayAuthRequest request = new GetVideoPlayAuthRequest();\n        // 向request设置视频id\n        request.setVideoId(id);\n        // 调用方法得到凭证\n        GetVideoPlayAuthResponse response = client.getAcsResponse(request);\n        String playAuth = response.getPlayAuth();\n        return Result.ok().data(\"playAuth\",playAuth);\n    } catch (Exception e) {\n        throw new EduException(20001,\"获取凭证失败\");\n    }\n}\n```\n \n#### 前端\n\napi  \nvod.js\n```js\nimport request from '@/utils/request'\n\nexport default {\n  getPlayAuth(vid) {\n    return request({\n      url: `/eduvod/video/getPlayAuth/${vid}`,\n      method: 'get'\n    })\n  }\n}\n```\n\n创建新的layouts  \nvideo.vue\n```html\n<template>\n  <div class=\"guli-player\">\n    <div class=\"head\">\n      <a href=\"#\" title=\"在线教育\">\n        <img class=\"logo\" src=\"~/assets/img/logo.png\" lt=\"在线教育\">\n      </a>\n    </div>\n    <div class=\"body\">\n      <div class=\"content\">\n        <nuxt />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {}\n</script>\n<style>\nhtml,\nbody {\n  height: 100%;\n}\n</style>\n\n<style scoped>\n.head {\n  height: 50px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n}\n\n.head .logo {\n  height: 50px;\n  margin-left: 10px;\n}\n\n.body {\n  position: absolute;\n  top: 50px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n}\n</style>\n```\n\n_id.vue  \n点击小节携带视频id跳转\n```html\n<a :href=\"'/player/'+video.videoSourceId\" title target=\"_blank\">\n```\n\n新建Page/player/_vid.vue  \n```html\n<template>\n  <div>\n\n    <!-- 阿里云视频播放器样式 -->\n    <link rel=\"stylesheet\" href=\"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css\">\n\n    <!-- 定义播放器dom -->\n    <div id=\"J_prismPlayer\" class=\"prism-player\" />\n  </div>\n</template>\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"/>\n<script>\nimport vod from '@/api/vod'\nexport default {\n  layout: 'video', // 使用video布局\n  asyncData({ params, error }) {\n    return vod.getPlayAuth(params.vid)\n      .then(response => {\n        return {\n          playAuth: response.data.playAuth,\n          vid: params.vid\n        }\n      })\n  },\n  mounted() {\n    new Aliplayer({\n      id: 'J_prismPlayer',\n      vid: this.vid, // 视频id\n      playauth: this.playAuth, // 播放凭证\n      // encryptType: '1', // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\n      width: '100%',\n      height: '500px'\n    }, function(player) {\n      console.log('播放器创建成功')\n    })\n  }\n}\n</script>\n```\n\n排错\n>先看看播放器的js有没有引入\n摁下F12，在网络中（network）查看，如果没有可以尝试在nuxt.config.js文件中的head中添加。  \n不要删除原_vid.vue中的\n```js\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"/>\n```\n把它放到`<template></template>`标签外\n```js\nhead: {\n  script: [{ src: 'https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js' }],\n}\n```\n \n### 名师列表\n得到所有讲师信息，显示所有名师的头像、名称、简介内容。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherList.png)\n### 讲师详情\n在名师列表页可以选择不同讲师的卡片，通过携带讲师id请求后端接口来查询该讲师的信息和所授课程，页面中展示了名师的详细信息和所授课程。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherDetail.png)\n\n### 订单模块\n课程支付，用户只有登录后才能购买对应课程。购买会生成课程订单和微信支付的二维码，在此支付期间每隔3秒会查询支付状态，只有扫码成功后才更新数据库中该订单的支付状态，一旦查询支付状态为“已支付”才能为用户开通课程观看权限。\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/OrderPay.png)\n服务实现代码\n```java\n@Autowired\nprivate OrderService orderService;\n\n// 生成微信支付二维码接口\n@Override\npublic Map createNative(String orderNo) {\n    try {\n        // 1.根据订单号查询订单信息\n        QueryWrapper<Order> wrapper = new QueryWrapper<>();\n        wrapper.eq(\"order_no\",orderNo);\n        Order order = orderService.getOne(wrapper);\n\n        // 2.使用map设置生成二维码需要的参数\n        Map m = new HashMap();\n        m.put(\"appid\", \"wx74862e0dfcf69954\");\n        m.put(\"mch_id\", \"1558950191\");\n        m.put(\"nonce_str\", WXPayUtil.generateNonceStr());\n        m.put(\"body\", order.getCourseTitle());\n        m.put(\"out_trade_no\", orderNo);\n        m.put(\"total_fee\", order.getTotalFee().multiply(new BigDecimal(\"100\")).longValue()+\"\");\n        m.put(\"spbill_create_ip\", \"127.0.0.1\");\n        m.put(\"notify_url\", \"http://guli.shop/api/order/weixinPay/weixinNotify\\n\");\n        m.put(\"trade_type\", \"NATIVE\");\n\n        // 3.发送httpClient请求，传递参数xml格式，微信支付提供的固定地址\n        HttpClient client = new HttpClient(\"https://api.mch.weixin.qq.com/pay/unifiedorder\");\n        // 设置xml格式的参数\n        client.setXmlParam(WXPayUtil.generateSignedXml(m,\"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb\"));\n        client.setHttps(true);\n        // 执行请求发送\n        client.post();\n\n        // 4.得到发送请求返回的结果\n        // 返回内容，是使用xml格式返回\n        String xml = client.getContent();\n\n        // 把xml格式转换map集合，把map集合返回\n        Map<String,String> resultMap = WXPayUtil.xmlToMap(xml);\n\n        //最终返回数据的封装\n        Map map = new HashMap();\n        map.put(\"out_trade_no\", orderNo);\n        map.put(\"course_id\", order.getCourseId());\n        map.put(\"total_fee\", order.getTotalFee());\n        map.put(\"result_code\", resultMap.get(\"result_code\"));   // 返回二维码操作状态码\n        map.put(\"code_url\", resultMap.get(\"code_url\")); //二维码地址\n\n        return map;\n\n    } catch (Exception e) {\n        throw new EduException(20001,\"生成二维码失败\");\n    }\n}\n```\n \n## 项目仓库\n后端：\n* https://github.com/InvictusEd/online-education-platform-backend\n\n前端：\n* https://github.com/InvictusEd/online-education-platform-frontend-management  \n* https://github.com/InvictusEd/online-education-platform-frontend\n\n \n## 开发日志以及论文成果\n链接：https://pan.baidu.com/s/19poiZHY7C4HyjostpuOj2Q?pwd=yyds \n提取码：yyds \n ","slug":"OnlineEducation","published":1,"updated":"2024-09-20T08:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1bsqfjt000besty91969rze","content":"<h2 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h2><p>由于在开发该系统时，并未有书写开发文档的经验，而仅仅是记录了每一天的开发日志，但开发日志多达21篇，因此把所有开发日志放在博客当中是影响读者观感的，因此本篇文章仅仅是作为总结，如果有具体需要，请联系我，或者访问我的GitHub仓库或百度云盘。</p>\n<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>在线教育平台采用B2C模式，Spring Cloud搭建整个微服务架构，后台采用Spring Boot+MySQL+MyBatis-Plus+Redis，并且结合Vue前端框架，采用Nuxt服务端渲染技术来优化前端页面，运用阿里云视频点播技术。在管理系统的后台中，运用Spring Security进行用户认证和授权，以确保对不同用户权限的细致划分。在用户的登录系统方面，则采纳了手机验证码注册和登录方式，并运用JWT生成Token以实现便捷的单点登录。此外，用户通过微信支付来进行课程购买。</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><h3 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h3><ul>\n<li>Spring Boot</li>\n<li>Spring Cloud</li>\n<li>MySQL</li>\n<li>MyBatis-Plus</li>\n<li>Redis</li>\n<li>Spring Security</li>\n<li>EasyExcel</li>\n</ul>\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><ul>\n<li>Vue</li>\n<li>Nuxt</li>\n<li>ElementUI</li>\n<li>Axios</li>\n<li>ECharts</li>\n</ul>\n<h2 id=\"后台管理系统\"><a href=\"#后台管理系统\" class=\"headerlink\" title=\"后台管理系统\"></a>后台管理系统</h2><p>在线教育平台后台管理系统的前端使用的是vue-admin-template模板<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/BackendLogin.jpg\"></p>\n<h3 id=\"讲师管理\"><a href=\"#讲师管理\" class=\"headerlink\" title=\"讲师管理\"></a>讲师管理</h3><p>对讲师进行增删改查操作，后端集成了阿里云OSS，用于讲师头像的上传。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/AdminTeachers.png\"><br><strong>开发中值得一提的：</strong><br>vue-router导航切换 时，如果两个路由都渲染同个组件，组件会重（chong）用,<br>组件的生命周期钩子（created）不会再被调用, 使得组件的一些数据无法根据 path的改变得到更新<br>因此：<br>1、我们可以在watch中监听路由的变化，当路由变化时，重新调用created中的内容<br>2、在init方法中我们判断路由的变化，如果是修改路由，则从api获取表单数据，  </p>\n<p>如果是新增路由，则重新初始化表单数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 监听</span>\n    <span class=\"token function\">$route</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 路由变化方式，路由发生变化，方法就会执行</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 页面渲染之前执行</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 判断路径是否有id值</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 从路径获取id值</span>\n        <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id\n        <span class=\"token comment\">// 调用根据id查询的方法</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 路径没有id值，做添加</span>\n        <span class=\"token comment\">// 清空表单</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>teacher <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"课程分类管理\"><a href=\"#课程分类管理\" class=\"headerlink\" title=\"课程分类管理\"></a>课程分类管理</h3><p>前端上传课程Excel表格，后端通过EasyExcel来处理表格并将其持久化存储于数据库中。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseExcel.png\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseCategory.png\"></p>\n<h3 id=\"课程管理\"><a href=\"#课程管理\" class=\"headerlink\" title=\"课程管理\"></a>课程管理</h3><p>可以查看课程详细信息并管理课程，如果是发布课程需要进行三个步骤，分别是“填写课程基本信息”、“创建课程大纲”、“最终发布”，需要按照该执行顺序去操作才能完整发布课程。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseAdmin.png\"><br><strong>值得一提的是课程视频上传的实现</strong>  </p>\n<ol>\n<li><p>引入依赖<br>引入依赖存在问题<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/DependencyProblem.png\"><br>mvn需要配置环境变量，这样才能在命令行中使用mvn命令<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/MavenPath.png\"><br>上传视频<br>参考官网压缩包里面的sample示例代码改造<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/ExampleCode.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> accessKeyId <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> accessKeySecret <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> title <span class=\"token operator\">=</span> <span class=\"token string\">\"6 - How Does Project Submission Work - upload by sdk\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 上传之后文件名称</span>\n        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> <span class=\"token string\">\"E:\\\\6 - What If I Want to Move Faster.mp4\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 本地文件路径和名称</span>\n\n        <span class=\"token comment\">// 上传视频的方法</span>\n        <span class=\"token class-name\">UploadVideoRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadVideoRequest</span><span class=\"token punctuation\">(</span>accessKeyId<span class=\"token punctuation\">,</span> accessKeySecret<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* 可指定分片上传时每个分片的大小，默认为2M字节 */</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setPartSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* 可指定分片上传时的并发线程数，默认为1，(注：该配置会占用服务器CPU资源，需根据服务器情况指定）*/</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setTaskNum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UploadVideoImpl</span> uploader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadVideoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UploadVideoResponse</span> response <span class=\"token operator\">=</span> uploader<span class=\"token punctuation\">.</span><span class=\"token function\">uploadVideo</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">isSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VideoId=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">/* 如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因 */</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VideoId=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ErrorCode=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ErrorMessage=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>配置文件</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 服务端口</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8082</span>\n\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 服务名</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> service<span class=\"token punctuation\">-</span>vod\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 环境设置：dev、test、prod</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev\n  <span class=\"token key atrule\">servlet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">multipart</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># 最大上传单个文件大小：默认1M</span>\n      <span class=\"token key atrule\">max-file-size</span><span class=\"token punctuation\">:</span> 1024MB\n      <span class=\"token comment\"># 最大总上传的数据大小：默认10MB</span>\n      <span class=\"token key atrule\">max-request-size</span><span class=\"token punctuation\">:</span> 1024MB\n\n<span class=\"token comment\"># 阿里云 vod</span>\n<span class=\"token comment\"># 不同的服务器，地址不同</span>\n<span class=\"token key atrule\">aliyun</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">vod</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">keyid</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">keysecret</span><span class=\"token punctuation\">:</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>VodApplication</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span><span class=\"token punctuation\">(</span>exclude <span class=\"token operator\">=</span> <span class=\"token class-name\">DataSourceAutoConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.invictusqiu\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VodApplication</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VodApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>工具类<br>常量读取工具类，读取配置文件的内容</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConstantVodUtils</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">InitializingBean</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${aliyun.vod.file.keyid}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> keyid<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${aliyun.vod.file.keysecret}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> keysecret<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 定义公开常量</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">ACCESS_KEY_ID</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">ACCESS_KEY_SECRET</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">ACCESS_KEY_ID</span> <span class=\"token operator\">=</span> keyid<span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">ACCESS_KEY_SECRET</span> <span class=\"token operator\">=</span> keysecret<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>控制器</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/eduvod/video\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@CrossOrigin</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VodController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">VodService</span> vodService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 上传视频到阿里云</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uploadAlyVideo\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">uploadAlyVideo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 返回上传视频id</span>\n        <span class=\"token class-name\">String</span> videoId <span class=\"token operator\">=</span> vodService<span class=\"token punctuation\">.</span><span class=\"token function\">uploadVideoAly</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"videoId\"</span><span class=\"token punctuation\">,</span>videoId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>服务实现类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VodServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">VodService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 上传视频到阿里云（采用流式上传接口）</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">uploadVideoAly</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// accessKeyId, accessKeySecret</span>\n            <span class=\"token comment\">// fileName: 上传文件原始名称</span>\n            <span class=\"token comment\">// 01.03.09.mp4</span>\n            <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// title: 上传之后显示名称</span>\n            <span class=\"token comment\">// 去除最后一个.</span>\n            <span class=\"token class-name\">String</span> title <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// inputStream: 上传文件输入流</span>\n            <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">UploadStreamRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadStreamRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_ID</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_SECRET</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">UploadVideoImpl</span> uploader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadVideoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">UploadStreamResponse</span> response <span class=\"token operator\">=</span> uploader<span class=\"token punctuation\">.</span><span class=\"token function\">uploadStream</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">String</span> videoId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">isSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                videoId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因</span>\n                videoId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> videoId<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>前端<br>chapter.vue</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>上传视频<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-upload</span>\n  <span class=\"token attr-name\">:on-success</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleVodUploadSuccess<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:on-remove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleVodRemove<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:before-remove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>beforeVodRemove<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:on-exceed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleUploadExceed<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:file-list</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileList<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>BASE_API + '/eduvod/video/uploadAlyVideo'<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:limit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>upload-demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-button</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>上传视频<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-tooltip</span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right-end<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>最大支持1G，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n      支持3GP、ASF、AVI、DAT、DV、FLV、F4V、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n      GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n      MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n      SWF、TS、VOB、WMV、WEBM 等视频格式上传<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-question<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-tooltip</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-upload</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">fileList</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 上传视频的列表</span>\n<span class=\"token constant\">BASE_API</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_API</span> <span class=\"token comment\">// 接口API地址</span>\n\n<span class=\"token comment\">// 成功回调</span>\n<span class=\"token function\">handleVodUploadSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoSourceId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>videoId\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 视图上传多于一个视频</span>\n<span class=\"token function\">handleUploadExceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span><span class=\"token string\">'想要重新上传视频，请先删除已上传的视频'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>nginx配置</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">location ~ /eduvod/ {\n    proxy_pass http://localhost:8082;\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>配置nginx上传文件大小，否则上传时会有 413 (Request Entity Too Large) 异常<br>打开nginx主配置文件nginx.conf，找到http{}，添加</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">client_max_body_size 1024m;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>如果数据库没有视频名称<br>修改前端</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 上传视频成功调用的方法</span>\n<span class=\"token function\">handleVodUploadSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 上传视频id赋值</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoSourceId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>videoId\n  <span class=\"token comment\">// 上传视频名称赋值</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoOriginalName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>name\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"统计分析\"><a href=\"#统计分析\" class=\"headerlink\" title=\"统计分析\"></a>统计分析</h3><p>统计分析页面，前端页面使用Echarts组件库实现图表展示，用户可以选择指定日期范围生成统计数据，包括范围内的用户登录数和注册数，以及课程播放数等数据。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/StatisticalAnalysis.png\"><br>该模块使用了Feign远程调用<br>比如调用接口UcenterClient</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"service-ucenter\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UcenterClient</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 查询某一天注册人数</span>\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/educenter/member/countRegister/{day}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">countRegister</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>StatisticsDailyServiceImpl服务实现类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">UcenterClient</span> ucenterClient<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 统计某一天注册人数，生成统计数据</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerCount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> day<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 添加记录之前删除表相同日期的数据</span>\n    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StatisticsDaily</span><span class=\"token punctuation\">&gt;</span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"date_calculated\"</span><span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 远程调用得到某一天注册人数</span>\n    <span class=\"token class-name\">Result</span> registerResult <span class=\"token operator\">=</span> ucenterClient<span class=\"token punctuation\">.</span><span class=\"token function\">countRegister</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Integer</span> countRegister <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">)</span>registerResult<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"countRegister\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 把获取数据添加数据库，统计分析表里面</span>\n    <span class=\"token class-name\">StatisticsDaily</span> sta <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StatisticsDaily</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setRegisterNum</span><span class=\"token punctuation\">(</span>countRegister<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//注册人数</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setDateCalculated</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//统计日期</span>\n\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setVideoViewNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setLoginNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setCourseNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>sta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>除此之外，启用定时任务实现每天统计<br>启动类添加注释</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@EnableScheduling</span> <span class=\"token comment\">//定时任务注解</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>创建ScheduleTask类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduleTask</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">StatisticsDailyService</span> staService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* 定时器测试\n 0/5 * * * * ?表示每隔5秒执行一次这个方法\n    @Scheduled(cron = \"0/5 * * * * ?\")\n    public void task1() {\n        System.out.println(\"********************task1执行了...\");\n    }\n*/</span>\n\n    <span class=\"token comment\">// 在每天凌晨1点，把前一天的数据进行数据查询添加</span>\n    <span class=\"token annotation punctuation\">@Scheduled</span><span class=\"token punctuation\">(</span>cron <span class=\"token operator\">=</span> <span class=\"token string\">\"0 0 1 * * ?\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">task2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        staService<span class=\"token punctuation\">.</span><span class=\"token function\">registerCount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">addDays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"前台用户系统\"><a href=\"#前台用户系统\" class=\"headerlink\" title=\"前台用户系统\"></a>前台用户系统</h2><h3 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h3><p>Nuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用,也可充当静态站点引擎生成静态站点应用,具有优雅的代码结构分层和热加载等特性。<br>官方网站：<br><a href=\"https://zh.nuxtjs.org/\">https://zh.nuxtjs.org/</a><br>幻灯片插件：vue-awesome-swiper</p>\n<h3 id=\"首页\"><a href=\"#首页\" class=\"headerlink\" title=\"首页\"></a>首页</h3><p>展示轮播图、热门课程等信息，然后对用户展示网站幻灯片、热门课程、名师等内容，为了提高访问速度使用了Redis缓存首页数据。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/HomePage.png\"></p>\n<h3 id=\"注册和登录\"><a href=\"#注册和登录\" class=\"headerlink\" title=\"注册和登录\"></a>注册和登录</h3><p>注册功能需要用户通过填写昵称、手机号，然后接收验证码的方式进行注册。如果使用手机号码注册，系统会通过阿里云短信服务向该用户发送短信验证码，后端保存该验证码来和用户输入的验证码进行比对。如果用户是以扫描微信二维码的方式进行注册，后端接收到该请求后会将页面重定向至二维码页面，扫码之后获得微信官方返回的临时票据，使用票据可以获得该用户微信账号的访问凭证和唯一标识，然后请求微信官方的接口地址得到该用户的账号信息，并将其持久化存储于数据库中，实现微信扫码注册功能。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/RegisterPage.png\"><br>值得一提的是使用Redis解决验证码有效时间问题</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// springboot整合的Redis模板对象</span>\n<span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> redisTemplate<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 发送短信的方法</span>\n<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send/{phone}\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">sendMsm</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1.从redis获取验证码，如果获取到直接返回</span>\n    <span class=\"token class-name\">String</span> code <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 2.如果redis获取不到，进行阿里云发送</span>\n    <span class=\"token comment\">// 生成随机值，传递阿里云进行发送</span>\n    code <span class=\"token operator\">=</span> <span class=\"token class-name\">RandomUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFourBitRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> param <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    param<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">,</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用service发送短信的方法</span>\n    <span class=\"token keyword\">boolean</span> isSend <span class=\"token operator\">=</span> msmService<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">,</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isSend<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 发送成功，把发送成功验证码放到redis里面</span>\n        <span class=\"token comment\">// 设置有效时间</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">,</span>code<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"短信发送失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"课程列表\"><a href=\"#课程列表\" class=\"headerlink\" title=\"课程列表\"></a>课程列表</h3><p>课程列表，展示上架课程，对不同种类的课程进行了分类，可以按照销量、发布时间、售价来对课程列表进行排序。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseSchedule.png\"><br>后端处理条件分页</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 1.条件查询带分页查询课程</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getCourseFrontList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EduCourse</span><span class=\"token punctuation\">&gt;</span></span> pageCourse<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CourseFrontVo</span> courseFrontVo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EduCourse</span><span class=\"token punctuation\">&gt;</span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 判断条件值是否为空，不为空拼接</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectParentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//一级分类</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subject_parent_id\"</span><span class=\"token punctuation\">,</span> courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectParentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">//二级分类</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subject_id\"</span><span class=\"token punctuation\">,</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getBuyCountSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">//关注度</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"buy_count\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getGmtCreateSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">//最新</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gmt_create\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getPriceSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">//价格</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 只获取发布状态的课程</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Normal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>pageCourse<span class=\"token punctuation\">,</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EduCourse</span><span class=\"token punctuation\">&gt;</span></span> records <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> current <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> pages <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> size <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> total <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> hasNext <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> hasPrevious <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">hasPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 把分页数据获取出来，放到map集合</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"items\"</span><span class=\"token punctuation\">,</span> records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pages\"</span><span class=\"token punctuation\">,</span> pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total\"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hasNext\"</span><span class=\"token punctuation\">,</span> hasNext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hasPrevious\"</span><span class=\"token punctuation\">,</span> hasPrevious<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// map返回</span>\n    <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"课程详情\"><a href=\"#课程详情\" class=\"headerlink\" title=\"课程详情\"></a>课程详情</h3><p>课程详情页，包含课程基本信息、分类、讲师等内容，课程分为免费和付费，如果是付费课程，那么前端的“立即观看”按钮会变为“立即购买”按钮，并且在该页面用户可以发表对该课程的评论。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseDetail.png\"></p>\n<h3 id=\"视频播放\"><a href=\"#视频播放\" class=\"headerlink\" title=\"视频播放\"></a>视频播放</h3><p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/VodPlayer.png\"></p>\n<h4 id=\"获取播放地址\"><a href=\"#获取播放地址\" class=\"headerlink\" title=\"获取播放地址\"></a>获取播放地址</h4><p>参考文档：<a href=\"https://help.aliyun.com/document_detail/61064.html\">https://help.aliyun.com/document_detail/61064.html</a><br>前面的 03-使用服务端SDK 介绍了如何获取非加密视频的播放地址。直接使用03节的例子获取加密视频播放地址会返回如下错误信息<br>Currently only the AliyunVoDEncryption stream exists, you must use the Aliyun player to play or set the value of ResultType to Multiple.<br>目前只有AliyunVoDEncryption流存在，您必须使用Aliyun player来播放或将ResultType的值设置为Multiple。<br>因此在testGetPlayInfo测试方法中添加 ResultType 参数，并设置为true  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">privateParams.put(\"ResultType\", \"Multiple\");<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此种方式获取的视频文件不能直接播放，必须使用阿里云播放器播放</p>\n<h4 id=\"视频播放器\"><a href=\"#视频播放器\" class=\"headerlink\" title=\"视频播放器\"></a>视频播放器</h4><p>参考文档：<a href=\"https://help.aliyun.com/document_detail/61109.html\">https://help.aliyun.com/document_detail/61109.html</a></p>\n<p><strong>视频播放器介绍</strong><br>阿里云播放器SDK（ApsaraVideo Player SDK）是阿里视频服务的重要一环，除了支持点播和直播的基础播放功能外，深度融合视频云业务，如支持视频的加密播放、安全下载、清晰度切换、直播答题等业务场景，为用户提供简单、快速、安全、稳定的视频播放服务。</p>\n<p><strong>集成视频播放器</strong><br>参考文档：<a href=\"https://help.aliyun.com/document_detail/51991.html\">https://help.aliyun.com/document_detail/51991.html</a><br>参考 【播放器简单使用说明】一节<br>引入脚本文件和css文件</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;link rel=<span class=\"token string\">\"stylesheet\"</span> href=<span class=\"token string\">\"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css\"</span> /&gt;\n&lt;script charset=<span class=\"token string\">\"utf-8\"</span> type=<span class=\"token string\">\"text/javascript\"</span> src=<span class=\"token string\">\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"</span>&gt;&lt;/script&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>初始化视频播放器</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prism-player<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>J_prismPlayer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Aliplayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'J_prismPlayer'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">autoplay</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">cover</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://liveroom-img.oss-cn-qingdao.aliyuncs.com/logo.png'</span><span class=\"token punctuation\">,</span>  \n            <span class=\"token comment\">//播放配置</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'播放器创建好了。'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>1. 播放地址播放</strong><br>在Aliplayer的配置参数中添加如下属性</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">//播放方式一：支持播放地址播放,此播放优先级最高，此种方式不能播放加密视频\nsource : '你的视频播放地址',<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>启动浏览器运行，测试视频的播放</p>\n<p><strong>2. 播放凭证播放（推荐）</strong><br>阿里云播放器支持通过播放凭证自动换取播放地址进行播放，接入方式更为简单，且安全性更高。播放凭证默认时效为100秒（最大为3000秒），只能用于获取指定视频的播放地址，不能混用或重复使用。如果凭证过期则无法获取播放地址，需要重新获取凭证。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">encryptType:'1',//如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\nvid : '视频id',\nplayauth : '视频授权码',<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>注意：播放凭证有过期时间，默认值：100秒 。取值范围：100~3000。<br>设置播放凭证的有效期<br>在获取播放凭证的测试用例中添加如下代码  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">request.setAuthInfoTimeout(200L);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在线配置参考：<a href=\"https://player.alicdn.com/aliplayer/setting/setting.html\">https://player.alicdn.com/aliplayer/setting/setting.html</a></p>\n<h4 id=\"后端获取播放凭证\"><a href=\"#后端获取播放凭证\" class=\"headerlink\" title=\"后端获取播放凭证\"></a>后端获取播放凭证</h4><p><strong>播放组件相关文档</strong><br>集成文档：<a href=\"https://help.aliyun.com/document_detail/51991.html?spm=a2c4g.11186623.2.39.478e192b8VSdEn\">https://help.aliyun.com/document_detail/51991.html?spm=a2c4g.11186623.2.39.478e192b8VSdEn</a><br>在线配置：<a href=\"https://player.alicdn.com/aliplayer/setting/setting.html\">https://player.alicdn.com/aliplayer/setting/setting.html</a><br>功能展示：<a href=\"https://player.alicdn.com/aliplayer/presentation/index.html\">https://player.alicdn.com/aliplayer/presentation/index.html</a>  </p>\n<h3 id=\"整合阿里云视频播放器\"><a href=\"#整合阿里云视频播放器\" class=\"headerlink\" title=\"整合阿里云视频播放器\"></a>整合阿里云视频播放器</h3><h4 id=\"后端-1\"><a href=\"#后端-1\" class=\"headerlink\" title=\"后端\"></a>后端</h4><p>修改VideoVo</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VideoVo</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> videoSourceId<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//视频id</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>VodController</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 根据视频id获取视频凭证</span>\n<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getPlayAuth/{id}\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 创建初始化对象</span>\n        <span class=\"token class-name\">DefaultAcsClient</span> client <span class=\"token operator\">=</span>\n                <span class=\"token class-name\">InitVodClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">initVodClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_ID</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_SECRET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 创建获取凭证request和response对象</span>\n        <span class=\"token class-name\">GetVideoPlayAuthRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetVideoPlayAuthRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 向request设置视频id</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setVideoId</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 调用方法得到凭证</span>\n        <span class=\"token class-name\">GetVideoPlayAuthResponse</span> response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getAcsResponse</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> playAuth <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"playAuth\"</span><span class=\"token punctuation\">,</span>playAuth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EduException</span><span class=\"token punctuation\">(</span><span class=\"token number\">20001</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"获取凭证失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"前端-1\"><a href=\"#前端-1\" class=\"headerlink\" title=\"前端\"></a>前端</h4><p>api<br>vod.js</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> request <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/request'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vid</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/eduvod/video/getPlayAuth/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>vid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>创建新的layouts<br>video.vue</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>guli-player<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>head<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>在线教育<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>~/assets/img/logo.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>在线教育<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt</span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">html,\nbody</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.head</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.head .logo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>_id.vue<br>点击小节携带视频id跳转</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>/player/'+video.videoSourceId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>新建Page/player/_vid.vue  </p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token comment\">&lt;!-- 阿里云视频播放器样式 --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token comment\">&lt;!-- 定义播放器dom --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>J_prismPlayer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prism-player<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">import</span> vod <span class=\"token keyword\">from</span> <span class=\"token string\">'@/api/vod'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> <span class=\"token string\">'video'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 使用video布局</span>\n  <span class=\"token function\">asyncData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> params<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> vod<span class=\"token punctuation\">.</span><span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>vid<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">playAuth</span><span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>playAuth<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">vid</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>vid\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Aliplayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'J_prismPlayer'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">vid</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vid<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 视频id</span>\n      <span class=\"token literal-property property\">playauth</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playAuth<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 播放凭证</span>\n      <span class=\"token comment\">// encryptType: '1', // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'500px'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'播放器创建成功'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>排错</p>\n<blockquote>\n<p>先看看播放器的js有没有引入<br>摁下F12，在网络中（network）查看，如果没有可以尝试在nuxt.config.js文件中的head中添加。<br>不要删除原_vid.vue中的</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>把它放到<code>&lt;template&gt;&lt;/template&gt;</code>标签外</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">head</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">script</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">src</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"名师列表\"><a href=\"#名师列表\" class=\"headerlink\" title=\"名师列表\"></a>名师列表</h3><p>得到所有讲师信息，显示所有名师的头像、名称、简介内容。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherList.png\"></p>\n<h3 id=\"讲师详情\"><a href=\"#讲师详情\" class=\"headerlink\" title=\"讲师详情\"></a>讲师详情</h3><p>在名师列表页可以选择不同讲师的卡片，通过携带讲师id请求后端接口来查询该讲师的信息和所授课程，页面中展示了名师的详细信息和所授课程。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherDetail.png\"></p>\n<h3 id=\"订单模块\"><a href=\"#订单模块\" class=\"headerlink\" title=\"订单模块\"></a>订单模块</h3><p>课程支付，用户只有登录后才能购买对应课程。购买会生成课程订单和微信支付的二维码，在此支付期间每隔3秒会查询支付状态，只有扫码成功后才更新数据库中该订单的支付状态，一旦查询支付状态为“已支付”才能为用户开通课程观看权限。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/OrderPay.png\"><br>服务实现代码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">OrderService</span> orderService<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 生成微信支付二维码接口</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span> <span class=\"token function\">createNative</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> orderNo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 1.根据订单号查询订单信息</span>\n        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Order</span><span class=\"token punctuation\">&gt;</span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"order_no\"</span><span class=\"token punctuation\">,</span>orderNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Order</span> order <span class=\"token operator\">=</span> orderService<span class=\"token punctuation\">.</span><span class=\"token function\">getOne</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 2.使用map设置生成二维码需要的参数</span>\n        <span class=\"token class-name\">Map</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"appid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wx74862e0dfcf69954\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mch_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1558950191\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nonce_str\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">WXPayUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">generateNonceStr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getCourseTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out_trade_no\"</span><span class=\"token punctuation\">,</span> orderNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_fee\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalFee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigDecimal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"100\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">longValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spbill_create_ip\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notify_url\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://guli.shop/api/order/weixinPay/weixinNotify\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trade_type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"NATIVE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 3.发送httpClient请求，传递参数xml格式，微信支付提供的固定地址</span>\n        <span class=\"token class-name\">HttpClient</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.mch.weixin.qq.com/pay/unifiedorder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置xml格式的参数</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">setXmlParam</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WXPayUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">generateSignedXml</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token string\">\"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">setHttps</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 执行请求发送</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 4.得到发送请求返回的结果</span>\n        <span class=\"token comment\">// 返回内容，是使用xml格式返回</span>\n        <span class=\"token class-name\">String</span> xml <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 把xml格式转换map集合，把map集合返回</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> resultMap <span class=\"token operator\">=</span> <span class=\"token class-name\">WXPayUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">xmlToMap</span><span class=\"token punctuation\">(</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//最终返回数据的封装</span>\n        <span class=\"token class-name\">Map</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out_trade_no\"</span><span class=\"token punctuation\">,</span> orderNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"course_id\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getCourseId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_fee\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalFee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result_code\"</span><span class=\"token punctuation\">,</span> resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result_code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 返回二维码操作状态码</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code_url\"</span><span class=\"token punctuation\">,</span> resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code_url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//二维码地址</span>\n\n        <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EduException</span><span class=\"token punctuation\">(</span><span class=\"token number\">20001</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"生成二维码失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"项目仓库\"><a href=\"#项目仓库\" class=\"headerlink\" title=\"项目仓库\"></a>项目仓库</h2><p>后端：</p>\n<ul>\n<li><a href=\"https://github.com/InvictusEd/online-education-platform-backend\">https://github.com/InvictusEd/online-education-platform-backend</a></li>\n</ul>\n<p>前端：</p>\n<ul>\n<li><a href=\"https://github.com/InvictusEd/online-education-platform-frontend-management\">https://github.com/InvictusEd/online-education-platform-frontend-management</a>  </li>\n<li><a href=\"https://github.com/InvictusEd/online-education-platform-frontend\">https://github.com/InvictusEd/online-education-platform-frontend</a></li>\n</ul>\n<h2 id=\"开发日志以及论文成果\"><a href=\"#开发日志以及论文成果\" class=\"headerlink\" title=\"开发日志以及论文成果\"></a>开发日志以及论文成果</h2><p>链接：<a href=\"https://pan.baidu.com/s/19poiZHY7C4HyjostpuOj2Q?pwd=yyds\">https://pan.baidu.com/s/19poiZHY7C4HyjostpuOj2Q?pwd=yyds</a><br>提取码：yyds \n </p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h2><p>由于在开发该系统时，并未有书写开发文档的经验，而仅仅是记录了每一天的开发日志，但开发日志多达21篇，因此把所有开发日志放在博客当中是影响读者观感的，因此本篇文章仅仅是作为总结，如果有具体需要，请联系我，或者访问我的GitHub仓库或百度云盘。</p>\n<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>在线教育平台采用B2C模式，Spring Cloud搭建整个微服务架构，后台采用Spring Boot+MySQL+MyBatis-Plus+Redis，并且结合Vue前端框架，采用Nuxt服务端渲染技术来优化前端页面，运用阿里云视频点播技术。在管理系统的后台中，运用Spring Security进行用户认证和授权，以确保对不同用户权限的细致划分。在用户的登录系统方面，则采纳了手机验证码注册和登录方式，并运用JWT生成Token以实现便捷的单点登录。此外，用户通过微信支付来进行课程购买。</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><h3 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h3><ul>\n<li>Spring Boot</li>\n<li>Spring Cloud</li>\n<li>MySQL</li>\n<li>MyBatis-Plus</li>\n<li>Redis</li>\n<li>Spring Security</li>\n<li>EasyExcel</li>\n</ul>\n<h3 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h3><ul>\n<li>Vue</li>\n<li>Nuxt</li>\n<li>ElementUI</li>\n<li>Axios</li>\n<li>ECharts</li>\n</ul>\n<h2 id=\"后台管理系统\"><a href=\"#后台管理系统\" class=\"headerlink\" title=\"后台管理系统\"></a>后台管理系统</h2><p>在线教育平台后台管理系统的前端使用的是vue-admin-template模板<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/BackendLogin.jpg\"></p>\n<h3 id=\"讲师管理\"><a href=\"#讲师管理\" class=\"headerlink\" title=\"讲师管理\"></a>讲师管理</h3><p>对讲师进行增删改查操作，后端集成了阿里云OSS，用于讲师头像的上传。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/AdminTeachers.png\"><br><strong>开发中值得一提的：</strong><br>vue-router导航切换 时，如果两个路由都渲染同个组件，组件会重（chong）用,<br>组件的生命周期钩子（created）不会再被调用, 使得组件的一些数据无法根据 path的改变得到更新<br>因此：<br>1、我们可以在watch中监听路由的变化，当路由变化时，重新调用created中的内容<br>2、在init方法中我们判断路由的变化，如果是修改路由，则从api获取表单数据，  </p>\n<p>如果是新增路由，则重新初始化表单数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 监听</span>\n    <span class=\"token function\">$route</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 路由变化方式，路由发生变化，方法就会执行</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 页面渲染之前执行</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 判断路径是否有id值</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 从路径获取id值</span>\n        <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id\n        <span class=\"token comment\">// 调用根据id查询的方法</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 路径没有id值，做添加</span>\n        <span class=\"token comment\">// 清空表单</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>teacher <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"课程分类管理\"><a href=\"#课程分类管理\" class=\"headerlink\" title=\"课程分类管理\"></a>课程分类管理</h3><p>前端上传课程Excel表格，后端通过EasyExcel来处理表格并将其持久化存储于数据库中。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseExcel.png\"><br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseCategory.png\"></p>\n<h3 id=\"课程管理\"><a href=\"#课程管理\" class=\"headerlink\" title=\"课程管理\"></a>课程管理</h3><p>可以查看课程详细信息并管理课程，如果是发布课程需要进行三个步骤，分别是“填写课程基本信息”、“创建课程大纲”、“最终发布”，需要按照该执行顺序去操作才能完整发布课程。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseAdmin.png\"><br><strong>值得一提的是课程视频上传的实现</strong>  </p>\n<ol>\n<li><p>引入依赖<br>引入依赖存在问题<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/DependencyProblem.png\"><br>mvn需要配置环境变量，这样才能在命令行中使用mvn命令<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/MavenPath.png\"><br>上传视频<br>参考官网压缩包里面的sample示例代码改造<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/ExampleCode.png\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> accessKeyId <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> accessKeySecret <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> title <span class=\"token operator\">=</span> <span class=\"token string\">\"6 - How Does Project Submission Work - upload by sdk\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 上传之后文件名称</span>\n        <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> <span class=\"token string\">\"E:\\\\6 - What If I Want to Move Faster.mp4\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 本地文件路径和名称</span>\n\n        <span class=\"token comment\">// 上传视频的方法</span>\n        <span class=\"token class-name\">UploadVideoRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadVideoRequest</span><span class=\"token punctuation\">(</span>accessKeyId<span class=\"token punctuation\">,</span> accessKeySecret<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* 可指定分片上传时每个分片的大小，默认为2M字节 */</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setPartSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* 可指定分片上传时的并发线程数，默认为1，(注：该配置会占用服务器CPU资源，需根据服务器情况指定）*/</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setTaskNum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UploadVideoImpl</span> uploader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadVideoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UploadVideoResponse</span> response <span class=\"token operator\">=</span> uploader<span class=\"token punctuation\">.</span><span class=\"token function\">uploadVideo</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">isSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VideoId=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">/* 如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因 */</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VideoId=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ErrorCode=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ErrorMessage=\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>配置文件</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 服务端口</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8082</span>\n\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 服务名</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> service<span class=\"token punctuation\">-</span>vod\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 环境设置：dev、test、prod</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev\n  <span class=\"token key atrule\">servlet</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">multipart</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># 最大上传单个文件大小：默认1M</span>\n      <span class=\"token key atrule\">max-file-size</span><span class=\"token punctuation\">:</span> 1024MB\n      <span class=\"token comment\"># 最大总上传的数据大小：默认10MB</span>\n      <span class=\"token key atrule\">max-request-size</span><span class=\"token punctuation\">:</span> 1024MB\n\n<span class=\"token comment\"># 阿里云 vod</span>\n<span class=\"token comment\"># 不同的服务器，地址不同</span>\n<span class=\"token key atrule\">aliyun</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">vod</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">keyid</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">keysecret</span><span class=\"token punctuation\">:</span> \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>VodApplication</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span><span class=\"token punctuation\">(</span>exclude <span class=\"token operator\">=</span> <span class=\"token class-name\">DataSourceAutoConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"com.invictusqiu\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VodApplication</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VodApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>工具类<br>常量读取工具类，读取配置文件的内容</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConstantVodUtils</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">InitializingBean</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;aliyun.vod.file.keyid&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> keyid<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;aliyun.vod.file.keysecret&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> keysecret<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 定义公开常量</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">ACCESS_KEY_ID</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">ACCESS_KEY_SECRET</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token constant\">ACCESS_KEY_ID</span> <span class=\"token operator\">=</span> keyid<span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">ACCESS_KEY_SECRET</span> <span class=\"token operator\">=</span> keysecret<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>控制器</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/eduvod/video\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@CrossOrigin</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VodController</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">VodService</span> vodService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 上传视频到阿里云</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uploadAlyVideo\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">uploadAlyVideo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 返回上传视频id</span>\n        <span class=\"token class-name\">String</span> videoId <span class=\"token operator\">=</span> vodService<span class=\"token punctuation\">.</span><span class=\"token function\">uploadVideoAly</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"videoId\"</span><span class=\"token punctuation\">,</span>videoId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>服务实现类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VodServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">VodService</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// 上传视频到阿里云（采用流式上传接口）</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">uploadVideoAly</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// accessKeyId, accessKeySecret</span>\n            <span class=\"token comment\">// fileName: 上传文件原始名称</span>\n            <span class=\"token comment\">// 01.03.09.mp4</span>\n            <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// title: 上传之后显示名称</span>\n            <span class=\"token comment\">// 去除最后一个.</span>\n            <span class=\"token class-name\">String</span> title <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// inputStream: 上传文件输入流</span>\n            <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">UploadStreamRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadStreamRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_ID</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_SECRET</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">UploadVideoImpl</span> uploader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadVideoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">UploadStreamResponse</span> response <span class=\"token operator\">=</span> uploader<span class=\"token punctuation\">.</span><span class=\"token function\">uploadStream</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">String</span> videoId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">isSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                videoId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因</span>\n                videoId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> videoId<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>前端<br>chapter.vue</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-form-item</span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>上传视频<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-upload</span>\n  <span class=\"token attr-name\">:on-success</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleVodUploadSuccess<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:on-remove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleVodRemove<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:before-remove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>beforeVodRemove<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:on-exceed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleUploadExceed<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:file-list</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileList<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>BASE_API + '/eduvod/video/uploadAlyVideo'<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:limit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>upload-demo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-button</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>上传视频<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-tooltip</span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right-end<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>最大支持1G，<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n      支持3GP、ASF、AVI、DAT、DV、FLV、F4V、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n      GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n      MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n      SWF、TS、VOB、WMV、WEBM 等视频格式上传<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-question<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-tooltip</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-upload</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-form-item</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">fileList</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 上传视频的列表</span>\n<span class=\"token constant\">BASE_API</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BASE_API</span> <span class=\"token comment\">// 接口API地址</span>\n\n<span class=\"token comment\">// 成功回调</span>\n<span class=\"token function\">handleVodUploadSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoSourceId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>videoId\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// 视图上传多于一个视频</span>\n<span class=\"token function\">handleUploadExceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span><span class=\"token string\">'想要重新上传视频，请先删除已上传的视频'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>nginx配置</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">location ~ &#x2F;eduvod&#x2F; &#123;\n    proxy_pass http:&#x2F;&#x2F;localhost:8082;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>配置nginx上传文件大小，否则上传时会有 413 (Request Entity Too Large) 异常<br>打开nginx主配置文件nginx.conf，找到http{}，添加</p>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">client_max_body_size 1024m;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>如果数据库没有视频名称<br>修改前端</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 上传视频成功调用的方法</span>\n<span class=\"token function\">handleVodUploadSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 上传视频id赋值</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoSourceId <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>videoId\n  <span class=\"token comment\">// 上传视频名称赋值</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>videoOriginalName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>name\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"统计分析\"><a href=\"#统计分析\" class=\"headerlink\" title=\"统计分析\"></a>统计分析</h3><p>统计分析页面，前端页面使用Echarts组件库实现图表展示，用户可以选择指定日期范围生成统计数据，包括范围内的用户登录数和注册数，以及课程播放数等数据。</p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/StatisticalAnalysis.png\"><br>该模块使用了Feign远程调用<br>比如调用接口UcenterClient</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"service-ucenter\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UcenterClient</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// 查询某一天注册人数</span>\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/educenter/member/countRegister/&#123;day&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">countRegister</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>StatisticsDailyServiceImpl服务实现类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">UcenterClient</span> ucenterClient<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 统计某一天注册人数，生成统计数据</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerCount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> day<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// 添加记录之前删除表相同日期的数据</span>\n    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StatisticsDaily</span><span class=\"token punctuation\">></span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"date_calculated\"</span><span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 远程调用得到某一天注册人数</span>\n    <span class=\"token class-name\">Result</span> registerResult <span class=\"token operator\">=</span> ucenterClient<span class=\"token punctuation\">.</span><span class=\"token function\">countRegister</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Integer</span> countRegister <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">)</span>registerResult<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"countRegister\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 把获取数据添加数据库，统计分析表里面</span>\n    <span class=\"token class-name\">StatisticsDaily</span> sta <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StatisticsDaily</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setRegisterNum</span><span class=\"token punctuation\">(</span>countRegister<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//注册人数</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setDateCalculated</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//统计日期</span>\n\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setVideoViewNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setLoginNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sta<span class=\"token punctuation\">.</span><span class=\"token function\">setCourseNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RandomUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>sta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>除此之外，启用定时任务实现每天统计<br>启动类添加注释</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@EnableScheduling</span> <span class=\"token comment\">//定时任务注解</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>创建ScheduleTask类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScheduleTask</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">StatisticsDailyService</span> staService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* 定时器测试\n 0/5 * * * * ?表示每隔5秒执行一次这个方法\n    @Scheduled(cron = \"0/5 * * * * ?\")\n    public void task1() &#123;\n        System.out.println(\"********************task1执行了...\");\n    &#125;\n*/</span>\n\n    <span class=\"token comment\">// 在每天凌晨1点，把前一天的数据进行数据查询添加</span>\n    <span class=\"token annotation punctuation\">@Scheduled</span><span class=\"token punctuation\">(</span>cron <span class=\"token operator\">=</span> <span class=\"token string\">\"0 0 1 * * ?\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">task2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        staService<span class=\"token punctuation\">.</span><span class=\"token function\">registerCount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">addDays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"前台用户系统\"><a href=\"#前台用户系统\" class=\"headerlink\" title=\"前台用户系统\"></a>前台用户系统</h2><h3 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h3><p>Nuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用,也可充当静态站点引擎生成静态站点应用,具有优雅的代码结构分层和热加载等特性。<br>官方网站：<br><a href=\"https://zh.nuxtjs.org/\">https://zh.nuxtjs.org/</a><br>幻灯片插件：vue-awesome-swiper</p>\n<h3 id=\"首页\"><a href=\"#首页\" class=\"headerlink\" title=\"首页\"></a>首页</h3><p>展示轮播图、热门课程等信息，然后对用户展示网站幻灯片、热门课程、名师等内容，为了提高访问速度使用了Redis缓存首页数据。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/HomePage.png\"></p>\n<h3 id=\"注册和登录\"><a href=\"#注册和登录\" class=\"headerlink\" title=\"注册和登录\"></a>注册和登录</h3><p>注册功能需要用户通过填写昵称、手机号，然后接收验证码的方式进行注册。如果使用手机号码注册，系统会通过阿里云短信服务向该用户发送短信验证码，后端保存该验证码来和用户输入的验证码进行比对。如果用户是以扫描微信二维码的方式进行注册，后端接收到该请求后会将页面重定向至二维码页面，扫码之后获得微信官方返回的临时票据，使用票据可以获得该用户微信账号的访问凭证和唯一标识，然后请求微信官方的接口地址得到该用户的账号信息，并将其持久化存储于数据库中，实现微信扫码注册功能。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/RegisterPage.png\"><br>值得一提的是使用Redis解决验证码有效时间问题</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// springboot整合的Redis模板对象</span>\n<span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> redisTemplate<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 发送短信的方法</span>\n<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send/&#123;phone&#125;\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">sendMsm</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 1.从redis获取验证码，如果获取到直接返回</span>\n    <span class=\"token class-name\">String</span> code <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 2.如果redis获取不到，进行阿里云发送</span>\n    <span class=\"token comment\">// 生成随机值，传递阿里云进行发送</span>\n    code <span class=\"token operator\">=</span> <span class=\"token class-name\">RandomUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFourBitRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> param <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    param<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code\"</span><span class=\"token punctuation\">,</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 调用service发送短信的方法</span>\n    <span class=\"token keyword\">boolean</span> isSend <span class=\"token operator\">=</span> msmService<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">,</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isSend<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 发送成功，把发送成功验证码放到redis里面</span>\n        <span class=\"token comment\">// 设置有效时间</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">,</span>code<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"短信发送失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"课程列表\"><a href=\"#课程列表\" class=\"headerlink\" title=\"课程列表\"></a>课程列表</h3><p>课程列表，展示上架课程，对不同种类的课程进行了分类，可以按照销量、发布时间、售价来对课程列表进行排序。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseSchedule.png\"><br>后端处理条件分页</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 1.条件查询带分页查询课程</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getCourseFrontList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EduCourse</span><span class=\"token punctuation\">></span></span> pageCourse<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CourseFrontVo</span> courseFrontVo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EduCourse</span><span class=\"token punctuation\">></span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 判断条件值是否为空，不为空拼接</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectParentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//一级分类</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subject_parent_id\"</span><span class=\"token punctuation\">,</span> courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectParentId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">//二级分类</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"subject_id\"</span><span class=\"token punctuation\">,</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getBuyCountSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">//关注度</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"buy_count\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getGmtCreateSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">//最新</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gmt_create\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>courseFrontVo<span class=\"token punctuation\">.</span><span class=\"token function\">getPriceSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">//价格</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 只获取发布状态的课程</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Normal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>pageCourse<span class=\"token punctuation\">,</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EduCourse</span><span class=\"token punctuation\">></span></span> records <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> current <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> pages <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> size <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> total <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> hasNext <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> hasPrevious <span class=\"token operator\">=</span> pageCourse<span class=\"token punctuation\">.</span><span class=\"token function\">hasPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 把分页数据获取出来，放到map集合</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"items\"</span><span class=\"token punctuation\">,</span> records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pages\"</span><span class=\"token punctuation\">,</span> pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total\"</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hasNext\"</span><span class=\"token punctuation\">,</span> hasNext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hasPrevious\"</span><span class=\"token punctuation\">,</span> hasPrevious<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// map返回</span>\n    <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"课程详情\"><a href=\"#课程详情\" class=\"headerlink\" title=\"课程详情\"></a>课程详情</h3><p>课程详情页，包含课程基本信息、分类、讲师等内容，课程分为免费和付费，如果是付费课程，那么前端的“立即观看”按钮会变为“立即购买”按钮，并且在该页面用户可以发表对该课程的评论。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/CourseDetail.png\"></p>\n<h3 id=\"视频播放\"><a href=\"#视频播放\" class=\"headerlink\" title=\"视频播放\"></a>视频播放</h3><p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/VodPlayer.png\"></p>\n<h4 id=\"获取播放地址\"><a href=\"#获取播放地址\" class=\"headerlink\" title=\"获取播放地址\"></a>获取播放地址</h4><p>参考文档：<a href=\"https://help.aliyun.com/document_detail/61064.html\">https://help.aliyun.com/document_detail/61064.html</a><br>前面的 03-使用服务端SDK 介绍了如何获取非加密视频的播放地址。直接使用03节的例子获取加密视频播放地址会返回如下错误信息<br>Currently only the AliyunVoDEncryption stream exists, you must use the Aliyun player to play or set the value of ResultType to Multiple.<br>目前只有AliyunVoDEncryption流存在，您必须使用Aliyun player来播放或将ResultType的值设置为Multiple。<br>因此在testGetPlayInfo测试方法中添加 ResultType 参数，并设置为true  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">privateParams.put(&quot;ResultType&quot;, &quot;Multiple&quot;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此种方式获取的视频文件不能直接播放，必须使用阿里云播放器播放</p>\n<h4 id=\"视频播放器\"><a href=\"#视频播放器\" class=\"headerlink\" title=\"视频播放器\"></a>视频播放器</h4><p>参考文档：<a href=\"https://help.aliyun.com/document_detail/61109.html\">https://help.aliyun.com/document_detail/61109.html</a></p>\n<p><strong>视频播放器介绍</strong><br>阿里云播放器SDK（ApsaraVideo Player SDK）是阿里视频服务的重要一环，除了支持点播和直播的基础播放功能外，深度融合视频云业务，如支持视频的加密播放、安全下载、清晰度切换、直播答题等业务场景，为用户提供简单、快速、安全、稳定的视频播放服务。</p>\n<p><strong>集成视频播放器</strong><br>参考文档：<a href=\"https://help.aliyun.com/document_detail/51991.html\">https://help.aliyun.com/document_detail/51991.html</a><br>参考 【播放器简单使用说明】一节<br>引入脚本文件和css文件</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;link rel=<span class=\"token string\">\"stylesheet\"</span> href=<span class=\"token string\">\"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css\"</span> />\n&lt;script charset=<span class=\"token string\">\"utf-8\"</span> type=<span class=\"token string\">\"text/javascript\"</span> src=<span class=\"token string\">\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"</span>>&lt;/script><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>初始化视频播放器</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prism-player<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>J_prismPlayer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n        <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Aliplayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'J_prismPlayer'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">autoplay</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">cover</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://liveroom-img.oss-cn-qingdao.aliyuncs.com/logo.png'</span><span class=\"token punctuation\">,</span>  \n            <span class=\"token comment\">//播放配置</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'播放器创建好了。'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>1. 播放地址播放</strong><br>在Aliplayer的配置参数中添加如下属性</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">//播放方式一：支持播放地址播放,此播放优先级最高，此种方式不能播放加密视频\nsource : '你的视频播放地址',<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>启动浏览器运行，测试视频的播放</p>\n<p><strong>2. 播放凭证播放（推荐）</strong><br>阿里云播放器支持通过播放凭证自动换取播放地址进行播放，接入方式更为简单，且安全性更高。播放凭证默认时效为100秒（最大为3000秒），只能用于获取指定视频的播放地址，不能混用或重复使用。如果凭证过期则无法获取播放地址，需要重新获取凭证。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">encryptType:'1',//如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项\nvid : '视频id',\nplayauth : '视频授权码',<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>注意：播放凭证有过期时间，默认值：100秒 。取值范围：100~3000。<br>设置播放凭证的有效期<br>在获取播放凭证的测试用例中添加如下代码  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">request.setAuthInfoTimeout(200L);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在线配置参考：<a href=\"https://player.alicdn.com/aliplayer/setting/setting.html\">https://player.alicdn.com/aliplayer/setting/setting.html</a></p>\n<h4 id=\"后端获取播放凭证\"><a href=\"#后端获取播放凭证\" class=\"headerlink\" title=\"后端获取播放凭证\"></a>后端获取播放凭证</h4><p><strong>播放组件相关文档</strong><br>集成文档：<a href=\"https://help.aliyun.com/document_detail/51991.html?spm=a2c4g.11186623.2.39.478e192b8VSdEn\">https://help.aliyun.com/document_detail/51991.html?spm=a2c4g.11186623.2.39.478e192b8VSdEn</a><br>在线配置：<a href=\"https://player.alicdn.com/aliplayer/setting/setting.html\">https://player.alicdn.com/aliplayer/setting/setting.html</a><br>功能展示：<a href=\"https://player.alicdn.com/aliplayer/presentation/index.html\">https://player.alicdn.com/aliplayer/presentation/index.html</a>  </p>\n<h3 id=\"整合阿里云视频播放器\"><a href=\"#整合阿里云视频播放器\" class=\"headerlink\" title=\"整合阿里云视频播放器\"></a>整合阿里云视频播放器</h3><h4 id=\"后端-1\"><a href=\"#后端-1\" class=\"headerlink\" title=\"后端\"></a>后端</h4><p>修改VideoVo</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VideoVo</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> videoSourceId<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//视频id</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>VodController</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 根据视频id获取视频凭证</span>\n<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getPlayAuth/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 创建初始化对象</span>\n        <span class=\"token class-name\">DefaultAcsClient</span> client <span class=\"token operator\">=</span>\n                <span class=\"token class-name\">InitVodClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">initVodClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_ID</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">ConstantVodUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_KEY_SECRET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 创建获取凭证request和response对象</span>\n        <span class=\"token class-name\">GetVideoPlayAuthRequest</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetVideoPlayAuthRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 向request设置视频id</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function\">setVideoId</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 调用方法得到凭证</span>\n        <span class=\"token class-name\">GetVideoPlayAuthResponse</span> response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getAcsResponse</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> playAuth <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"playAuth\"</span><span class=\"token punctuation\">,</span>playAuth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EduException</span><span class=\"token punctuation\">(</span><span class=\"token number\">20001</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"获取凭证失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"前端-1\"><a href=\"#前端-1\" class=\"headerlink\" title=\"前端\"></a>前端</h4><p>api<br>vod.js</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> request <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/request'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vid</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/eduvod/video/getPlayAuth/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>vid<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'get'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>创建新的layouts<br>video.vue</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>guli-player<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>head<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>在线教育<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>~/assets/img/logo.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>在线教育<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nuxt</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">html,\nbody</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.head</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.head .logo</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.body</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>_id.vue<br>点击小节携带视频id跳转</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>/player/'+video.videoSourceId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>新建Page/player/_vid.vue  </p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- 阿里云视频播放器样式 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- 定义播放器dom --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>J_prismPlayer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prism-player<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> vod <span class=\"token keyword\">from</span> <span class=\"token string\">'@/api/vod'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> <span class=\"token string\">'video'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 使用video布局</span>\n  <span class=\"token function\">asyncData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> params<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> vod<span class=\"token punctuation\">.</span><span class=\"token function\">getPlayAuth</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>vid<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">playAuth</span><span class=\"token operator\">:</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>playAuth<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">vid</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">.</span>vid\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Aliplayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'J_prismPlayer'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">vid</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vid<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 视频id</span>\n      <span class=\"token literal-property property\">playauth</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playAuth<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 播放凭证</span>\n      <span class=\"token comment\">// encryptType: '1', // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token string\">'500px'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">player</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'播放器创建成功'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>排错</p>\n<blockquote>\n<p>先看看播放器的js有没有引入<br>摁下F12，在网络中（network）查看，如果没有可以尝试在nuxt.config.js文件中的head中添加。<br>不要删除原_vid.vue中的</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script charset<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>把它放到<code>&lt;template&gt;&lt;/template&gt;</code>标签外</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">head</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">script</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">src</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"名师列表\"><a href=\"#名师列表\" class=\"headerlink\" title=\"名师列表\"></a>名师列表</h3><p>得到所有讲师信息，显示所有名师的头像、名称、简介内容。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherList.png\"></p>\n<h3 id=\"讲师详情\"><a href=\"#讲师详情\" class=\"headerlink\" title=\"讲师详情\"></a>讲师详情</h3><p>在名师列表页可以选择不同讲师的卡片，通过携带讲师id请求后端接口来查询该讲师的信息和所授课程，页面中展示了名师的详细信息和所授课程。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/TeacherDetail.png\"></p>\n<h3 id=\"订单模块\"><a href=\"#订单模块\" class=\"headerlink\" title=\"订单模块\"></a>订单模块</h3><p>课程支付，用户只有登录后才能购买对应课程。购买会生成课程订单和微信支付的二维码，在此支付期间每隔3秒会查询支付状态，只有扫码成功后才更新数据库中该订单的支付状态，一旦查询支付状态为“已支付”才能为用户开通课程观看权限。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/blog/onlineEducation/OrderPay.png\"><br>服务实现代码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">OrderService</span> orderService<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 生成微信支付二维码接口</span>\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span> <span class=\"token function\">createNative</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> orderNo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 1.根据订单号查询订单信息</span>\n        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Order</span><span class=\"token punctuation\">></span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"order_no\"</span><span class=\"token punctuation\">,</span>orderNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Order</span> order <span class=\"token operator\">=</span> orderService<span class=\"token punctuation\">.</span><span class=\"token function\">getOne</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 2.使用map设置生成二维码需要的参数</span>\n        <span class=\"token class-name\">Map</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"appid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wx74862e0dfcf69954\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mch_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1558950191\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nonce_str\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">WXPayUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">generateNonceStr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getCourseTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out_trade_no\"</span><span class=\"token punctuation\">,</span> orderNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_fee\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalFee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigDecimal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"100\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">longValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spbill_create_ip\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notify_url\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://guli.shop/api/order/weixinPay/weixinNotify\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trade_type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"NATIVE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 3.发送httpClient请求，传递参数xml格式，微信支付提供的固定地址</span>\n        <span class=\"token class-name\">HttpClient</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.mch.weixin.qq.com/pay/unifiedorder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置xml格式的参数</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">setXmlParam</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WXPayUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">generateSignedXml</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token string\">\"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">setHttps</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 执行请求发送</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 4.得到发送请求返回的结果</span>\n        <span class=\"token comment\">// 返回内容，是使用xml格式返回</span>\n        <span class=\"token class-name\">String</span> xml <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 把xml格式转换map集合，把map集合返回</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> resultMap <span class=\"token operator\">=</span> <span class=\"token class-name\">WXPayUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">xmlToMap</span><span class=\"token punctuation\">(</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//最终返回数据的封装</span>\n        <span class=\"token class-name\">Map</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out_trade_no\"</span><span class=\"token punctuation\">,</span> orderNo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"course_id\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getCourseId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"total_fee\"</span><span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalFee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result_code\"</span><span class=\"token punctuation\">,</span> resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result_code\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 返回二维码操作状态码</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code_url\"</span><span class=\"token punctuation\">,</span> resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code_url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//二维码地址</span>\n\n        <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EduException</span><span class=\"token punctuation\">(</span><span class=\"token number\">20001</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"生成二维码失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"项目仓库\"><a href=\"#项目仓库\" class=\"headerlink\" title=\"项目仓库\"></a>项目仓库</h2><p>后端：</p>\n<ul>\n<li><a href=\"https://github.com/InvictusEd/online-education-platform-backend\">https://github.com/InvictusEd/online-education-platform-backend</a></li>\n</ul>\n<p>前端：</p>\n<ul>\n<li><a href=\"https://github.com/InvictusEd/online-education-platform-frontend-management\">https://github.com/InvictusEd/online-education-platform-frontend-management</a>  </li>\n<li><a href=\"https://github.com/InvictusEd/online-education-platform-frontend\">https://github.com/InvictusEd/online-education-platform-frontend</a></li>\n</ul>\n<h2 id=\"开发日志以及论文成果\"><a href=\"#开发日志以及论文成果\" class=\"headerlink\" title=\"开发日志以及论文成果\"></a>开发日志以及论文成果</h2><p>链接：<a href=\"https://pan.baidu.com/s/19poiZHY7C4HyjostpuOj2Q?pwd=yyds\">https://pan.baidu.com/s/19poiZHY7C4HyjostpuOj2Q?pwd=yyds</a><br>提取码：yyds \n </p>\n"},{"title":"Unity游戏引擎-动画系统-骨骼动画","date":"2022-07-28T02:34:18.000Z","img":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/e438e072-0dee-4ab9-909e-bcf263d2b67f.png","top":false,"cover":false,"coverImg":"https://invictusqiu.oss-cn-beijing.aliyuncs.com/e438e072-0dee-4ab9-909e-bcf263d2b67f.png","summary":"本期文章将介绍游戏中的骨骼动画，以及用Unity对骨骼动画进行实践操作","_content":"\n## 骨骼动画\n### 骨骼动画的原理\n游戏里最常用的动画是骨骼动画，骨骼动画的出现是因为传统的关键帧动画存在一些问题。  \n  \n#### 传统关键帧动画存在的问题：  \n>需要保存更多的数据  \n>和游戏环境交互较少  \n>难于控制\n\n由于场景动画比较简单，如果场景里的物体也比较简单，使用关键帧方式保存不会出现大问题。**但是游戏中出现的角色普遍是由很复杂的网格组成，网格顶点数量巨大，角色形变也比较大，保存的时候就需要大量数据，占据存储空间**。  \n\n并且游戏跟普通的三维动画、影片不一样，**游戏中的角色需要和游戏中的环境发生交互**，如果角色的网格点是一些离散的三角形顶点，不包含任何语义信息，也就无法和场景发生交互，比如用手抓起武器，都不知道手该用哪一个顶点表示，导致交互很困难。  \n\n对于更进一步的**运动编辑比较难**，如果我们使用顶点保存关键帧信息，我们有一段走路、跑步运动，而我想得到快走这样一个中间动画，这就变得不现实，我们不能通过两种走路跑步的插值来融合得到。\n\n#### 骨骼动画解决问题：  \n\n使用一个中间介质，**中间介质就是骨架**，而角色的真正外观，也就是三维网格，它是依附于骨架的，进行被动地运动，骨架是主动的变化，而外围我们所看到地网格是由于骨架的变化而被动地变化，所以骨骼动画也被称为**隐式动画**。  \n\n在骨骼动画的播放阶段，由于骨架结构简单，只需要经过简单计算就可以得到骨架的姿态，进而利用网格顶点和骨架上每一骨骼的附属关系信息来计算出每个网格顶点的位置，从而得到最终我们能看见的网格的姿态，生成完整的动画，这种方式就是骨骼动画。 \n \n![骨骼动画](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画01.jpg \"骨骼动画\")  \n\n**骨骼动画的优势**  \n>骨架结构简单，可以高效保存动画的关键帧信息。  \n>\n>骨架本身含有语义信息，可以通过骨架区分出身体的不同部位，从而进行更加灵活的控制，比如我们知道骨架上哪一个骨骼是手部骨骼、腿部骨骼、头部骨骼，从而可以通过控制这些骨骼，来跟周围的环境发生交互。  \n>\n>得到一些实时计算的动画，这些动画没有事先保存。比如如何通过走路跟跑步融合得到快跑，这种情况只能使用骨骼动画的模式。\n\n![骨骼动画](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画02.png)\n骨骼动画在播放时，如上图所示，它是分离的，**骨架用来表示动画信息，周围的人物，我们看得见的网格，是依附于骨架的**。由于人物、脊椎动物，天然是由骨架形成的，所以很适合用骨架来模拟。**构成骨骼动画的完整部分，一部分是骨架，另一部分是跟骨架有映射关系的网格，也称为皮肤，通过控制骨架的运动，来控制相应皮肤的变形，形成角色动画，这就是骨骼动画的播放原理。**  \n\n\n\n## Unity骨骼动画基础实践\n\n### 准备阶段\n在Asset Store上面下载一个具有骨骼动画的模型包，在搜索栏里输入**Unity-Chan**并下载\n![Asset Store](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画03.png)  \n\n然后将下载好的资源包导入到Unity项目工程里面\n![导入资源包](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画04.png)  \n  \n### 实施阶段\n一、将模型拖入到场景视图下面\n![拖入模型](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画05.png)  \n\n二、通过Animator Controller来对骨骼动画模型进行动画状态的控制  \n**在 Project 视图下 Creat 一个 Animator Controller** 起名为 **Girl**。然后把 **Girl** 拖拽到模型的 Animator Controller 属性里面  \n![创建Animator Controller](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画06.png)  \n\n三、双击 Girl 打开这个角色动画的动画状态机界面，可以在里面添加状态，对动画状态进行转换。在 Project 视图下面找到一个动画片段。这里我找到一个等待的的状态，将它拖拽到 Animator Controller窗口底下，橙色为默认播放的动画状态。点击播放角色开始进行闲置动画。\n![动画状态机](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画07.png)\n\n### 脚本控制\n**目标是实现：当用户键盘按下空格键，可以由一个动画状态转换为另外一个动画状态。**  \n\n一、找到另外一个动画状态，拖拽到状态机窗口里面，然后通过建立一个 Transition,把默认动画转换给新的动画片段，添加一个 Trigger 类型（触发器类型）的控制参数，起名为 next，然后点击转换箭头，在转换条件那里把条件设置为 next，当这个参数触发时才发生转换。\n![添加控制参数和转换条件](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画08.png)  \n\n二、那要怎么发生呢，那就用脚本控制，Creat 一个脚本取名为 AnimaControl，打开脚本编辑\n```C#\npublic class AnimaControl : MonoBehaviour\n{\n    private Animator anim;      //建立成员变量保存模型的Animator组件\n    // Start is called before the first frame update\n    void Start()\n    {\n        anim = GetComponent<Animator>();    //得到当前游戏物体的Animator组件\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if(Input.GetKeyDown(KeyCode.Space))     //当用户按下空格键\n        {\n            anim.SetTrigger(\"next\");            //Trigger设置为next\n        }\n    }\n}\n```\n保存后将编辑好的脚本拖拽到模型上面，按下空格转换就发生了，此时的转换是需要等待上一个动画结束后才转换的，如果不想等待，就取消掉 Has Exit Time 选项就可以了。\n![动画转换](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画09.png)\n\n### Event\n\nEvent的意思是，当这个动画片段播放到某一帧时，可以为它添加一个响应事件，**而这个事件对应着脚本里的某个函数**。所以在脚本里面可以写一个 public 类型的函数，取名为WaitFinish，我们来做一个实验。\n```C#\npublic void WaitFinish()\n    {\n        Debug.Log(\"WaitFinish\");       //在控制台输出函数被调用时输出的一句话\n    }\n```\n找到动画片段的初始文件，在初始文件属性里面有一个 Event，拖拽时间轴，把动画片段定位为某一帧，这时候可以添加一个响应事件，事件名字为函数名字，然后 Apply 保存。这意味着这个动画片段无论被应用于哪一个Animator Controller当中，当它播放到那一帧时，都会触发这个函数。\n![响应事件](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画10.png)\n\n### 重定向\n\n骨骼动画最重要的好处是**可以实现动画数据的重利用**，因为角色的动画只是保存在骨架的结构上，而骨架具有很简单的拓扑结构，如果是同样类型的生物，那么他的骨架很可能是相同的，比如人形，它内部的骨架是一样的，由于最终产生动画的是骨架的变化，所以我们有可能对一个骨架的动画，来驱动不同角色进行相同的运动，这种叫做动画重定向。\n\n#### 动画的重定向\n如果我想使用别的三维模型的动画，由于骨骼动画的支持，使得过程很便利。  \n我们去Asset Store搜索下载Standard Assets资源，它有一个第三人称控制器，里面已经包含了很多动画片段，有一个很完整的Animator Controller，来控制这些动画片段之间的过渡。  \n\n我们将第三人称的Animator Controller拖拽给模型，这时候播放就会发现她的idle状态已经变为第三人称控制器的idle状态了。\n![第三人称Animator Controller](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画11.png)\n\n然后我们又找到第三人称控制的脚本，拖拽给模型。由于这个脚本里面使用了RequireComponent，所以我们不光添加了这个脚本，还添加了这个脚本所要求的组件在模型身上，我们调整一下碰撞体大小，使得符合模型的大小。我们运行游戏的话，就会发现ASWD鼠标可以对unity-chan进行控制了。\n![第三人称控制脚本](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画12.png)\n\n#### 动画状态之间的融合\n\n我们打开unity-chan现在所挂接的Animator Controller，发现它有比较复杂的动画状态以及动画状态之间的转换。我们来看其中一个转换，这个转换是角色跳起后落地到站立的过程，她有一个过渡的过程，这个过程显得角色很自然，我们可以把这个过程拉长，这个过程就会变得很缓慢，但过程仍然很自然。当我们将其调回到原来的融合间距，这个过程会变得更加迅速和自然。\n![动画状态之间的融合](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画13.png)\n\n## 小结\n\n骨骼动画是用骨骼来保存动画信息，而我们看得见的三维网格，则是依附于骨骼进行被动地运动，这个就是骨骼动画的原理。因为我们保存的骨骼，是跟外貌无关的骨架它的运动，因此，一个骨骼动画，就有可能用来驱动多个不同的角色，这种技术被称为运动的重定向。\n\n>本章一句：  \n>这朵世间最美好的玫瑰，星尘为泥，银河滋养。永远不会枯萎，永远在沉静宇宙中盛放。 这是我要给你的，宇宙级别的浪漫。\n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/illust_90738662_20220530_202311.jpg)","source":"_posts/Unity-AnimationSystem-skeletal animation.md","raw":"---\ntitle: Unity游戏引擎-动画系统-骨骼动画\ndate: 2022-07-28 10:34:18\nimg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/e438e072-0dee-4ab9-909e-bcf263d2b67f.png\ntop: false\ncover: false\ncoverImg: https://invictusqiu.oss-cn-beijing.aliyuncs.com/e438e072-0dee-4ab9-909e-bcf263d2b67f.png\nsummary: 本期文章将介绍游戏中的骨骼动画，以及用Unity对骨骼动画进行实践操作\ncategories: Unity\ntags:\n    - Unity\n---\n\n## 骨骼动画\n### 骨骼动画的原理\n游戏里最常用的动画是骨骼动画，骨骼动画的出现是因为传统的关键帧动画存在一些问题。  \n  \n#### 传统关键帧动画存在的问题：  \n>需要保存更多的数据  \n>和游戏环境交互较少  \n>难于控制\n\n由于场景动画比较简单，如果场景里的物体也比较简单，使用关键帧方式保存不会出现大问题。**但是游戏中出现的角色普遍是由很复杂的网格组成，网格顶点数量巨大，角色形变也比较大，保存的时候就需要大量数据，占据存储空间**。  \n\n并且游戏跟普通的三维动画、影片不一样，**游戏中的角色需要和游戏中的环境发生交互**，如果角色的网格点是一些离散的三角形顶点，不包含任何语义信息，也就无法和场景发生交互，比如用手抓起武器，都不知道手该用哪一个顶点表示，导致交互很困难。  \n\n对于更进一步的**运动编辑比较难**，如果我们使用顶点保存关键帧信息，我们有一段走路、跑步运动，而我想得到快走这样一个中间动画，这就变得不现实，我们不能通过两种走路跑步的插值来融合得到。\n\n#### 骨骼动画解决问题：  \n\n使用一个中间介质，**中间介质就是骨架**，而角色的真正外观，也就是三维网格，它是依附于骨架的，进行被动地运动，骨架是主动的变化，而外围我们所看到地网格是由于骨架的变化而被动地变化，所以骨骼动画也被称为**隐式动画**。  \n\n在骨骼动画的播放阶段，由于骨架结构简单，只需要经过简单计算就可以得到骨架的姿态，进而利用网格顶点和骨架上每一骨骼的附属关系信息来计算出每个网格顶点的位置，从而得到最终我们能看见的网格的姿态，生成完整的动画，这种方式就是骨骼动画。 \n \n![骨骼动画](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画01.jpg \"骨骼动画\")  \n\n**骨骼动画的优势**  \n>骨架结构简单，可以高效保存动画的关键帧信息。  \n>\n>骨架本身含有语义信息，可以通过骨架区分出身体的不同部位，从而进行更加灵活的控制，比如我们知道骨架上哪一个骨骼是手部骨骼、腿部骨骼、头部骨骼，从而可以通过控制这些骨骼，来跟周围的环境发生交互。  \n>\n>得到一些实时计算的动画，这些动画没有事先保存。比如如何通过走路跟跑步融合得到快跑，这种情况只能使用骨骼动画的模式。\n\n![骨骼动画](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画02.png)\n骨骼动画在播放时，如上图所示，它是分离的，**骨架用来表示动画信息，周围的人物，我们看得见的网格，是依附于骨架的**。由于人物、脊椎动物，天然是由骨架形成的，所以很适合用骨架来模拟。**构成骨骼动画的完整部分，一部分是骨架，另一部分是跟骨架有映射关系的网格，也称为皮肤，通过控制骨架的运动，来控制相应皮肤的变形，形成角色动画，这就是骨骼动画的播放原理。**  \n\n\n\n## Unity骨骼动画基础实践\n\n### 准备阶段\n在Asset Store上面下载一个具有骨骼动画的模型包，在搜索栏里输入**Unity-Chan**并下载\n![Asset Store](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画03.png)  \n\n然后将下载好的资源包导入到Unity项目工程里面\n![导入资源包](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画04.png)  \n  \n### 实施阶段\n一、将模型拖入到场景视图下面\n![拖入模型](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画05.png)  \n\n二、通过Animator Controller来对骨骼动画模型进行动画状态的控制  \n**在 Project 视图下 Creat 一个 Animator Controller** 起名为 **Girl**。然后把 **Girl** 拖拽到模型的 Animator Controller 属性里面  \n![创建Animator Controller](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画06.png)  \n\n三、双击 Girl 打开这个角色动画的动画状态机界面，可以在里面添加状态，对动画状态进行转换。在 Project 视图下面找到一个动画片段。这里我找到一个等待的的状态，将它拖拽到 Animator Controller窗口底下，橙色为默认播放的动画状态。点击播放角色开始进行闲置动画。\n![动画状态机](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画07.png)\n\n### 脚本控制\n**目标是实现：当用户键盘按下空格键，可以由一个动画状态转换为另外一个动画状态。**  \n\n一、找到另外一个动画状态，拖拽到状态机窗口里面，然后通过建立一个 Transition,把默认动画转换给新的动画片段，添加一个 Trigger 类型（触发器类型）的控制参数，起名为 next，然后点击转换箭头，在转换条件那里把条件设置为 next，当这个参数触发时才发生转换。\n![添加控制参数和转换条件](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画08.png)  \n\n二、那要怎么发生呢，那就用脚本控制，Creat 一个脚本取名为 AnimaControl，打开脚本编辑\n```C#\npublic class AnimaControl : MonoBehaviour\n{\n    private Animator anim;      //建立成员变量保存模型的Animator组件\n    // Start is called before the first frame update\n    void Start()\n    {\n        anim = GetComponent<Animator>();    //得到当前游戏物体的Animator组件\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if(Input.GetKeyDown(KeyCode.Space))     //当用户按下空格键\n        {\n            anim.SetTrigger(\"next\");            //Trigger设置为next\n        }\n    }\n}\n```\n保存后将编辑好的脚本拖拽到模型上面，按下空格转换就发生了，此时的转换是需要等待上一个动画结束后才转换的，如果不想等待，就取消掉 Has Exit Time 选项就可以了。\n![动画转换](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画09.png)\n\n### Event\n\nEvent的意思是，当这个动画片段播放到某一帧时，可以为它添加一个响应事件，**而这个事件对应着脚本里的某个函数**。所以在脚本里面可以写一个 public 类型的函数，取名为WaitFinish，我们来做一个实验。\n```C#\npublic void WaitFinish()\n    {\n        Debug.Log(\"WaitFinish\");       //在控制台输出函数被调用时输出的一句话\n    }\n```\n找到动画片段的初始文件，在初始文件属性里面有一个 Event，拖拽时间轴，把动画片段定位为某一帧，这时候可以添加一个响应事件，事件名字为函数名字，然后 Apply 保存。这意味着这个动画片段无论被应用于哪一个Animator Controller当中，当它播放到那一帧时，都会触发这个函数。\n![响应事件](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画10.png)\n\n### 重定向\n\n骨骼动画最重要的好处是**可以实现动画数据的重利用**，因为角色的动画只是保存在骨架的结构上，而骨架具有很简单的拓扑结构，如果是同样类型的生物，那么他的骨架很可能是相同的，比如人形，它内部的骨架是一样的，由于最终产生动画的是骨架的变化，所以我们有可能对一个骨架的动画，来驱动不同角色进行相同的运动，这种叫做动画重定向。\n\n#### 动画的重定向\n如果我想使用别的三维模型的动画，由于骨骼动画的支持，使得过程很便利。  \n我们去Asset Store搜索下载Standard Assets资源，它有一个第三人称控制器，里面已经包含了很多动画片段，有一个很完整的Animator Controller，来控制这些动画片段之间的过渡。  \n\n我们将第三人称的Animator Controller拖拽给模型，这时候播放就会发现她的idle状态已经变为第三人称控制器的idle状态了。\n![第三人称Animator Controller](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画11.png)\n\n然后我们又找到第三人称控制的脚本，拖拽给模型。由于这个脚本里面使用了RequireComponent，所以我们不光添加了这个脚本，还添加了这个脚本所要求的组件在模型身上，我们调整一下碰撞体大小，使得符合模型的大小。我们运行游戏的话，就会发现ASWD鼠标可以对unity-chan进行控制了。\n![第三人称控制脚本](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画12.png)\n\n#### 动画状态之间的融合\n\n我们打开unity-chan现在所挂接的Animator Controller，发现它有比较复杂的动画状态以及动画状态之间的转换。我们来看其中一个转换，这个转换是角色跳起后落地到站立的过程，她有一个过渡的过程，这个过程显得角色很自然，我们可以把这个过程拉长，这个过程就会变得很缓慢，但过程仍然很自然。当我们将其调回到原来的融合间距，这个过程会变得更加迅速和自然。\n![动画状态之间的融合](https://invictusqiu.oss-cn-beijing.aliyuncs.com/骨骼动画13.png)\n\n## 小结\n\n骨骼动画是用骨骼来保存动画信息，而我们看得见的三维网格，则是依附于骨骼进行被动地运动，这个就是骨骼动画的原理。因为我们保存的骨骼，是跟外貌无关的骨架它的运动，因此，一个骨骼动画，就有可能用来驱动多个不同的角色，这种技术被称为运动的重定向。\n\n>本章一句：  \n>这朵世间最美好的玫瑰，星尘为泥，银河滋养。永远不会枯萎，永远在沉静宇宙中盛放。 这是我要给你的，宇宙级别的浪漫。\n\n![](https://invictusqiu.oss-cn-beijing.aliyuncs.com/illust_90738662_20220530_202311.jpg)","slug":"Unity-AnimationSystem-skeletal animation","published":1,"updated":"2024-09-20T08:33:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1bsqfju000gesty74wq371e","content":"<h2 id=\"骨骼动画\"><a href=\"#骨骼动画\" class=\"headerlink\" title=\"骨骼动画\"></a>骨骼动画</h2><h3 id=\"骨骼动画的原理\"><a href=\"#骨骼动画的原理\" class=\"headerlink\" title=\"骨骼动画的原理\"></a>骨骼动画的原理</h3><p>游戏里最常用的动画是骨骼动画，骨骼动画的出现是因为传统的关键帧动画存在一些问题。  </p>\n<h4 id=\"传统关键帧动画存在的问题：\"><a href=\"#传统关键帧动画存在的问题：\" class=\"headerlink\" title=\"传统关键帧动画存在的问题：\"></a>传统关键帧动画存在的问题：</h4><blockquote>\n<p>需要保存更多的数据<br>和游戏环境交互较少<br>难于控制</p>\n</blockquote>\n<p>由于场景动画比较简单，如果场景里的物体也比较简单，使用关键帧方式保存不会出现大问题。<strong>但是游戏中出现的角色普遍是由很复杂的网格组成，网格顶点数量巨大，角色形变也比较大，保存的时候就需要大量数据，占据存储空间</strong>。  </p>\n<p>并且游戏跟普通的三维动画、影片不一样，<strong>游戏中的角色需要和游戏中的环境发生交互</strong>，如果角色的网格点是一些离散的三角形顶点，不包含任何语义信息，也就无法和场景发生交互，比如用手抓起武器，都不知道手该用哪一个顶点表示，导致交互很困难。  </p>\n<p>对于更进一步的<strong>运动编辑比较难</strong>，如果我们使用顶点保存关键帧信息，我们有一段走路、跑步运动，而我想得到快走这样一个中间动画，这就变得不现实，我们不能通过两种走路跑步的插值来融合得到。</p>\n<h4 id=\"骨骼动画解决问题：\"><a href=\"#骨骼动画解决问题：\" class=\"headerlink\" title=\"骨骼动画解决问题：\"></a>骨骼动画解决问题：</h4><p>使用一个中间介质，<strong>中间介质就是骨架</strong>，而角色的真正外观，也就是三维网格，它是依附于骨架的，进行被动地运动，骨架是主动的变化，而外围我们所看到地网格是由于骨架的变化而被动地变化，所以骨骼动画也被称为<strong>隐式动画</strong>。  </p>\n<p>在骨骼动画的播放阶段，由于骨架结构简单，只需要经过简单计算就可以得到骨架的姿态，进而利用网格顶点和骨架上每一骨骼的附属关系信息来计算出每个网格顶点的位置，从而得到最终我们能看见的网格的姿态，生成完整的动画，这种方式就是骨骼动画。 </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB01.jpg\" alt=\"骨骼动画\" title=\"骨骼动画\">  </p>\n<p><strong>骨骼动画的优势</strong>  </p>\n<blockquote>\n<p>骨架结构简单，可以高效保存动画的关键帧信息。  </p>\n<p>骨架本身含有语义信息，可以通过骨架区分出身体的不同部位，从而进行更加灵活的控制，比如我们知道骨架上哪一个骨骼是手部骨骼、腿部骨骼、头部骨骼，从而可以通过控制这些骨骼，来跟周围的环境发生交互。  </p>\n<p>得到一些实时计算的动画，这些动画没有事先保存。比如如何通过走路跟跑步融合得到快跑，这种情况只能使用骨骼动画的模式。</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB02.png\" alt=\"骨骼动画\"><br>骨骼动画在播放时，如上图所示，它是分离的，<strong>骨架用来表示动画信息，周围的人物，我们看得见的网格，是依附于骨架的</strong>。由于人物、脊椎动物，天然是由骨架形成的，所以很适合用骨架来模拟。<strong>构成骨骼动画的完整部分，一部分是骨架，另一部分是跟骨架有映射关系的网格，也称为皮肤，通过控制骨架的运动，来控制相应皮肤的变形，形成角色动画，这就是骨骼动画的播放原理。</strong>  </p>\n<h2 id=\"Unity骨骼动画基础实践\"><a href=\"#Unity骨骼动画基础实践\" class=\"headerlink\" title=\"Unity骨骼动画基础实践\"></a>Unity骨骼动画基础实践</h2><h3 id=\"准备阶段\"><a href=\"#准备阶段\" class=\"headerlink\" title=\"准备阶段\"></a>准备阶段</h3><p>在Asset Store上面下载一个具有骨骼动画的模型包，在搜索栏里输入<strong>Unity-Chan</strong>并下载<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB03.png\" alt=\"Asset Store\">  </p>\n<p>然后将下载好的资源包导入到Unity项目工程里面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB04.png\" alt=\"导入资源包\">  </p>\n<h3 id=\"实施阶段\"><a href=\"#实施阶段\" class=\"headerlink\" title=\"实施阶段\"></a>实施阶段</h3><p>一、将模型拖入到场景视图下面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB05.png\" alt=\"拖入模型\">  </p>\n<p>二、通过Animator Controller来对骨骼动画模型进行动画状态的控制<br><strong>在 Project 视图下 Creat 一个 Animator Controller</strong> 起名为 <strong>Girl</strong>。然后把 <strong>Girl</strong> 拖拽到模型的 Animator Controller 属性里面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB06.png\" alt=\"创建Animator Controller\">  </p>\n<p>三、双击 Girl 打开这个角色动画的动画状态机界面，可以在里面添加状态，对动画状态进行转换。在 Project 视图下面找到一个动画片段。这里我找到一个等待的的状态，将它拖拽到 Animator Controller窗口底下，橙色为默认播放的动画状态。点击播放角色开始进行闲置动画。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB07.png\" alt=\"动画状态机\"></p>\n<h3 id=\"脚本控制\"><a href=\"#脚本控制\" class=\"headerlink\" title=\"脚本控制\"></a>脚本控制</h3><p><strong>目标是实现：当用户键盘按下空格键，可以由一个动画状态转换为另外一个动画状态。</strong>  </p>\n<p>一、找到另外一个动画状态，拖拽到状态机窗口里面，然后通过建立一个 Transition,把默认动画转换给新的动画片段，添加一个 Trigger 类型（触发器类型）的控制参数，起名为 next，然后点击转换箭头，在转换条件那里把条件设置为 next，当这个参数触发时才发生转换。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB08.png\" alt=\"添加控制参数和转换条件\">  </p>\n<p>二、那要怎么发生呢，那就用脚本控制，Creat 一个脚本取名为 AnimaControl，打开脚本编辑</p>\n<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\">public class AnimaControl : MonoBehaviour\n{\n    private Animator anim;      //建立成员变量保存模型的Animator组件\n    // Start is called before the first frame update\n    void Start()\n    {\n        anim = GetComponent&lt;Animator&gt;();    //得到当前游戏物体的Animator组件\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if(Input.GetKeyDown(KeyCode.Space))     //当用户按下空格键\n        {\n            anim.SetTrigger(\"next\");            //Trigger设置为next\n        }\n    }\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>保存后将编辑好的脚本拖拽到模型上面，按下空格转换就发生了，此时的转换是需要等待上一个动画结束后才转换的，如果不想等待，就取消掉 Has Exit Time 选项就可以了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB09.png\" alt=\"动画转换\"></p>\n<h3 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h3><p>Event的意思是，当这个动画片段播放到某一帧时，可以为它添加一个响应事件，<strong>而这个事件对应着脚本里的某个函数</strong>。所以在脚本里面可以写一个 public 类型的函数，取名为WaitFinish，我们来做一个实验。</p>\n<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\">public void WaitFinish()\n    {\n        Debug.Log(\"WaitFinish\");       //在控制台输出函数被调用时输出的一句话\n    }<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>找到动画片段的初始文件，在初始文件属性里面有一个 Event，拖拽时间轴，把动画片段定位为某一帧，这时候可以添加一个响应事件，事件名字为函数名字，然后 Apply 保存。这意味着这个动画片段无论被应用于哪一个Animator Controller当中，当它播放到那一帧时，都会触发这个函数。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB10.png\" alt=\"响应事件\"></p>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>骨骼动画最重要的好处是<strong>可以实现动画数据的重利用</strong>，因为角色的动画只是保存在骨架的结构上，而骨架具有很简单的拓扑结构，如果是同样类型的生物，那么他的骨架很可能是相同的，比如人形，它内部的骨架是一样的，由于最终产生动画的是骨架的变化，所以我们有可能对一个骨架的动画，来驱动不同角色进行相同的运动，这种叫做动画重定向。</p>\n<h4 id=\"动画的重定向\"><a href=\"#动画的重定向\" class=\"headerlink\" title=\"动画的重定向\"></a>动画的重定向</h4><p>如果我想使用别的三维模型的动画，由于骨骼动画的支持，使得过程很便利。<br>我们去Asset Store搜索下载Standard Assets资源，它有一个第三人称控制器，里面已经包含了很多动画片段，有一个很完整的Animator Controller，来控制这些动画片段之间的过渡。  </p>\n<p>我们将第三人称的Animator Controller拖拽给模型，这时候播放就会发现她的idle状态已经变为第三人称控制器的idle状态了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB11.png\" alt=\"第三人称Animator Controller\"></p>\n<p>然后我们又找到第三人称控制的脚本，拖拽给模型。由于这个脚本里面使用了RequireComponent，所以我们不光添加了这个脚本，还添加了这个脚本所要求的组件在模型身上，我们调整一下碰撞体大小，使得符合模型的大小。我们运行游戏的话，就会发现ASWD鼠标可以对unity-chan进行控制了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB12.png\" alt=\"第三人称控制脚本\"></p>\n<h4 id=\"动画状态之间的融合\"><a href=\"#动画状态之间的融合\" class=\"headerlink\" title=\"动画状态之间的融合\"></a>动画状态之间的融合</h4><p>我们打开unity-chan现在所挂接的Animator Controller，发现它有比较复杂的动画状态以及动画状态之间的转换。我们来看其中一个转换，这个转换是角色跳起后落地到站立的过程，她有一个过渡的过程，这个过程显得角色很自然，我们可以把这个过程拉长，这个过程就会变得很缓慢，但过程仍然很自然。当我们将其调回到原来的融合间距，这个过程会变得更加迅速和自然。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB13.png\" alt=\"动画状态之间的融合\"></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>骨骼动画是用骨骼来保存动画信息，而我们看得见的三维网格，则是依附于骨骼进行被动地运动，这个就是骨骼动画的原理。因为我们保存的骨骼，是跟外貌无关的骨架它的运动，因此，一个骨骼动画，就有可能用来驱动多个不同的角色，这种技术被称为运动的重定向。</p>\n<blockquote>\n<p>本章一句：<br>这朵世间最美好的玫瑰，星尘为泥，银河滋养。永远不会枯萎，永远在沉静宇宙中盛放。 这是我要给你的，宇宙级别的浪漫。</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/illust_90738662_20220530_202311.jpg\"></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"骨骼动画\"><a href=\"#骨骼动画\" class=\"headerlink\" title=\"骨骼动画\"></a>骨骼动画</h2><h3 id=\"骨骼动画的原理\"><a href=\"#骨骼动画的原理\" class=\"headerlink\" title=\"骨骼动画的原理\"></a>骨骼动画的原理</h3><p>游戏里最常用的动画是骨骼动画，骨骼动画的出现是因为传统的关键帧动画存在一些问题。  </p>\n<h4 id=\"传统关键帧动画存在的问题：\"><a href=\"#传统关键帧动画存在的问题：\" class=\"headerlink\" title=\"传统关键帧动画存在的问题：\"></a>传统关键帧动画存在的问题：</h4><blockquote>\n<p>需要保存更多的数据<br>和游戏环境交互较少<br>难于控制</p>\n</blockquote>\n<p>由于场景动画比较简单，如果场景里的物体也比较简单，使用关键帧方式保存不会出现大问题。<strong>但是游戏中出现的角色普遍是由很复杂的网格组成，网格顶点数量巨大，角色形变也比较大，保存的时候就需要大量数据，占据存储空间</strong>。  </p>\n<p>并且游戏跟普通的三维动画、影片不一样，<strong>游戏中的角色需要和游戏中的环境发生交互</strong>，如果角色的网格点是一些离散的三角形顶点，不包含任何语义信息，也就无法和场景发生交互，比如用手抓起武器，都不知道手该用哪一个顶点表示，导致交互很困难。  </p>\n<p>对于更进一步的<strong>运动编辑比较难</strong>，如果我们使用顶点保存关键帧信息，我们有一段走路、跑步运动，而我想得到快走这样一个中间动画，这就变得不现实，我们不能通过两种走路跑步的插值来融合得到。</p>\n<h4 id=\"骨骼动画解决问题：\"><a href=\"#骨骼动画解决问题：\" class=\"headerlink\" title=\"骨骼动画解决问题：\"></a>骨骼动画解决问题：</h4><p>使用一个中间介质，<strong>中间介质就是骨架</strong>，而角色的真正外观，也就是三维网格，它是依附于骨架的，进行被动地运动，骨架是主动的变化，而外围我们所看到地网格是由于骨架的变化而被动地变化，所以骨骼动画也被称为<strong>隐式动画</strong>。  </p>\n<p>在骨骼动画的播放阶段，由于骨架结构简单，只需要经过简单计算就可以得到骨架的姿态，进而利用网格顶点和骨架上每一骨骼的附属关系信息来计算出每个网格顶点的位置，从而得到最终我们能看见的网格的姿态，生成完整的动画，这种方式就是骨骼动画。 </p>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB01.jpg\" alt=\"骨骼动画\" title=\"骨骼动画\">  </p>\n<p><strong>骨骼动画的优势</strong>  </p>\n<blockquote>\n<p>骨架结构简单，可以高效保存动画的关键帧信息。  </p>\n<p>骨架本身含有语义信息，可以通过骨架区分出身体的不同部位，从而进行更加灵活的控制，比如我们知道骨架上哪一个骨骼是手部骨骼、腿部骨骼、头部骨骼，从而可以通过控制这些骨骼，来跟周围的环境发生交互。  </p>\n<p>得到一些实时计算的动画，这些动画没有事先保存。比如如何通过走路跟跑步融合得到快跑，这种情况只能使用骨骼动画的模式。</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB02.png\" alt=\"骨骼动画\"><br>骨骼动画在播放时，如上图所示，它是分离的，<strong>骨架用来表示动画信息，周围的人物，我们看得见的网格，是依附于骨架的</strong>。由于人物、脊椎动物，天然是由骨架形成的，所以很适合用骨架来模拟。<strong>构成骨骼动画的完整部分，一部分是骨架，另一部分是跟骨架有映射关系的网格，也称为皮肤，通过控制骨架的运动，来控制相应皮肤的变形，形成角色动画，这就是骨骼动画的播放原理。</strong>  </p>\n<h2 id=\"Unity骨骼动画基础实践\"><a href=\"#Unity骨骼动画基础实践\" class=\"headerlink\" title=\"Unity骨骼动画基础实践\"></a>Unity骨骼动画基础实践</h2><h3 id=\"准备阶段\"><a href=\"#准备阶段\" class=\"headerlink\" title=\"准备阶段\"></a>准备阶段</h3><p>在Asset Store上面下载一个具有骨骼动画的模型包，在搜索栏里输入<strong>Unity-Chan</strong>并下载<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB03.png\" alt=\"Asset Store\">  </p>\n<p>然后将下载好的资源包导入到Unity项目工程里面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB04.png\" alt=\"导入资源包\">  </p>\n<h3 id=\"实施阶段\"><a href=\"#实施阶段\" class=\"headerlink\" title=\"实施阶段\"></a>实施阶段</h3><p>一、将模型拖入到场景视图下面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB05.png\" alt=\"拖入模型\">  </p>\n<p>二、通过Animator Controller来对骨骼动画模型进行动画状态的控制<br><strong>在 Project 视图下 Creat 一个 Animator Controller</strong> 起名为 <strong>Girl</strong>。然后把 <strong>Girl</strong> 拖拽到模型的 Animator Controller 属性里面<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB06.png\" alt=\"创建Animator Controller\">  </p>\n<p>三、双击 Girl 打开这个角色动画的动画状态机界面，可以在里面添加状态，对动画状态进行转换。在 Project 视图下面找到一个动画片段。这里我找到一个等待的的状态，将它拖拽到 Animator Controller窗口底下，橙色为默认播放的动画状态。点击播放角色开始进行闲置动画。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB07.png\" alt=\"动画状态机\"></p>\n<h3 id=\"脚本控制\"><a href=\"#脚本控制\" class=\"headerlink\" title=\"脚本控制\"></a>脚本控制</h3><p><strong>目标是实现：当用户键盘按下空格键，可以由一个动画状态转换为另外一个动画状态。</strong>  </p>\n<p>一、找到另外一个动画状态，拖拽到状态机窗口里面，然后通过建立一个 Transition,把默认动画转换给新的动画片段，添加一个 Trigger 类型（触发器类型）的控制参数，起名为 next，然后点击转换箭头，在转换条件那里把条件设置为 next，当这个参数触发时才发生转换。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB08.png\" alt=\"添加控制参数和转换条件\">  </p>\n<p>二、那要怎么发生呢，那就用脚本控制，Creat 一个脚本取名为 AnimaControl，打开脚本编辑</p>\n<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\">public class AnimaControl : MonoBehaviour\n&#123;\n    private Animator anim;      &#x2F;&#x2F;建立成员变量保存模型的Animator组件\n    &#x2F;&#x2F; Start is called before the first frame update\n    void Start()\n    &#123;\n        anim &#x3D; GetComponent&lt;Animator&gt;();    &#x2F;&#x2F;得到当前游戏物体的Animator组件\n    &#125;\n\n    &#x2F;&#x2F; Update is called once per frame\n    void Update()\n    &#123;\n        if(Input.GetKeyDown(KeyCode.Space))     &#x2F;&#x2F;当用户按下空格键\n        &#123;\n            anim.SetTrigger(&quot;next&quot;);            &#x2F;&#x2F;Trigger设置为next\n        &#125;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>保存后将编辑好的脚本拖拽到模型上面，按下空格转换就发生了，此时的转换是需要等待上一个动画结束后才转换的，如果不想等待，就取消掉 Has Exit Time 选项就可以了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB09.png\" alt=\"动画转换\"></p>\n<h3 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h3><p>Event的意思是，当这个动画片段播放到某一帧时，可以为它添加一个响应事件，<strong>而这个事件对应着脚本里的某个函数</strong>。所以在脚本里面可以写一个 public 类型的函数，取名为WaitFinish，我们来做一个实验。</p>\n<pre class=\"line-numbers language-C#\" data-language=\"C#\"><code class=\"language-C#\">public void WaitFinish()\n    &#123;\n        Debug.Log(&quot;WaitFinish&quot;);       &#x2F;&#x2F;在控制台输出函数被调用时输出的一句话\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>找到动画片段的初始文件，在初始文件属性里面有一个 Event，拖拽时间轴，把动画片段定位为某一帧，这时候可以添加一个响应事件，事件名字为函数名字，然后 Apply 保存。这意味着这个动画片段无论被应用于哪一个Animator Controller当中，当它播放到那一帧时，都会触发这个函数。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB10.png\" alt=\"响应事件\"></p>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>骨骼动画最重要的好处是<strong>可以实现动画数据的重利用</strong>，因为角色的动画只是保存在骨架的结构上，而骨架具有很简单的拓扑结构，如果是同样类型的生物，那么他的骨架很可能是相同的，比如人形，它内部的骨架是一样的，由于最终产生动画的是骨架的变化，所以我们有可能对一个骨架的动画，来驱动不同角色进行相同的运动，这种叫做动画重定向。</p>\n<h4 id=\"动画的重定向\"><a href=\"#动画的重定向\" class=\"headerlink\" title=\"动画的重定向\"></a>动画的重定向</h4><p>如果我想使用别的三维模型的动画，由于骨骼动画的支持，使得过程很便利。<br>我们去Asset Store搜索下载Standard Assets资源，它有一个第三人称控制器，里面已经包含了很多动画片段，有一个很完整的Animator Controller，来控制这些动画片段之间的过渡。  </p>\n<p>我们将第三人称的Animator Controller拖拽给模型，这时候播放就会发现她的idle状态已经变为第三人称控制器的idle状态了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB11.png\" alt=\"第三人称Animator Controller\"></p>\n<p>然后我们又找到第三人称控制的脚本，拖拽给模型。由于这个脚本里面使用了RequireComponent，所以我们不光添加了这个脚本，还添加了这个脚本所要求的组件在模型身上，我们调整一下碰撞体大小，使得符合模型的大小。我们运行游戏的话，就会发现ASWD鼠标可以对unity-chan进行控制了。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB12.png\" alt=\"第三人称控制脚本\"></p>\n<h4 id=\"动画状态之间的融合\"><a href=\"#动画状态之间的融合\" class=\"headerlink\" title=\"动画状态之间的融合\"></a>动画状态之间的融合</h4><p>我们打开unity-chan现在所挂接的Animator Controller，发现它有比较复杂的动画状态以及动画状态之间的转换。我们来看其中一个转换，这个转换是角色跳起后落地到站立的过程，她有一个过渡的过程，这个过程显得角色很自然，我们可以把这个过程拉长，这个过程就会变得很缓慢，但过程仍然很自然。当我们将其调回到原来的融合间距，这个过程会变得更加迅速和自然。<br><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB13.png\" alt=\"动画状态之间的融合\"></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>骨骼动画是用骨骼来保存动画信息，而我们看得见的三维网格，则是依附于骨骼进行被动地运动，这个就是骨骼动画的原理。因为我们保存的骨骼，是跟外貌无关的骨架它的运动，因此，一个骨骼动画，就有可能用来驱动多个不同的角色，这种技术被称为运动的重定向。</p>\n<blockquote>\n<p>本章一句：<br>这朵世间最美好的玫瑰，星尘为泥，银河滋养。永远不会枯萎，永远在沉静宇宙中盛放。 这是我要给你的，宇宙级别的浪漫。</p>\n</blockquote>\n<p><img src=\"https://invictusqiu.oss-cn-beijing.aliyuncs.com/illust_90738662_20220530_202311.jpg\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm1bsqfjk0001esty8bhg80aw","category_id":"cm1bsqfjo0004esty6ani9j0b","_id":"cm1bsqfju000hesty0c3tafzl"},{"post_id":"cm1bsqfjq0007estyd314ftuj","category_id":"cm1bsqfjt000cesty00pr6ejw","_id":"cm1bsqfjv000kesty8kpv8xol"},{"post_id":"cm1bsqfjs0009esty7c355b6x","category_id":"cm1bsqfjv000iestyadee6s2o","_id":"cm1bsqfjv000nesty95rnh3uc"},{"post_id":"cm1bsqfjt000besty91969rze","category_id":"cm1bsqfjv000lesty0ibt6clr","_id":"cm1bsqfjw000qestyfgzk3o4q"},{"post_id":"cm1bsqfju000gesty74wq371e","category_id":"cm1bsqfjw000oesty1qsi7p1n","_id":"cm1bsqfjw000uesty58pq4mub"}],"PostTag":[{"post_id":"cm1bsqfjk0001esty8bhg80aw","tag_id":"cm1bsqfjq0005esty7s9x9oeh","_id":"cm1bsqfjt000eestyctu46wz7"},{"post_id":"cm1bsqfjq0007estyd314ftuj","tag_id":"cm1bsqfjt000destyf2n5gngf","_id":"cm1bsqfjw000sesty9ie6ht7w"},{"post_id":"cm1bsqfjq0007estyd314ftuj","tag_id":"cm1bsqfjv000jestyd9au48t9","_id":"cm1bsqfjw000testy6f676o3g"},{"post_id":"cm1bsqfjq0007estyd314ftuj","tag_id":"cm1bsqfjv000mesty6yf720pf","_id":"cm1bsqfjw000westyb8rpfbhm"},{"post_id":"cm1bsqfjq0007estyd314ftuj","tag_id":"cm1bsqfjw000pestygo2s0b6m","_id":"cm1bsqfjw000xesty4yf10g3j"},{"post_id":"cm1bsqfjs0009esty7c355b6x","tag_id":"cm1bsqfjw000resty9ylcb7pz","_id":"cm1bsqfjx000zestyczb74siz"},{"post_id":"cm1bsqfjt000besty91969rze","tag_id":"cm1bsqfjw000vesty4f2pgugn","_id":"cm1bsqfjx0013estygawfc433"},{"post_id":"cm1bsqfjt000besty91969rze","tag_id":"cm1bsqfjx000yesty95wocf76","_id":"cm1bsqfjx0014esty9j6fcyky"},{"post_id":"cm1bsqfjt000besty91969rze","tag_id":"cm1bsqfjx0010esty7b689uki","_id":"cm1bsqfjx0015esty1uq89f64"},{"post_id":"cm1bsqfjt000besty91969rze","tag_id":"cm1bsqfjx0011esty5jmx1r6m","_id":"cm1bsqfjx0016estyb5xafcuz"},{"post_id":"cm1bsqfju000gesty74wq371e","tag_id":"cm1bsqfjx0012estyesh2047c","_id":"cm1bsqfjy0017esty1lu87ob5"}],"Tag":[{"name":"C","_id":"cm1bsqfjq0005esty7s9x9oeh"},{"name":"Hexo","_id":"cm1bsqfjt000destyf2n5gngf"},{"name":"Git","_id":"cm1bsqfjv000jestyd9au48t9"},{"name":"Nginx","_id":"cm1bsqfjv000mesty6yf720pf"},{"name":"云服务器","_id":"cm1bsqfjw000pestygo2s0b6m"},{"name":"Markdown","_id":"cm1bsqfjw000resty9ylcb7pz"},{"name":"Java","_id":"cm1bsqfjw000vesty4f2pgugn"},{"name":"Spring Boot","_id":"cm1bsqfjx000yesty95wocf76"},{"name":"Spring Cloud","_id":"cm1bsqfjx0010esty7b689uki"},{"name":"Vue","_id":"cm1bsqfjx0011esty5jmx1r6m"},{"name":"Unity","_id":"cm1bsqfjx0012estyesh2047c"}]}}